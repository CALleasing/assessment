{"version":3,"sources":["src/constants/variables.js","src/constants/theme.js","src/screens/HomeScreen.js","src/screens/AssessmentScreen.js","src/screens/StaffQuestionnaireScreen.js","src/screens/ManagerQuestionnaireScreen.js","src/screens/VideoWebViewScreen.js","src/components/context.js","src/screens/LoginScreen.js","src/screens/RootStackScreen.js","src/screens/UserListScreen.js","src/screens/SelectQuestionScreen.js","src/screens/CreateQuestionScreen.js","src/screens/StaffCommentScreen.js","src/screens/ManagerListScreen.js","src/screens/EmployeeStatusSelectScreen.js","src/screens/EmployeeStatusScreen.js","src/screens/EmployeeStatusCommentScreen.js","App.js","node_modules/moment/locale sync /^/.//.*$"],"names":["USER","userid","position","department","name","lastname","nickname","phone","MAIN_URL","Dimensions","get","width","height","COLORS","primary","secondary","black","white","lightGray","lightGray2","lightGray3","lightGray4","transparent","darkgray","SIZES","base","font","radius","padding","padding2","largeTitle","h1","h2","h3","h4","body1","body2","body3","body4","body5","styles","StyleSheet","create","container","flex","containeralt","alignItems","backgroundColor","borderColor","borderRadius","borderWidth","justifyContent","margin","text_header","fontSize","fontWeight","color","alignSelf","tab_style","imageThumbnail","linear_gradient","header","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","shadow","HomeScreen","navigation","route","useState","dialogAdmin","setDialogAdmin","list","id","iconName","detail","SafeAreaView","animation","LinearGradient","style","colors","Text","View","data","renderItem","item","TouchableOpacity","flexDirection","marginVertical","paddingBottom","marginHorizontal","onPress","navigate","size","marginTop","marginBottom","numColumns","keyExtractor","index","renderMenuItem","show","title","message","closeOnTouchOutside","confirmText","showConfirmButton","confirmButtonColor","onConfirmPressed","AssessmentScreen","sheetID","params","presentYear","Date","passedYear","setFullYear","getFullYear","allYear","push","Button","mode","userId","year","moment","format","part","fontStyle","renderYearList","StaffQuestionnaireScreen","answer","answerStaff","setAnswerStaff","isLoading","setLoading","staffAnswer","isEditVideo","setIsEditVideo","staffAnswerList","postAnswer","axiox","post","number","then","res","console","log","alert","catch","err","useEffect","resStaff","length","FlatList","extraData","qt","undefined","TextInput","placeholder","placeholderTextColor","multiline","onChangeText","text","answerObject","videoURL","date","defaultValue","ListHeaderComponent","stickyHeaderIndices","renderQuestionnaireAllStaff","marginRight","Platform","OS","window","open","marginLeft","showCancelButton","customView","cancelText","onCancelPressed","currentObject","ActivityIndicator","left","right","top","bottom","ManagerQuestionnaireScreen","managerList","setManagerList","managerAnswer","managerAnswerList","useFocusEffect","React","useCallback","resManager","paddingHorizontal","numberOfLines","user_id","value","renderQuestionnaireManager","VideoWebViewScreen","URL","javaScriptEnabled","source","uri","AuthContext","createContext","containerMobile","footer","borderTopLeftRadius","borderTopRightRadius","paddingVertical","logo","action","borderBottomWidth","borderBottomColor","text_input","paddingLeft","text_footer","LoginScreen","textError","setTextError","setIsLoading","username","password","check_textInputChange","secureTextEntry","setData","loginSaveState","userData","a","async","jsonAllValue","JSON","stringify","AsyncStorage","setItem","getItem","jsonValue","userInfo","parse","loginHandle","checkLoginState","signIn","useContext","val","textInputChange","handlePasswordChange","object","login","RootStack","createStackNavigator","RootStackScreen","Navigator","headerMode","Screen","component","textInput","UserListScreen","users","setUsers","arrayholder","setArrayholder","setText","getUsers","choiceCount","getDepartment","newData","filter","itemData","textData","indexOf","searchData","underlineColorAndroid","shouldComponentUpdate","user","renderUsers","SelectQuestionScreen","sheetId","type","CreateQuestionScreen","allQuestion","setAllQuestion","setNumber","setQuestion","deleteNumber","getAllQuestion","delete","question","StaffCommentScreen","checkboxContainer","checkbox","label","managerID","loadingPage","setLoadingPage","answerForManger","setAnswerFormanager","questionWithAnswer","setQuestionWithAnswer","checked","setChecked","getAnswerWithManagerId","getAllQuestionWithAnswer","mapAnserToGroup","allAnswerGroup","answerGroup","lastUserid","i","obj","all_answer","renderUserWithAllAnswer","reveal","scrollEnabled","showsVerticalScrollIndicator","renderManagerCheck","dataSend","manager_id","ManagerListScreen","getManagerList","EmployeeStatusSelectScreen","EmployeeStatusScreen","selected","setSelected","setAnswer","reason","setReason","title_name","ListFooterComponent","manager_name","manager_lastname","manager_nickname","EmployeeStatusCommentScreen","loading","getAllEmployeeAssessment","Alert","deleteComment","Stack","Tab","createMaterialTopTabNavigator","Questionnaire","options","initialParams","App","useReducer","prevState","userToken","token","userName","loginState","dispacth","authContext","useMemo","signOut","Provider","NavigationContainer","screenOptions","headerShown","headerRight","removeItem","initialRouteName","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/app.f0a5bc75.chunk.js","sourcesContent":["export var USER = {\n    userid: '',\n    position: '',\n    department: '',\n    name: '',\n    lastname: '',\n    nickname: '',\n    phone: ''\n};\n\nexport var TYPE = {\n    year: '',\n    part: ''\n}\n\n// export var MAIN_URL = 'http://localhost:8080'\nexport var MAIN_URL = 'https://cal-assessment-api.herokuapp.com'","import { Dimensions } from \"react-native\";\nconst { width, height } = Dimensions.get(\"window\");\n\nexport const COLORS = {\n    // base colors\n    primary: \"#0275d8\", // blue\n    secondary: \"#53c2e7\",   // darkblue\n\n    // colors\n    black: \"#1E1F20\",\n    white: \"#FFFFFF\",\n\n    lightGray: \"#F5F5F6\",\n    lightGray2: \"#F6F6F7\",\n    lightGray3: \"#EFEFF1\",\n    lightGray4: \"#F8F8F9\",\n    transparent: \"transparent\",\n    darkgray: '#898C95',\n};\n\nexport const SIZES = {\n    // global sizes\n    base: 8,\n    font: 14,\n    radius: 30,\n    padding: 10,\n    padding2: 12,\n\n    // font sizes\n    largeTitle: 50,\n    h1: 30,\n    h2: 22,\n    h3: 20,\n    h4: 18,\n    body1: 30,\n    body2: 20,\n    body3: 16,\n    body4: 14,\n    body5: 12,\n\n    // app dimensions\n    width,\n    height\n};\n\nexport const FONTS = {\n    largeTitle: { fontSize: SIZES.largeTitle, lineHeight: 55 },\n    h1: { fontSize: SIZES.h1, lineHeight: 36 },\n    h2: { fontSize: SIZES.h2, lineHeight: 30 },\n    h3: { fontSize: SIZES.h3, lineHeight: 22 },\n    h4: { fontSize: SIZES.h4, lineHeight: 22 },\n    body1: { fontSize: SIZES.body1, lineHeight: 36 },\n    body2: { fontSize: SIZES.body2, lineHeight: 30 },\n    body3: { fontSize: SIZES.body3, lineHeight: 22 },\n    body4: { fontSize: SIZES.body4, lineHeight: 22 },\n    body5: { fontSize: SIZES.body5, lineHeight: 22 },\n};\n\nconst appTheme = { COLORS, SIZES, FONTS };\n\nexport default appTheme;","import React, { useState } from 'react';\nimport { Modal, SafeAreaView, View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport AwesomeAlert from 'react-native-awesome-alerts';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { Button, Card } from 'react-native-paper';\nimport * as Animatable from 'react-native-animatable';\nimport { USER } from '../constants/variables';\n\n// import Dialog from \"react-native-dialog\";\n\nimport { SIZES, COLORS, FONTS } from '../constants/theme';\nimport { render } from 'react-dom';\n\nconst HomeScreen = ({ navigation, route }) => {\n\n    const userid = USER.userid;\n    const position = USER.position;\n    const department = USER.department;\n\n    // console.log(userid);\n\n    const [dialogAdmin, setDialogAdmin] = useState(false);\n\n    const list = [\n        {\n            id: 1,\n            iconName: 'tasks',\n            detail: \"ทำแบบประเมิน\",\n            position: \"พนักงานและ ผจก.\"\n        },\n        {\n            id: 4,\n            iconName: 'users',\n            detail: \"ความเห็นถึง ผจก.\",\n            position: \"พนักงานและ ผจก.\"\n        },\n        {\n            id: 2,\n            iconName: 'check-square',\n            detail: \"ดูคำตอบทุกคน\",\n            position: \"ผู้จัดการ\"\n        },\n        {\n            id: 3,\n            iconName: 'question-circle',\n            detail: \"ตั้งคำถาม\",\n            position: \"admin\",\n        },\n        {\n            id: 5,\n            iconName: 'address-book',\n            detail: \"ประเมินสถานะพนักงานในทีม\",\n            position: \"ผู้จัดการ\"\n        },\n    ]\n\n    const renderMenuItem = ({ navigation }) => {\n        // const [selectedCategory, setSelectedCategory] = useState(null)\n\n        const renderItem = ({ item }) => {\n            return (\n                <TouchableOpacity\n                    style={{\n                        flex: 1,\n                        flexDirection: 'column',\n                        marginVertical: 16,\n                        padding: 8,\n                        paddingBottom: SIZES.padding,\n                        backgroundColor: COLORS.white,\n                        borderRadius: 10,\n                        alignItems: \"center\",\n                        justifyContent: 'space-between',\n                        marginHorizontal: 16,\n                        ...styles.shadow\n                    }}\n                    onPress={() => {\n                        {\n                            // console.log(item.id);\n                            // console.log(position);\n                            // console.log(USER.department);\n                            switch (item.id) {\n                                case 1: navigation.navigate('Assessment', { item: item.id });\n                                    break;\n                                case 2: position === 'admin' || position === 'ผู้จัดการ' ?\n                                    navigation.navigate('Assessment', { item: item.id }) :\n                                    setDialogAdmin(true);\n                                    break;\n                                case 3: position === 'ผู้จัดการ' && department === 'MD' ?\n                                    navigation.navigate('Assessment', { item: item.id }) :\n                                    setDialogAdmin(true);\n                                    break;\n                                case 4: navigation.navigate('Assessment', { item: item.id });\n                                    break;\n                                case 5: position === 'ผู้จัดการ' ?\n                                    navigation.navigate('EmployeeStatusSelect', { item: item.id }) :\n                                    setDialogAdmin(true);\n                                    break;\n                                default: break;\n                            }\n                        }\n\n                    }} >\n\n                    <Icon name={item.iconName}\n                        color={COLORS.primary}\n                        size={60} />\n                    <Text\n                        style={{\n                            fontSize: 16,\n                            marginTop: 8,\n                            marginBottom: 4,\n                            alignSelf: 'center',\n                            // color: (selectedCategory?.id == item.id) ? COLORS.white : COLORS.black,\n                            // ...FONTS.body3\n                        }}\n                    >\n                        {item.detail}\n                    </Text>\n                    <Text\n                        style={{\n                            marginBottom: 8,\n                            color: 'green'\n                        }}\n                    >\n                        (สำหรับ {item.position})\n                    </Text>\n                </TouchableOpacity >\n            );\n        }\n\n        return (\n            <FlatList\n                data={list}\n                renderItem={renderItem}\n                numColumns={2}\n                keyExtractor={(item, index) => `${index}`}\n            />\n        );\n    }\n\n    return (\n        // <ScrollView>\n        <SafeAreaView >\n            <Animatable.View\n                animation='fadeIn'>\n                <LinearGradient\n                    style={styles.linear_gradient}\n                    colors={[COLORS.primary, COLORS.primary]} >\n                    <Text style={styles.text_header}>แบบประเมิน</Text>\n                </LinearGradient>\n                {/* <View style={{ marginTop: 16, alignSelf: 'center', justifyContent: 'center' }}> */}\n                <Text style={{ margin: 16, alignSelf: 'center', fontSize: 16, color: 'blue' }}>\n                    สวัสดีคุณ : {USER.name} {USER.lastname}  ({USER.department})\n                </Text>\n                {/* </View> */}\n                <View>\n                    {renderMenuItem({ navigation })}\n                </View>\n            </Animatable.View>\n\n            <AwesomeAlert\n                show={dialogAdmin}\n                title=\"ผิดพลาด\"\n                message=\"Admin หรือ ผู้จัดการ เท่านั้นที่สามารถดูได้\"\n                closeOnTouchOutside={false}\n                confirmText=\"ตกลง\"\n                showConfirmButton={true}\n                confirmButtonColor={COLORS.primary}\n                onConfirmPressed={() => {\n                    setDialogAdmin(false);\n                }}\n            />\n\n        </SafeAreaView>\n    );\n\n\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    containeralt: {\n        alignItems: 'center',\n        backgroundColor: 'white',\n        borderColor: '#eee',\n        borderRadius: 10,\n        borderWidth: 1,\n        justifyContent: 'center',\n        height: 300,\n        margin: 'auto',\n        padding: 30,\n        width: 300\n    },\n    text_header: {\n        padding: 8,\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: 'white',\n        alignSelf: 'center'\n    },\n    tab_style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    imageThumbnail: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: 50,\n        width: 50\n    },\n    linear_gradient: {\n        height: 48\n    },\n    header: {\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 1,\n        },\n        shadowOpacity: 0.20,\n        shadowRadius: 1.41,\n\n        elevation: 2,\n    },\n    shadow: {\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 1,\n        },\n        shadowOpacity: 0.20,\n        shadowRadius: 1.41,\n\n        elevation: 2,\n    }\n});\n\nexport default HomeScreen;","import React from 'react';\nimport { View, Text, SafeAreaView, StyleSheet, ScrollView } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Button, Card } from 'react-native-paper';\nimport { FlatList } from 'react-native-gesture-handler';\nimport * as Animatable from 'react-native-animatable';\n\nimport moment from 'moment';\nimport 'moment/locale/th';\nimport { TYPE, USER } from '../constants/variables';\n\nconst AssessmentScreen = ({ navigation, route }) => {\n\n    let sheetID = route.params.item;\n    // console.log(sheetID);\n    let presentYear = new Date();\n    let passedYear = new Date();\n    passedYear.setFullYear(presentYear.getFullYear() - 5);\n    // console.log(passedYear);\n\n    var allYear = [];\n\n    const renderYearList = ({ navigation }) => {\n        while (presentYear > passedYear) {\n            allYear.push(new Date(presentYear));\n            presentYear.setFullYear(presentYear.getFullYear() - 1);\n        }\n\n        const renderItem = ({ item }) => {\n            // if(checkDate != undefined && Object.entries(checkDate).length !== 0){\n            return (\n                <View style={{ flexDirection: 'row', justifyContent: 'space-evenly' }}>\n                    <Button\n                        style={{\n                            backgroundColor: '#4682B4',\n                            borderRadius: 10,\n                            marginVertical: 8,\n                            padding: 8,\n                        }}\n                        mode=\"Contained\"\n                        onPress={() => {\n                            switch (sheetID) {\n                                case 1:\n                                    navigation.navigate('Questionnaire',\n                                        {\n                                            userId: USER.userid,\n                                            sheetID: sheetID,\n                                            year: moment(item).format('yyyy'),\n                                            part: 1\n                                        }\n                                    );\n                                    break;\n\n                                case 2:\n                                    navigation.navigate('UserList',\n                                        {\n                                            userId: null,\n                                            sheetID: sheetID,\n                                            year: moment(item).format('yyyy'),\n                                            part: 1\n                                        }\n\n                                    );\n                                    break;\n                                case 3:\n                                    navigation.navigate('SelectQuestion',\n                                        {\n                                            userId: null,\n                                            sheetID: sheetID,\n                                            year: moment(item).format('yyyy'),\n                                            part: 1\n                                        }\n                                    );\n                                    break;\n                                case 4:\n                                    if (USER.position != 'ผู้จัดการ') {\n                                        navigation.navigate('ManagerList', {\n                                            userId: USER.userid,\n                                            sheetID: sheetID,\n                                            year: moment(item).format('yyyy'),\n                                            part: 1\n                                        })\n                                    }\n                                    else {\n                                        navigation.navigate('StaffComment',\n                                            {\n                                                userId: USER.userid,\n                                                sheetID: sheetID,\n                                                year: moment(item).format('yyyy'),\n                                                part: 1\n                                            }\n                                        )\n                                    }\n\n                                    break;\n                                default: break;\n                            }\n                        }} >\n\n                        <Text style={{\n                            color: 'white',\n                            fontSize: 24,\n                            fontStyle: 'italic',\n                            fontWeight: 'bold',\n                            alignSelf: 'center'\n                        }}>{moment(item).format('yyyy')}-1</Text>\n\n                    </Button>\n\n                    <Button\n                        style={{\n                            backgroundColor: '#2E8B57',\n                            borderRadius: 10,\n                            marginVertical: 8,\n                            padding: 8,\n                        }}\n                        mode=\"Contained\"\n                        onPress={() => {\n                            switch (sheetID) {\n                                case 1:\n                                    navigation.navigate('Questionnaire',\n                                        {\n                                            userId: USER.userid,\n                                            sheetID: sheetID,\n                                            year: moment(item).format('yyyy'),\n                                            part: 2\n                                        }\n                                    );\n                                    break;\n\n                                case 2:\n                                    navigation.navigate('UserList',\n                                        {\n                                            userId: null,\n                                            sheetID: sheetID,\n                                            year: moment(item).format('yyyy'),\n                                            part: 2\n                                        }\n\n                                    );\n                                    break;\n                                case 3:\n                                    navigation.navigate('SelectQuestion',\n                                        {\n                                            userId: null,\n                                            sheetID: sheetID,\n                                            year: moment(item).format('yyyy'),\n                                            part: 2\n                                        }\n                                    );\n                                    break;\n                                case 4:\n                                    if (USER.position != 'ผู้จัดการ') {\n                                        navigation.navigate('ManagerList', {\n                                            userId: USER.userid,\n                                            sheetID: sheetID,\n                                            year: moment(item).format('yyyy'),\n                                            part: 2\n                                        })\n                                    }\n                                    else {\n                                        navigation.navigate('StaffComment',\n                                            {\n                                                userId: USER.userid,\n                                                sheetID: sheetID,\n                                                year: moment(item).format('yyyy'),\n                                                part: 2\n                                            }\n                                        )\n                                    };\n                                    break;\n                                default: break;\n                            }\n                        }\n                        }>\n\n                        <Text style={{\n                            color: 'white',\n                            fontSize: 24,\n                            fontStyle: 'italic',\n                            fontWeight: 'bold',\n                            alignSelf: 'center'\n                        }}>{moment(item).format('yyyy')}-2</Text>\n\n                    </Button>\n                </View>\n\n            );\n        }\n\n        return (\n            <FlatList\n                data={allYear}\n                keyExtractor={(item) => `${item}`}\n                renderItem={renderItem}\n            // horizontal\n            // showsHorizontalScrollIndicator={false}\n            />\n        );\n    }\n\n    return (\n        <Animatable.View style={{ flex: 1, backgroundColor: 'white' }}\n            animation='fadeIn'>\n            {renderYearList({ navigation })}\n        </Animatable.View>\n    );\n}\n\nconst styles = StyleSheet.create({\n\n});\n\nexport default AssessmentScreen;","import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, SafeAreaView, FlatList, StyleSheet, Platform, ActivityIndicator, ScrollView } from 'react-native';\nimport { Button, Card } from 'react-native-paper';\nimport { useFocusEffect } from '@react-navigation/native';\n// import { FlatList } from 'react-native-gesture-handler';\n// import Dialog from \"react-native-dialog\";\nimport axiox from 'axios';\nimport { COLORS, SIZES } from '../constants/theme';\nimport { MAIN_URL, USER } from '../constants/variables';\nimport moment from 'moment';\n\nimport AwesomeAlert from 'react-native-awesome-alerts';\n\nconst StaffQuestionnaireScreen = ({ navigation, route }) => {\n    // console.log(route);\n\n    let sheetID = route.params.sheetID;\n    const userId = route.params.userId;\n    // console.log(userId);\n    const year = route.params.year;\n    const part = route.params.part;\n\n    var answer = {};\n\n    const [answerStaff, setAnswerStaff] = useState([]);\n\n    const [isLoading, setLoading] = useState(false);\n    // const [dialogURL, setDialogURL] = useState(false);\n\n    // Answer\n    const [staffAnswer, setStaffAnswer] = useState([]);\n    // Video URL\n    const [isEditVideo, setIsEditVideo] = useState(false);\n\n    // var checkStaffAnswer = [];\n    var staffAnswerList = [];\n\n    const getStaff = () => {\n        axiox.get(MAIN_URL + '/answer/staff/' + year + '/' + part + '/' + userId)\n            .then(resStaff => {\n                setAnswerStaff(resStaff.data);\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    };\n\n    const postAnswer = () => {\n        setLoading(true);\n        axiox.post(MAIN_URL + '/answer/staff/' + year + '/' + part + '/' + userId + '/' + answer.number, answer)\n            .then(res => {\n                console.log(res.data);\n\n                alert(\"บันทึกข้อมูลสำเร็จ\");\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err);\n                alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                setLoading(false);\n            });\n    }\n\n    // useFocusEffect(\n    //     React.useCallback(() => {\n    //         return () => getStaff();\n    //     }, [])\n    // );\n\n    useEffect(() => {\n        setLoading(true);\n        getStaff();\n    }, []);\n\n    const renderQuestionnaireAllStaff = ({ navigation }) => {\n\n        const renderItem = ({ item, index }) => {\n            staffAnswerList[index] = item.answer;\n            return (\n                <View style={{\n                    margin: 8,\n                    borderWidth: 1,\n                    // borderColor: 'gray',\n                    borderRadius: 5,\n                    elevation: 5,\n                    padding: 8,\n                    backgroundColor: '#fff'\n                    // borderColor: COLORS.primary\n                    // \n                }} >\n                    <Text style={{\n                        fontSize: 16,\n                        fontWeight: 'bold',\n\n                    }}>{item.number}. {item.qt}</Text>\n\n                    {sheetID === 1 ?\n                        item.answer === undefined ?\n                            <View>\n                                <TextInput\n                                    style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, height: 150 }}\n                                    // textContentType='telephoneNumber'\n                                    placeholder=\"คำตอบ\"\n                                    placeholderTextColor=\"gray\"\n                                    multiline\n                                    // blurOnSubmit={true}\n                                    // numberOfLines={6}\n                                    color='blue'\n                                    fontSize={16}\n                                    onChangeText={text => {\n                                        staffAnswer[index] = text;\n                                    }}\n                                />\n                                <Button\n                                    style={{\n                                        backgroundColor: 'gray',\n                                        borderRadius: 10,\n                                        marginVertical: 8\n                                    }}\n                                    mode=\"Contained\"\n                                    onPress={() => {\n                                        // dialogConfirmAnswer({ index });\n\n                                        // confirmAlert();\n                                        // console.log(staffAnswer[index]);\n                                        if (staffAnswer[index] != undefined) {\n                                            var answerObject = {\n                                                userid: USER.userid,\n                                                videoURL: item.videoURL,\n                                                answer: staffAnswer[index],\n                                                number: item.number,\n                                                qt: item.qt,\n                                                date: moment().format('yyyy-MM-DD'),\n                                                year: year\n                                            };\n                                            answer = answerObject;\n\n                                            postAnswer();\n\n                                            item.answer = staffAnswer[index];\n\n                                        }\n\n                                        else {\n                                            alert(\"ข้อมูลไม่ได้ถูกแก้ไข กรุณาแก้ไขข้อมูลก่อนบันทึก\");\n                                        }\n\n                                        // console.log(questionAllStaffList);\n\n                                    }}>\n                                    <Text style={{ alignSelf: 'center', color: 'white' }}>ส่งคำตอบ</Text>\n\n                                </Button>\n                            </View>\n\n                            :\n\n                            <View>\n                                <TextInput\n                                    style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, height: 150 }}\n                                    // textContentType='telephoneNumber'\n                                    placeholder=\"คำตอบ\"\n                                    placeholderTextColor=\"gray\"\n                                    multiline\n                                    // blurOnSubmit={true}\n                                    // numberOfLines={6}\n                                    color='blue'\n                                    fontSize={16}\n                                    onChangeText={text => {\n                                        staffAnswer[index] = text;\n                                    }}\n                                    defaultValue={staffAnswerList[index]}\n                                />\n                                <Button\n                                    style={{\n                                        backgroundColor: 'green',\n                                        borderRadius: 10,\n                                        marginVertical: 8\n                                    }}\n                                    mode=\"Contained\"\n                                    onPress={() => {\n\n                                        console.log(staffAnswer);\n                                        if (staffAnswer[index] != undefined) {\n                                            var answerObject = {\n                                                userid: USER.userid,\n                                                videoURL: item.videoURL,\n                                                answer: staffAnswer[index],\n                                                number: item.number,\n                                                qt: item.qt,\n                                                date: moment().format('yyyy-MM-DD'),\n                                                year: year\n                                            };\n\n                                            answer = answerObject;\n\n                                            postAnswer();\n\n                                            item.answer = staffAnswer[index];\n                                        }\n                                        else {\n                                            alert(\"ข้อมูลไม่ได้ถูกแก้ไข กรุณาแก้ไขข้อมูลก่อนบันทึก\");\n                                        }\n\n                                        // console.log(questionAllStaffList);\n\n                                    }}>\n                                    <Text style={{ alignSelf: 'center', color: 'white' }}>ส่งคำตอบอีกครั้ง</Text>\n\n                                </Button>\n                            </View>\n\n                        :\n\n                        // Sheet id = 2 || ดูคำตอบของ user ที่เลือก\n                        <View>\n                            <Text\n                                style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, color: 'blue' }}\n                                fontSize={16}\n                            >\n                                {item.answer}\n                            </Text>\n\n                        </View>\n                    }\n                </View>\n\n            );\n        }\n\n        if (isLoading === false && answerStaff.length === 0) {\n            return (\n                <View style={{\n                    alignItems: 'center',\n                    marginTop: 48\n                }}>\n                    <Text style={{\n                        fontSize: 24,\n                        color: 'red',\n                        justifyContent: 'center',\n                    }}>ไม่พบแบบประเมิน</Text>\n                </View>\n            );\n        } else {\n            return (\n\n                <FlatList\n                    data={answerStaff}\n                    extraData={answerStaff}\n                    keyExtractor={(item, index) => `${index}`}\n                    renderItem={renderItem}\n                    ListHeaderComponent={() => {\n                        return (\n                            <View style={{ backgroundColor: '#D3D3D3' }}>\n                                <View style={{ padding: 8, backgroundColor: COLORS.primary, width: '100%' }}>\n                                    <Text style={{ alignSelf: 'center', color: 'white', fontSize: 20 }}>\n                                        แบบประเมิน พนักงานทุกระดับ\n                                    </Text>\n                                </View>\n                                <Text style={{ marginVertical: 4, alignSelf: 'center', color: 'red' }}>*** กดส่งคำตอบทุกครั้งก่อนจะทำข้อใหม่ ***</Text>\n                            </View>\n\n                        );\n                    }}\n                    stickyHeaderIndices={[0]}\n                />\n            );\n        }\n\n    }\n\n    const renderCustomViewInput = () => (\n        <TextInput\n            style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginHorizontal: 16, width: SIZES.width / 2 }}\n            // textContentType='telephoneNumber'\n            placeholder=\":url\"\n            placeholderTextColor=\"gray\"\n            multiline\n            // numberOfLines={6}\n            color='blue'\n            fontSize={16}\n            onChangeText={text => {\n                // setAnserError(false);\n                // setVideoLink(text)\n                answerStaff[0].videoURL = text\n            }}\n        />\n    )\n\n    // QuestionnaireScreen\n\n    return (\n        <SafeAreaView style={{ flex: 1 }}>\n\n            {renderQuestionnaireAllStaff({ navigation })}\n\n            {sheetID === 1 ?\n                answerStaff.length != 0 && (answerStaff[0].videoURL === undefined || answerStaff[0].videoURL === \"\") ?\n\n                    <View style={{ margin: 16 }}>\n                        <Button style={{\n                            backgroundColor: COLORS.primary,\n                            borderRadius: 10,\n                            marginVertical: 8\n                        }}\n                            mode=\"Contained\"\n                            onPress={() => { setIsEditVideo(true) }}>\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>เพิ่มลิ้งค์วิดีโอ</Text>\n                        </Button>\n                    </View>\n\n                    :\n                    answerStaff.length != 0 && answerStaff[0].videoURL != \"\" ?\n                        <View style={{ margin: 16, flexDirection: 'row', justifyContent: 'center' }}>\n                            <Button style={{\n                                flex: 1,\n                                backgroundColor: COLORS.primary,\n                                borderRadius: 10,\n                                marginVertical: 8,\n                                marginRight: 4\n\n                            }}\n                                mode=\"Contained\"\n                                onPress={() => {\n                                    // console.log(questionAllStaffList[0].videoURL);\n                                    {\n                                        Platform.OS === \"web\" ?\n                                            window.open(answerStaff[0].videoURL) :\n                                            navigation.navigate('VideoWebView', { videoURL: answerStaff[0].videoURL })\n                                    }\n\n\n                                }}>\n                                <Text style={{ alignSelf: 'center', color: 'white' }}>ดูวิดีโอ</Text>\n                            </Button>\n\n                            <Button style={{\n                                flex: 1,\n                                backgroundColor: COLORS.primary,\n                                borderRadius: 10,\n                                marginVertical: 8,\n                                marginLeft: 4\n                            }}\n                                mode=\"Contained\"\n                                onPress={() => { setIsEditVideo(true) }}>\n                                <Text style={{ alignSelf: 'center', color: 'white' }}>แก้ไขลิ้งค์</Text>\n                            </Button>\n                        </View>\n                        :\n                        null\n\n                :\n\n                <View style={{ margin: 16, flexDirection: 'row', justifyContent: 'center' }}>\n                    <Button style={{\n                        flex: 1,\n                        backgroundColor: COLORS.primary,\n                        borderRadius: 10,\n                        marginVertical: 8,\n                        marginRight: 4\n\n                    }}\n                        mode=\"Contained\"\n                        onPress={() => {\n                            // console.log(questionManagerList[0].videoURL);\n                            navigation.navigate('VideoWebView', { videoURL: answerStaff[0].videoURL })\n\n                        }}>\n                        <Text style={{ alignSelf: 'center', color: 'white' }}>ดูวิดีโอ</Text>\n                    </Button>\n\n                </View>\n            }\n\n            <AwesomeAlert\n                show={isEditVideo}\n                title=\"เพิ่มลิ้งค์วิดีโอ\"\n                // message=\"เพิ่มลิ้งวิดีโอ\"\n                closeOnTouchOutside={false}\n                confirmText=\"ตกลง\"\n                showConfirmButton={true}\n                showCancelButton={true}\n                customView={renderCustomViewInput()}\n                confirmButtonColor={COLORS.primary}\n                cancelText=\"ยกเลิก\"\n                onCancelPressed={() => {\n                    setIsEditVideo(false);\n                    // this.hideAlert();\n                }}\n                onConfirmPressed={() => {\n                    setIsEditVideo(false);\n                    const currentObject = {\n                        userid: answerStaff[0].userid,\n                        year: answerStaff[0].year,\n                        number: answerStaff[0].number,\n                        qt: answerStaff[0].qt,\n                        answer: answerStaff[0].answer,\n                        videoURL: answerStaff[0].videoURL,\n                        date: moment(answerStaff[0].date).format('yyyy-MM-DD'),\n\n                    }\n                    console.log(currentObject);\n                    {\n                        axiox.post(MAIN_URL + '/answer/staff/' + year + '/' + part + '/' + userId + '/1', currentObject)\n                            .then(res => {\n                                console.log(res.data);\n                            })\n                            .catch(err => {\n                                console.log(err)\n                            })\n                    }\n                    setIsEditVideo(false);\n                }}\n            >\n            </AwesomeAlert>\n\n            {isLoading ?\n\n                <ActivityIndicator style={{\n\n                    position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }} size=\"large\" color=\"#0275d8\" />\n\n                :\n\n                null\n\n            }\n\n        </SafeAreaView>\n    );\n}\n\nexport default StaffQuestionnaireScreen;","import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, SafeAreaView, FlatList, Platform, ActivityIndicator, ScrollView } from 'react-native';\nimport { Button, Card } from 'react-native-paper';\nimport { useFocusEffect } from '@react-navigation/native';\n// import Dialog from \"react-native-dialog\";\nimport axiox from 'axios';\nimport { COLORS, SIZES } from '../constants/theme';\n\nimport moment from 'moment';\nimport 'moment/locale/th';\n\nimport { MAIN_URL, USER } from '../constants/variables';\n\nimport AwesomeAlert from 'react-native-awesome-alerts';\n\nconst ManagerQuestionnaireScreen = ({ navigation, route }) => {\n\n    // console.log(route);\n\n    let sheetID = route.params.sheetID;\n    let userId = route.params.userId;\n    let year = route.params.year;\n    let part = route.params.part;\n\n    // console.log(userId);\n\n    var answer = {};\n\n    const [managerList, setManagerList] = useState([]);\n\n    // Answer\n    const [managerAnswer, setManagerAnswer] = useState([]);\n\n    // VideoURL\n    const [isEditVideo, setIsEditVideo] = useState(false);\n\n    const [isLoading, setLoading] = useState(false);\n\n    var managerAnswerList = [];\n\n    const getManagerList = () => {\n        axiox.get(MAIN_URL + '/answer/manager/' + year + '/' + part + '/' + userId)\n            .then(resManager => {\n                setManagerList(resManager.data);\n                console.log(resManager.data);\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    };\n\n    const postAnswer = () => {\n        setLoading(true);\n        axiox.post(MAIN_URL + '/answer/manager/' + year + '/' + part + '/' + userId + '/' + answer.number, answer)\n            // console.log('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.questionNumber + '/Answer/officer/' + userId, answer)\n            .then(res => {\n                console.log(res.data);\n                alert(\"บันทึกข้อมูลสำเร็จ\");\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err)\n                alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                setLoading(false);\n\n            });\n    }\n\n    useFocusEffect(\n        React.useCallback(() => {\n            return () => {\n                setLoading(true);\n                getManagerList();\n            }\n        }, [])\n    );\n\n    // useEffect(() => {\n    //     setLoading(true);\n    //     getManagerList();\n    // }, []);\n\n\n    const renderQuestionnaireManager = ({ navigation }) => {\n\n        const renderItem = ({ item, index }) => {\n            // const textInfo = \"บันทึกคำตอบแล้ว\\nเมื่อทำการแก้ไขให้คลิกยืนยันข้อมูลอีกครั้ง\"\n\n            managerAnswerList[index] = item.answer;\n\n            return (\n                <View style={{\n                    margin: 8,\n                    borderWidth: 1,\n                    // borderColor: 'gray',\n                    borderRadius: 5,\n                    elevation: 5,\n                    padding: 8,\n                    backgroundColor: '#fff'\n                    // borderColor: COLORS.primary\n                    // \n                }} >\n                    <Text style={{\n                        fontSize: 16,\n                        fontWeight: 'bold',\n\n                    }}>{item.number}. {item.qt}</Text>\n\n                    {sheetID === 1 ?\n                        item.answer === undefined ?\n                            <View>\n                                <TextInput\n                                    style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, height: 150 }}\n                                    // textContentType='telephoneNumber'\n                                    placeholder=\"คำตอบ\"\n                                    placeholderTextColor=\"gray\"\n                                    multiline\n                                    numberOfLines={6}\n                                    color='blue'\n                                    fontSize={16}\n                                    onChangeText={text => {\n                                        // setAnserError(false);\n                                        managerAnswer[index] = text;\n                                    }}\n                                />\n                                <Button\n                                    style={{\n                                        backgroundColor: 'gray',\n                                        borderRadius: 10,\n                                        marginVertical: 8\n                                    }}\n                                    mode=\"Contained\"\n                                    onPress={() => {\n                                        // dialogConfirmAnswer({ index });\n                                        // setDialogConfirmAns(true);\n                                        console.log(managerAnswer)\n                                        // setQuestionNumber(item.number);\n                                        if (managerAnswer[index] != undefined) {\n                                            var answerObject = {\n                                                user_id: USER.userid,\n                                                date: moment().format('yyyy-MM-DD'),\n                                                // video_url: videoURLText,\n                                                answer: managerAnswer[index],\n                                                number: item.number,\n                                                qt: item.qt,\n                                                year: year\n                                            };\n\n                                            answer = answerObject;\n                                            postAnswer();\n                                            // setAnserError(false);\n                                            // setManagerAnswer(\"\");\n                                            // setVideoURLText(\"\");\n\n                                            item.answer = managerAnswer[index];\n                                            // setDialogConfirmAns(false);\n\n                                        }\n                                        else {\n                                            // setAnserError(true);\n                                            // setTitleTextLog(\"ข้อมูลไม่ได้ถูกแก้ไข\");\n                                            // setBodyTextLog(\"หากต้องการแก้ไขให้พิมพ์ข้อมูลก่อนบันทึก\")\n                                            // setDialogConfirmAns(true);\n                                            alert(\"ข้อมูลไม่ได้ถูกแก้ไข กรุณาแก้ไขข้อมูลก่อนบันทึก\");\n                                        }\n\n                                        // console.log(questionAllStaffList);\n\n                                    }}>\n                                    <Text style={{ alignSelf: 'center', color: 'white' }}>ส่งคำตอบ</Text>\n\n                                </Button>\n                            </View>\n\n                            :\n\n                            <View>\n                                <TextInput\n                                    style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, height: 150 }}\n                                    // textContentType='telephoneNumber'\n                                    placeholder=\"คำตอบ\"\n                                    placeholderTextColor=\"gray\"\n                                    multiline\n                                    numberOfLines={6}\n                                    color='blue'\n                                    fontSize={16}\n                                    // text=\"dfsdfsdf\"\n                                    onChangeText={text => {\n                                        // setAnserError(false);\n                                        managerAnswer[index] = text;\n                                    }}\n                                    defaultValue={managerAnswerList[index]}\n                                />\n\n                                <Button\n                                    style={{\n                                        backgroundColor: 'green',\n                                        borderRadius: 10,\n                                        marginVertical: 8\n                                    }}\n                                    mode=\"Contained\"\n                                    onPress={() => {\n                                        // dialogConfirmAnswer({ index });\n                                        // setDialogConfirmAns(true);\n                                        console.log(managerAnswer)\n                                        // setQuestionNumber(item.number);\n                                        if (managerAnswer[index] != undefined) {\n                                            var answerObject = {\n                                                user_id: USER.userid,\n                                                date: moment().format('yyyy-MM-DD'),\n                                                // video_url: videoURLText,\n                                                answer: managerAnswer[index],\n                                                number: item.number,\n                                                qt: item.qt,\n                                                year: year\n                                            };\n                                            // setDialogAnswer(false);\n                                            // setAnserError(false);\n                                            answer = answerObject;\n                                            postAnswer();\n\n                                            item.answer = managerAnswer[index];\n\n\n                                            // setDialogConfirmAns(false);\n                                            // setAnswer({});\n                                        }\n                                        else {\n                                            // setAnserError(true);\n                                            // setTitleTextLog(\"ข้อมูลไม่ได้ถูกแก้ไข\");\n                                            // setBodyTextLog(\"หากต้องการแก้ไขให้พิมพ์ข้อมูลก่อนบันทึก\")\n                                            // setDialogConfirmAns(true);\n                                            alert(\"ข้อมูลไม่ได้ถูกแก้ไข กรุณาแก้ไขข้อมูลก่อนบันทึก\");\n                                        }\n\n                                        // console.log(questionAllStaffList);\n\n                                    }}>\n                                    <Text style={{ alignSelf: 'center', color: 'white' }}>ส่งคำตอบอีกครั้ง</Text>\n\n                                </Button>\n                            </View>\n                        :\n\n                        <View>\n                            <TextInput\n                                style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, height: 100 }}\n                                placeholder=\"ไม่มีคำตอบ\"\n                                placeholderTextColor=\"gray\"\n                                multiline\n                                numberOfLines={6}\n                                color='blue'\n                                fontSize={16}\n                                value={item.answer}\n                            />\n\n                        </View>\n                    }\n\n                </View>\n\n            );\n        }\n\n        if (isLoading === false && managerList.length === 0) {\n            return (\n                <View style={{\n                    alignItems: 'center',\n                    marginTop: 48\n                }}>\n                    <Text style={{\n                        paddingHorizontal: 16,\n                        fontSize: 24,\n                        color: 'red',\n                        justifyContent: 'center',\n                    }}>หากแบบประเมินไม่ขึ้นให้เลือกทั่วไปก่อน และกลับมาเลือกผู้จัดการอีกครั้ง</Text>\n                </View>\n            );\n\n        } else {\n\n            return (\n                <FlatList\n                    data={managerList}\n                    extraData={managerList}\n                    keyExtractor={(item, index) => `${index}`}\n                    renderItem={renderItem}\n                    ListHeaderComponent={() => {\n                        return (\n                            <View style={{ backgroundColor: '#D3D3D3' }}>\n                                <View style={{ padding: 8, backgroundColor: COLORS.primary, width: '100%' }}>\n                                    <Text style={{ alignSelf: 'center', color: 'white', fontSize: 20 }}>\n                                        แบบประเมิน ผู้จัดการถามพนักงาน\n                                    </Text>\n                                </View>\n                                <Text style={{ marginVertical: 4, alignSelf: 'center', color: 'red', fontSize: 14 }}>*** กดส่งคำตอบทุกครั้งก่อนจะทำข้อใหม่ ***</Text>\n                                {/* <Text style={{ marginBottom: 4, alignSelf: 'center', color: 'red', fontSize: 14 }}>เมื่อครบทุกข้อให้คลิก ส่งคำตอบ</Text> */}\n                            </View>\n\n                        );\n                    }}\n                    stickyHeaderIndices={[0]}\n\n                />\n\n            );\n        }\n    }\n\n    const renderCustomViewInput = () => (\n        <TextInput\n            style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginHorizontal: 16, width: SIZES.width / 2 }}\n            // textContentType='telephoneNumber'\n            placeholder=\":url\"\n            placeholderTextColor=\"gray\"\n            multiline\n            // numberOfLines={6}\n            color='blue'\n            fontSize={16}\n            onChangeText={text => {\n                // setAnserError(false);\n                // setVideoLink(text)\n                managerList[0].videoURL = text\n            }}\n        />\n    )\n\n    return (\n        <SafeAreaView style={{ flex: 1, }}>\n\n            {renderQuestionnaireManager({ navigation })}\n\n            {sheetID === 1 ?\n                managerList.length != 0 && (managerList[0].videoURL === undefined || managerList[0].videoURL === \"\") ?\n\n                    <View style={{ margin: 16 }}>\n                        <Button style={{\n                            backgroundColor: COLORS.primary,\n                            borderRadius: 10,\n                            marginVertical: 8\n                        }}\n                            mode=\"Contained\"\n                            onPress={() => { setIsEditVideo(true) }}>\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>เพิ่มลิ้งค์วิดีโอ</Text>\n                        </Button>\n                    </View>\n\n                    :\n                    managerList.length != 0 && managerList[0].videoURL != \"\" ?\n                        <View style={{ margin: 16, flexDirection: 'row', justifyContent: 'center' }}>\n                            <Button style={{\n                                flex: 1,\n                                backgroundColor: COLORS.primary,\n                                borderRadius: 10,\n                                marginVertical: 8,\n                                marginRight: 4\n\n                            }}\n                                mode=\"Contained\"\n                                onPress={() => {\n                                    // console.log(questionManagerList[0].videoURL);\n                                    {\n                                        Platform.OS === \"web\" ?\n                                            window.open(managerList[0].videoURL) :\n                                            navigation.navigate('VideoWebView', { videoURL: managerList[0].videoURL })\n                                        // navigation.navigate('VideoWebView', { videoURL: managerList[0].videoURL })\n                                    }\n                                }}>\n                                <Text style={{ alignSelf: 'center', color: 'white' }}>ดูวิดีโอ</Text>\n                            </Button>\n\n                            <Button style={{\n                                flex: 1,\n                                backgroundColor: COLORS.primary,\n                                borderRadius: 10,\n                                marginVertical: 8,\n                                marginLeft: 4\n                            }}\n                                mode=\"Contained\"\n                                onPress={() => { setIsEditVideo(true) }}>\n                                <Text style={{ alignSelf: 'center', color: 'white' }}>แก้ไขลิ้งค์</Text>\n                            </Button>\n                        </View>\n                        :\n                        null\n\n                :\n\n                <View style={{ margin: 16, flexDirection: 'row', justifyContent: 'center' }}>\n                    <Button style={{\n                        flex: 1,\n                        backgroundColor: COLORS.primary,\n                        borderRadius: 10,\n                        marginVertical: 8,\n                        marginRight: 4\n\n                    }}\n                        mode=\"Contained\"\n                        onPress={() => {\n                            // console.log(questionManagerList[0].videoURL);\n                            navigation.navigate('VideoWebView', { videoURL: managerList[0].videoURL })\n\n                        }}>\n                        <Text style={{ alignSelf: 'center', color: 'white' }}>ดูวิดีโอ</Text>\n                    </Button>\n\n                </View>\n            }\n\n            <AwesomeAlert\n                show={isEditVideo}\n                title=\"เพิ่มลิ้งค์วิดีโอ\"\n                // message=\"เพิ่มลิ้งวิดีโอ\"\n                closeOnTouchOutside={false}\n                confirmText=\"ตกลง\"\n                showConfirmButton={true}\n                showCancelButton={true}\n                customView={renderCustomViewInput()}\n                confirmButtonColor={COLORS.primary}\n                cancelText=\"ยกเลิก\"\n                onCancelPressed={() => {\n                    setIsEditVideo(false);\n                    // this.hideAlert();\n                }}\n                onConfirmPressed={() => {\n                    setIsEditVideo(false);\n                    const currentObject = {\n                        userid: managerList[0].userid,\n                        year: managerList[0].year,\n                        number: managerList[0].number,\n                        qt: managerList[0].qt,\n                        answer: managerList[0].answer,\n                        videoURL: managerList[0].videoURL,\n                        date: moment(managerList[0].date).format('yyyy-MM-DD'),\n\n                    }\n                    console.log(currentObject);\n                    {\n                        axiox.post(MAIN_URL + '/answer/manager/' + year + '/' + part + '/' + userId + '/1', currentObject)\n                            .then(res => {\n                                console.log(res.data);\n                            })\n                            .catch(err => {\n                                console.log(err)\n                            })\n                    }\n                    setIsEditVideo(false);\n                }}\n            >\n            </AwesomeAlert>\n\n            {isLoading ?\n\n                <ActivityIndicator style={{\n\n                    position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }} size=\"large\" color=\"#0275d8\" />\n                :\n                null\n            }\n\n        </SafeAreaView>\n    );\n}\n\nexport default ManagerQuestionnaireScreen;","import * as React from 'react';\nimport { WebView } from 'react-native-webview';\nimport { SafeAreaView, Text } from 'react-native';\n\nconst VideoWebViewScreen = ({ route }) => {\n    const URL = route.params.videoURL;\n    console.log(URL);\n    return (\n        URL != undefined && URL != \"\" ?\n            <WebView\n                style={{ flex: 1 }}\n                javaScriptEnabled={true}\n                // source={{ uri: 'https://www.youtube.com/embed/ZZ5LpwO-An4?rel=0&autoplay=0&showinfo=0&controls=0' }}\n                source={{ uri: URL }}\n            />\n            :\n            <SafeAreaView>\n                <Text style={{ alignSelf: 'center', marginTop: 50, fontSize: 24, color: 'red'}}>ไม่พบการอัพโหลดวิดีโอ</Text>\n            </SafeAreaView>\n\n    );\n}\n\nexport default VideoWebViewScreen;","import React from 'react';\n\nexport const AuthContext = React.createContext();","import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, SafeAreaView, ScrollView, ActivityIndicator, StyleSheet, Platform } from 'react-native';\nimport { Button, Avatar } from 'react-native-paper';\nimport * as Animatable from 'react-native-animatable';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthContext } from '../components/context';\nimport axiox from 'axios';\n\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { COLORS, SIZES } from '../constants/theme';\nimport { MAIN_URL, USER } from '../constants/variables';\n\nconst LoginScreen = ({ navigation }) => {\n\n    const [textError, setTextError] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    // const userInfo;\n\n    const [data, setData] = useState({\n        username: '',\n        password: '',\n        check_textInputChange: false,\n        secureTextEntry: true\n    });\n\n    const login = () => {\n        const object = {\n            userid: data.username,\n            password: data.password\n        }\n\n        axiox.post(MAIN_URL + '/login', object)\n            .then(res => {\n                console.log(res.data);\n                setIsLoading(false);\n                // setUserInfo(res.data);\n                loginSaveState(res.data);\n\n                USER.userid = res.data.userid;\n                USER.position = res.data.position;\n                USER.department = res.data.department;\n                USER.name = res.data.name;\n                USER.lastname = res.data.lastname;\n                USER.nickname = res.data.nickname;\n                USER.phone = res.data.phone;\n\n                loginHandle(res.data.userid, res.data.position, res.data.department);\n                \n            })\n            .catch(err => {\n                // showDialog();\n                // setTextQueue(\"การจองล้มเหลว \\nเนื่องจากคิวเต็ม\");\n                // setStatus(\"จองคิวล้มเหลว\");\n                setTextError(\"User ID หรือ Password ไม่ถูกต้อง\")\n                console.log(err)\n                setIsLoading(false);\n            });\n\n    }\n\n    const loginSaveState = async (userData) => {\n        try {\n          \n            const jsonAllValue = JSON.stringify(userData);\n            console.log(jsonAllValue);\n            await AsyncStorage.setItem('user_login', jsonAllValue);\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    const checkLoginState = async () => {\n        try {\n            const jsonValue = await AsyncStorage.getItem('user_login');\n            // var allData = [];\n            if (jsonValue !== null) {\n               \n                const userInfo = JSON.parse(jsonValue); \n\n                console.log(userInfo);\n\n                USER.userid = userInfo.userid;\n                USER.position = userInfo.position;\n                USER.department = userInfo.department;\n                USER.name = userInfo.name;\n                USER.lastname = userInfo.lastname;\n                USER.nickname = userInfo.nickname;\n                USER.phone = userInfo.phone;\n\n                loginHandle(userInfo.userid, userInfo.position, userInfo.department)\n                // allData.push(newValue);\n            }\n            else {\n                // allData.push(newValue);\n            }\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    useEffect(() => {\n        // setTimeout(() => {\n            checkLoginState();\n        //  }, 2000);\n    \n    }, []);\n\n    const { signIn } = React.useContext(AuthContext);\n\n    const textInputChange = (val) => {\n        if (val.length != 0) {\n            setData({\n                ...data,\n                username: val,\n                check_textInputChange: true\n            });\n        } else {\n            setData({\n                ...data,\n                username: val,\n                check_textInputChange: false\n            });\n        }\n    }\n\n    const handlePasswordChange = (val) => {\n        setData({\n            ...data,\n            password: val,\n        });\n    }\n\n    const updateSecureTextEntry = (val) => {\n        setData({\n            ...data,\n            secureTextEntry: !data.secureTextEntry\n        });\n    }\n\n    const loginHandle = (username, position, department) => {\n        signIn(username, position, department);\n        // console.log(username, password);\n    }\n\n    return (\n        <View style={styles.containerMobile}>\n            <View style={styles.header}>\n\n                <Text style={styles.text_header}>แบบประเมินพนักงาน</Text>\n            </View>\n            {/* <Text> CAL</Text> */}\n            <Animatable.View style={styles.footer}\n                animation='fadeInUpBig'>\n                <Text style={styles.text_footer}>User ID</Text>\n                <View style={styles.action}>\n                    <Icon name='user'\n                        color={COLORS.primary}\n                        size={20} />\n                    <TextInput placeholder=\"User ID ...\"\n                        style={styles.text_input}\n                        onChangeText={(val) => textInputChange(val)} />\n                </View>\n\n                <Text style={styles.text_footer}>Password</Text>\n                <View style={styles.action}>\n                    <Icon name='lock'\n                        color={COLORS.primary}\n                        size={20} />\n                    <TextInput placeholder=\"Password ...\"\n                        style={styles.text_input}\n                        onChangeText={(val) => handlePasswordChange(val)} />\n                </View>\n\n                <Text style={{ alignSelf: 'center', color: 'red', marginTop: 26 }}>{textError}</Text>\n\n                <Button\n                    style={{ borderRadius: 10, marginTop: 16, backgroundColor: COLORS.primary }}\n                    // icon=\"camera\"\n                    mode=\"contained\"\n                    onPress={() => {\n                        setIsLoading(true);\n                        login();\n                    }}>\n                    <Text style={{ fontSize: 18 }}>เข้าสู่ระบบ</Text>\n                </Button>\n\n                {isLoading ?\n\n                    <ActivityIndicator style={{\n                        marginTop: 20,\n                        // position: 'absolute',\n                        // left: 0,\n                        // right: 0,\n                        // top: 0,\n                        // bottom: 0,\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                    }} size=\"large\" color=\"#0275d8\" />\n\n                    :\n\n                    null\n                }\n\n\n            </Animatable.View>\n\n        </View>\n\n    );\n}\n\nconst styles = StyleSheet.create({\n    containerMobile: {\n        // justifyContent: 'center',\n        flex: 1,\n        backgroundColor: COLORS.primary\n    },\n    // containerWeb: {\n    //     alignSelf: 'center',\n    //     justifyContent: 'center',\n    //     width: SIZES.width/1.3,\n    //     flex: 1,\n    //     backgroundColor: COLORS.primary\n    // },\n    footer: {\n        flex: 4,\n        // justifyContent: 'center',\n        backgroundColor: 'white',\n        borderTopLeftRadius: 30,\n        borderTopRightRadius: 30,\n        paddingHorizontal: 20,\n        paddingVertical: 30\n    },\n    header: {\n        flex: 1,\n        justifyContent: 'flex-end',\n        paddingHorizontal: 20,\n        paddingBottom: 50,\n    },\n    logo: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        // marginTop: 50\n    },\n    text_header: {\n        alignSelf: 'center',\n        justifyContent: 'center',\n        color: 'white',\n        fontWeight: 'bold',\n        fontSize: 24\n    },\n    action: {\n        flexDirection: 'row',\n        margin: 10,\n        borderBottomWidth: 1,\n        borderBottomColor: '#f2f2f2',\n        paddingBottom: 5\n    },\n    text_input: {\n        flex: 1,\n        paddingLeft: 10,\n        color: '#008080'\n    },\n    text_footer: {\n        color: COLORS.primary,\n        fontSize: 18,\n    },\n})\n\nexport default LoginScreen;","import React from 'react';\n\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport LoginScreen from './LoginScreen';\n\nconst RootStack = createStackNavigator();\n\nconst RootStackScreen = ({ navigation }) => (\n    <RootStack.Navigator headerMode='none'>\n        <RootStack.Screen name=\"LogIn\" component={LoginScreen} />\n    </RootStack.Navigator>\n);\n\nexport default RootStackScreen;","import React, { useState, useEffect } from 'react';\nimport { View, Text, SafeAreaView, TextInput, StyleSheet, ActivityIndicator } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nimport axiox from 'axios';\nimport { MAIN_URL, USER } from '../constants/variables';\n\nconst UserListScreen = ({ navigation, route }) => {\n\n    let sheetID = route.params.sheetID;\n    let year = route.params.year;\n    let part = route.params.part;\n    let userid = USER.userid;\n    let position = USER.position;\n    let department = USER.department;\n\n    const [users, setUsers] = useState([]);\n    const [isLoading, setLoading] = useState(false);\n\n    const [arrayholder, setArrayholder] = useState([])\n    const [text, setText] = useState(\"\");\n    // const[data, setData] = useState([])\n\n\n    const getAllQuestion = () => {\n        setLoading(true);\n        axiox.get(MAIN_URL + '/question/staff/' + year + '/' + part)\n            .then(res => {\n                getUsers(res.data.length);\n            })\n            .catch(err => {\n                console.log(err)\n                setLoading(false);\n            });\n    };\n\n    const getUsers = (choiceCount) => {\n        // console.log(choiceCount);\n        axiox.get(MAIN_URL + '/users/' + year + '/' + part + '/' + choiceCount)\n            .then(res => {\n                setUsers(res.data);\n                setLoading(false);\n                setArrayholder(res.data)\n                // console.log(users);\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    };\n\n    const getDepartment = () => {\n        console.log(department);\n        // console.log(MAIN_URL + '/users/department/' + department);\n        axiox.get(MAIN_URL + '/users/department/' + department)\n            .then(res => {\n                setUsers(res.data);\n                setLoading(false);\n                setArrayholder(res.data)\n                // console.log(users);\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    };\n\n    useEffect(() => {\n        setLoading(true);\n        if (sheetID === 5) {\n            getDepartment();\n        }\n        else {\n            if (position === 'admin' || department === 'MD') {\n                getAllQuestion();\n            } else {\n                getDepartment();\n            }\n        }\n\n\n\n    }, []);\n\n    const searchData = (text) => {\n\n        const newData = arrayholder.filter(item => {\n            // console.log(item.nickname)\n            const itemData = item.nickname;\n            const textData = text;\n            return itemData.indexOf(textData) > -1\n        });\n        setUsers(newData);\n        setText(text);\n    }\n\n    // const itemSeparator = () => {\n    //     return (\n    //         <View\n    //             style={{\n    //                 height: .5,\n    //                 width: \"100%\",\n    //                 backgroundColor: \"#000\",\n    //             }}\n    //         />\n    //     );\n    // }\n\n\n    const renderUsers = ({ navigation }) => {\n\n        // console.log(users);\n\n        const renderItem = ({ item }) => {\n            return (\n                <TouchableOpacity\n                    onPress={() => {\n                        sheetID === 5 ?\n                            navigation.navigate('EmployeeStatus', {\n                                sheetID: sheetID,\n                                user: item\n                            }) :\n                            // console.log(item.name);\n                            navigation.navigate('Questionnaire', {\n                                sheetID: sheetID,\n                                userId: item.userid,\n                                year: year,\n                                part: part\n                            });\n                    }}>\n                    <View style={{ backgroundColor: 'white', borderWidth: 0.5, padding: 8, borderRadius: 10, margin: 4 }}>\n                        <Text style={{ fontSize: 18, fontWeight: 'bold', color: 'blue' }}>\n                            ชื่อ : {item.name + \" \" + item.lastname}\n                        </Text>\n                        <Text style={{ fontSize: 18, fontWeight: 'bold', color: 'red' }}>\n                            ชื่อเล่น : {item.nickname}\n                        </Text>\n                        <Text>\n                            เบอร์โทร :{item.phone}\n                        </Text>\n                        <Text>\n                            แผนก : {item.department}\n                        </Text>\n                    </View>\n                </TouchableOpacity>\n            );\n        }\n\n        return (\n            <FlatList\n                data={users}\n                keyExtractor={(item, index) => `${index}`}\n                // ItemSeparatorComponent={itemSeparator}\n                shouldComponentUpdate={false}\n                renderItem={renderItem}\n            // horizontal\n            // showsHorizontalScrollIndicator={false}\n            />\n\n        );\n    }\n\n    return (\n        <SafeAreaView style={{ flex: 1 }}>\n\n            <TextInput\n                style={styles.textInput}\n                onChangeText={(text) => searchData(text)}\n                value={text}\n                underlineColorAndroid='transparent'\n                placeholder=\"ค้นหาจากชื่อเล่น\" />\n\n            {position === 'admin' ?\n                <View style={{ borderBottomWidth: 0.5, borderBottomColor: 'gray' }}>\n                    <Text style={{ marginHorizontal: 8, marginBottom: 8, }}>จำนวนคนตอบคำถามครบ {users.length} คน</Text>\n                </View>\n                :\n                null}\n\n\n            {renderUsers({ navigation })}\n\n            {isLoading ?\n\n                <ActivityIndicator style={{\n\n                    position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }} size=\"large\" color=\"#0275d8\" />\n                :\n                null\n            }\n\n        </SafeAreaView>\n\n    );\n}\n\nconst styles = StyleSheet.create({\n    textInput: {\n        margin: 8,\n        paddingHorizontal: 16,\n        height: 42,\n        borderWidth: 1,\n        borderColor: '#009688',\n        borderRadius: 8,\n        backgroundColor: \"#FFFF\"\n\n    }\n});\n\nexport default UserListScreen;","import React from 'react';\nimport { View, Text, ScrollView, FlatList } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { COLORS } from '../constants/theme';\n\nconst SelectQuestionScreen = ({ navigation, route }) => {\n    const { userId, sheetId, year, part } = route.params;\n\n    return (\n        <View style={{ margin: 24 }}>\n            <Button\n                style={{ padding: 8, backgroundColor: 'green', }}\n                onPress={() => {\n                    navigation.navigate('CreateQuestion', { type: 'staff', year: year, part: part });\n                }}\n            ><Text style={{ fontSize: 18, color: 'white' }}>สำหรับพนักงานทั่วไป</Text></Button>\n            <Button\n                style={{ padding: 8, marginTop: 16, backgroundColor: 'blue' }}\n                onPress={() => {\n                    navigation.navigate('CreateQuestion', { type: 'manager', year: year, part: part });\n                }}\n            ><Text style={{ fontSize: 18, color: 'white' }}>สำหรับผู้จัดการถาม</Text></Button>\n        </View>\n    );\n};\n\nexport default SelectQuestionScreen;","import React, { useState, useEffect } from 'react';\nimport { Text, SafeAreaView, TextInput, View, FlatList, ActivityIndicator } from 'react-native';\nimport { Button } from 'react-native-paper'\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport axiox from 'axios';\nimport { MAIN_URL } from '../constants/variables';\n\nconst CreateQuestionScreen = ({ route }) => {\n    const { type, year, part } = route.params;\n    console.log(route.params);\n    const [allQuestion, setAllQuestion] = useState([]);\n    const [isLoading, setLoading] = useState(false);\n    var setNumber = '';\n    var setQuestion = '';\n    var deleteNumber = '';\n\n    const getAllQuestion = () => {\n        setLoading(true);\n        axiox.get(MAIN_URL + '/question/' + type + '/' + year + '/' + part)\n            .then(res => {\n                setAllQuestion(res.data);\n                setLoading(false);\n                // setArrayholder(res.data)\n                // console.log(users);\n            })\n            .catch(err => {\n                console.log(err)\n                setLoading(false);\n            });\n    };\n\n    const postQuestion = () => {\n        // console.log(setNumber);\n        // console.log(setQuestion);\n        setLoading(true);\n        axiox.post(MAIN_URL + '/question/' + type + '/' + year + '/' + part + '/' + setNumber, setQuestion)\n            .then(res => {\n                console.log(res.data);\n                getAllQuestion();\n\n                alert(\"บันทึกข้อมูลสำเร็จ\");\n                setLoading(false);\n                // setNumber = '';\n                // setQuestion = '';\n            })\n            .catch(err => {\n                console.log(err);\n\n                alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                setLoading(false);\n            });\n    };\n\n    const deleteQuestion = () => {\n        // console.log(setNumber);\n        // console.log(setQuestion);\n        setLoading(true);\n        axiox.delete(MAIN_URL + '/question/' + type + '/' + year + '/' + part + '/' + deleteNumber)\n            .then(res => {\n                console.log(res.data);\n                getAllQuestion();\n\n                alert(\"บันทึกข้อมูลสำเร็จ\");\n                setLoading(false);\n                // setNumber = '';\n                // setQuestion = '';\n            })\n            .catch(err => {\n                console.log(err);\n\n                alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                setLoading(false);\n            });\n    }\n\n    useEffect(() => {\n        setLoading(true);\n        getAllQuestion();\n    }, []);\n\n    const renderItem = ({ item }) => {\n        // console.log(item);\n        return (\n\n            <View style={{ flexDirection: 'row', borderBottomWidth: 0.5, padding: 8, margin: 4 }}>\n\n                <Text style={{ flex: 1, marginRight: 6, fontSize: 18, fontWeight: 'bold' }}>\n                    ข้อ {item.number + \". \\r\\n\" + item.qt}\n                </Text>\n\n                <Icon\n                    name='trash'\n                    color='red'\n                    size={20}\n                    style={{ padding: 6, flex: 0.05, alignSelf: 'center' }}\n                    onPress={() => {\n\n                        deleteNumber = item.number;\n                        deleteQuestion();\n                    }}\n                />\n            </View>\n\n        );\n    };\n\n    return (\n        isLoading ?\n\n            <ActivityIndicator style={{\n\n                position: 'absolute',\n                left: 0,\n                right: 0,\n                top: 0,\n                bottom: 0,\n                alignItems: 'center',\n                justifyContent: 'center'\n            }} size=\"large\" color=\"#0275d8\" />\n\n            :\n\n            <SafeAreaView style={{ flex: 1 }}>\n                <FlatList\n                    data={allQuestion}\n                    keyExtractor={(item, index) => `${index}`}\n                    // ItemSeparatorComponent={itemSeparator}\n                    // shouldComponentUpdate={false}\n                    renderItem={renderItem}\n                />\n\n                <View style={{ backgroundColor: 'white', padding: 6, borderWidth: 1, }}>\n                    <TextInput\n                        style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, }}\n                        // textContentType='telephoneNumber'\n                        placeholder=\"ข้อ (พิมพ์เฉพาะตัวเลข)\"\n                        placeholderTextColor=\"gray\"\n                        multiline\n                        // numberOfLines={6}\n                        color='blue'\n                        fontSize={16}\n                        // defaultValue={''}\n                        onChangeText={number => {\n                            setNumber = number;\n                        }}\n                    />\n                    <TextInput\n                        style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, height: 100 }}\n                        // textContentType='telephoneNumber'\n                        placeholder=\"คำถาม\"\n                        placeholderTextColor=\"gray\"\n                        multiline\n                        numberOfLines={6}\n                        color='blue'\n                        fontSize={16}\n                        // defaultValue={''}\n                        onChangeText={question => {\n                            setQuestion = {\n                                question: question\n                            }\n                        }}\n                    />\n                    <Button\n                        style={{\n                            backgroundColor: 'green',\n                            borderRadius: 10,\n                            marginVertical: 8\n                        }}\n                        mode=\"Contained\"\n                        onPress={() => {\n                            postQuestion();\n                        }}>\n                        <Text style={{ alignSelf: 'center', color: 'white' }}>เพิ่มคำถาม</Text>\n\n                    </Button>\n\n                </View>\n\n            </SafeAreaView>\n    );\n};\n\nexport default CreateQuestionScreen;","import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, FlatList, StyleSheet, TouchableOpacity, ActivityIndicator } from 'react-native';\nimport { Button, Card } from 'react-native-paper';\nimport { CheckBox } from 'react-native-elements'\n\nimport axiox from 'axios';\nimport { COLORS, SIZES } from '../constants/theme';\n\nimport moment from 'moment';\nimport 'moment/locale/th';\nimport { MAIN_URL, USER } from '../constants/variables';\n\nconst StaffCommentScreen = ({ navigation, route }) => {\n\n    // let sheetID = route.params.sheetID;\n    let userId = USER.userid;\n    // console.log(userId)\n    let managerID = route.params.managerID;\n    let year = route.params.year;\n    let part = route.params.part;\n\n    const [answer, setAnswer] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [loadingPage, setLoadingPage] = useState(false);\n    const [postLoading, setPostLoading] = useState(false);\n    const [answerForManger, setAnswerFormanager] = useState([]);\n\n    const [allAnswer, setAllAnswer] = useState([]);\n    const [questionWithAnswer, setQuestionWithAnswer] = useState([]);\n    const [question, setQuestion] = useState([]);\n    // var checkArray = [];\n    const [checked, setChecked] = useState(false);\n    // const [itemSelected, setItemSeleced] = useState(0);\n    const [selectedColor, setSelectedColor] = useState('');\n    const [list, setList] = useState([]);\n    const [checkIndex, setCheckIndex] = useState(0);\n    // console.log(USER.position)\n\n    useEffect(() => {\n        // setLoading(true);\n        // console.log(USER.position)\n        USER.position === \"ผู้จัดการ\" ? getAnswerWithManagerId() : getAllQuestionWithAnswer()\n\n    }, []);\n\n    const getAllQuestionWithAnswer = () => {\n        setLoadingPage(true);\n        // console.log(MAIN_URL + '/answer/comment/user/' + year + '/' + part + '/' + managerID + '/' + userId)\n        // console.log(\"getAllQuestionWithAnswer\");\n        axiox.get(MAIN_URL + '/answer/comment/user/' + year + '/' + part + '/' + managerID + '/' + userId)\n            // console.log('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.questionNumber + '/Answer/officer/' + userId, answer)\n            .then(res => {\n\n                setQuestionWithAnswer(res.data)\n                // alert(\"บันทึกข้อมูลสำเร็จ\");\n                setLoadingPage(false);\n                // res.data.map(item => {\n                //     checkArray.push({\n                //         check: false\n                //     });\n                // console.log(checked)\n                // })\n            })\n            .catch(err => {\n                console.log(err)\n                // alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                setLoadingPage(false);\n\n            });\n    };\n\n    const getAllQuestion = () => {\n        setLoadingPage(true);\n        axiox.get(MAIN_URL + '/question/comment/' + year + '/' + part)\n            .then(res => {\n                // console.log(res.data);\n                // console.log(\"ALL DATA\", res.data);\n                setQuestion(res.data)\n\n                // alert(\"บันทึกข้อมูลสำเร็จ\");\n                setLoadingPage(false);\n            })\n            .catch(err => {\n                console.log(err)\n                // alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                setLoadingPage(false);\n\n            });\n    }\n\n    const getAllAnswer = () => {\n        setLoading(true);\n        // console.log(\"getAll\")\n        axiox.get(MAIN_URL + '/answer/comment/user/' + year + '/' + part + '/department/' + USER.department)\n            // console.log('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.questionNumber + '/Answer/officer/' + userId, answer)\n            .then(res => {\n                // console.log(\"ALL DATA\", res.data);\n                setAllAnswer(res.data)\n                // alert(\"บันทึกข้อมูลสำเร็จ\");\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err)\n                // alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                setLoading(false);\n\n            });\n    };\n\n    const getAnswerWithManagerIdAndNumber = ({ number }) => {\n        setLoading(true);\n\n        // console.log(\"get\", userId)\n        axiox.get(MAIN_URL + '/answer/comment/manager/' + year + '/' + part + '/' + userId + '/' + number)\n            // console.log('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.questionNumber + '/Answer/officer/' + userId, answer)\n            .then(res => {\n                console.log(res.data);\n                setAnswer(res.data)\n                // alert(\"บันทึกข้อมูลสำเร็จ\");\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err)\n                // alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                setLoading(false);\n\n            });\n    }\n\n    const getAnswerWithManagerId = () => {\n        setLoadingPage(true);\n\n        // console.log(\"get\", userId)\n        axiox.get(MAIN_URL + '/answer/comment/manager/' + year + '/' + part + '/' + userId)\n            // console.log('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.questionNumber + '/Answer/officer/' + userId, answer)\n            .then(res => {\n                // console.log(res.data);\n                const data = res.data;\n                mapAnserToGroup(data)\n                // alert(\"บันทึกข้อมูลสำเร็จ\");\n                setLoadingPage(false);\n            })\n            .catch(err => {\n                console.log(err)\n                // alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                setLoadingPage(false);\n\n            });\n    }\n\n    const mapAnserToGroup = (data) => {\n        var allAnswerGroup = [];\n        var answerGroup = [];\n        var lastUserid = '';\n        // console.log(data)\n        var userid = '';\n        var name = '';\n        var lastname = '';\n        var nickname = '';\n\n        for (var i = 0; i < data.length; i++) {\n            if (i === 0) {\n                lastUserid = data[i].userid;\n            }\n            if (data[i].userid === lastUserid) {\n                userid = data[i].userid;\n                name = data[i].name;\n                lastname = data[i].lastname;\n                nickname = data[i].nickname;\n\n                if (data.length - 1 === i) {\n                    console.log(data.length - 1);\n                    console.log(i)\n                    var obj = {\n                        userid: userid,\n                        name: name,\n                        lastname: lastname,\n                        nickname: nickname,\n                        all_answer: answerGroup\n                    }\n                    // console.log(obj)\n                    answerGroup.push(data[i]);\n\n                    allAnswerGroup.push(obj);\n\n                    setAnswerFormanager(allAnswerGroup);\n                    console.log(answerForManger)\n                }\n                else {\n                    answerGroup.push(data[i]);\n                }\n\n            } else {\n                var obj = {\n                    userid: userid,\n                    name: name,\n                    lastname: lastname,\n                    nickname: nickname,\n                    all_answer: answerGroup\n                }\n\n                // console.log(obj)\n\n                allAnswerGroup.push(obj);\n                // console.log(answerForManger);\n                answerGroup = [];\n                lastUserid = data[i].userid;\n\n                answerGroup.push(data[i]);\n            }\n        }\n        // console.log(answerForManger);\n    }\n\n    const postAnswer = ({ dataSend, number }) => {\n        setLoading(true);\n        axiox.post(MAIN_URL + '/answer/comment/user/' + year + '/' + part + '/' + userId + '/' + number, dataSend)\n            // console.log('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.questionNumber + '/Answer/officer/' + userId, answer)\n            .then(res => {\n                // console.log(res.data);\n                alert(\"บันทึกข้อมูลสำเร็จ\");\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err)\n                alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                setLoading(false);\n\n            });\n    }\n\n    const renderManagerCheck = () => {\n        const renderUserWithAllAnswer = ({ item, index }) => {\n            return (\n                <View style={{ marginBottom: 14 }}>\n                    <Text style={{ fontWeight: 'bold' }}>{item.number}. {item.qt}</Text>\n                    <Text style={{ color: 'green', padding: 4, paddingHorizontal: 16 }}>{item.answer}</Text>\n                </View>\n            )\n        }\n\n        const renderItem = ({ item, index }) => {\n            // console.log(item.date);\n            var reveal = true;\n            for (var i = 0; i < item.all_answer.length; i++) {\n                if (item.all_answer[i].reveal === 1) {\n                    reveal = false;\n                }\n            }\n            return (\n                <View style={{ padding: 8, marginHorizontal: 16, marginVertical: 8, borderRadius: 5, borderColor: 'black', borderWidth: .5 }}>\n                    {reveal === true ?\n                        <Text style={{ fontSize: 15, fontWeight: 'bold', paddingHorizontal: 8, color: 'blue' }}>{item.name} {item.lastname} ({item.nickname}) [{item.all_answer[0].department}]</Text>\n                        :\n                        <Text style={{ paddingHorizontal: 8, fontSize: 15, fontWeight: 'bold', color: 'blue' }}>ไม่เปิดเผยชื่อ </Text>\n                    }\n                    <View style={{ padding: 8, marginVertical: 8, borderRadius: 5, borderColor: 'gray', borderWidth: .2 }}>\n\n                        <FlatList\n                            data={item.all_answer}\n                            extraData={item.all_answer}\n                            keyExtractor={(item, index) => `${index}`}\n                            renderItem={renderUserWithAllAnswer}\n                            scrollEnabled={false}\n                        />\n\n                        <Text style={{ color: 'green', paddingHorizontal: 16, paddingVertical: 4 }}>{item.answer}</Text>\n                    </View>\n                </View>\n            )\n            // <View>\n            //     <TouchableOpacity\n            //         style={selectedColor === index ? { borderRadius: 10, backgroundColor: 'green', padding: 10, margin: 10, } : { borderRadius: 10, borderColor: 'gray', borderWidth: .3, backgroundColor: '#F8F8FF', padding: 10, margin: 10, }}\n            //         onPress={() => {\n            //             setAnswer([]);\n            //             setSelectedColor(index);\n            //             setCheckIndex(index);\n            //             // console.log(item.number)\n            //             getAnswerWithManagerIdAndNumber({ number: item.number });\n            //         }}\n            //     >\n            //         <Text style={selectedColor === index ? { color: 'white', fontSize: 16 } : { color: 'black', fontSize: 16 }}>{index + 1}.  {item.qt}\n\n            //             {/* {\n            //             item.reveal != 1 ?\n            //                 <Text style={{ fontSize: 14, color: 'blue' }}> {item.qt} {item.lastname} ({item.nickname}) ( แผนก/สาขา {item.department} )</Text>\n            //                 :\n            //                 <Text style={{ fontSize: 14, color: 'blue' }}> ไม่เปิดเผยชื่อ</Text>\n            //         } */}\n            //         </Text>\n            //     </TouchableOpacity>\n            //     {checkIndex === index ?\n            //         !loading ?\n            //             answer.length != 0 ?\n            //                 <View style={{ padding: 16, margin: 8, borderRadius: 10, borderWidth: .3, borderColor: 'gray' }}>\n            //                     <FlatList\n            //                         data={answer}\n            //                         extraData={answer}\n            //                         keyExtractor={(item, index) => `${index}`}\n            //                         renderItem={renderComment}\n            //                         ListHeaderComponent={\n            //                             <Text style={{ marginBottom: 16, alignSelf: 'center', fontSize: 14 }}>ความคิดเห็นทั้งหมด</Text>\n            //                         }\n            //                     />\n            //                 </View>\n            //                 :\n            //                 selectedColor != '' ?\n            //                     <View style={{ padding: 16, margin: 8, borderRadius: 10, borderWidth: .3, borderColor: 'gray' }}>\n            //                         <Text style={{ alignSelf: 'center' }}>ไม่มีความคิดเห็น</Text>\n            //                     </View>\n            //                     :\n            //                     null\n            //             :\n            //             <ActivityIndicator />\n\n            //         :\n            //         null\n            //     }\n            // </View>\n            // )\n        }\n\n        const renderComment = ({ item, index }) => {\n            return (\n                <View style={{ marginVertical: 8 }}>\n                    {item.reveal === 0 ?\n                        <Text style={{ fontSize: 15, fontWeight: 'bold' }}>{item.name} {item.lastname} ({item.nickname}) [{item.department}] <Text style={{ fontSize: 12, color: 'gray' }}> - วันที่ {moment(item.date).format('ll')}</Text></Text>\n                        :\n                        <Text style={{ fontSize: 15, fontWeight: 'bold' }}>ไม่เปิดเผยชื่อ <Text style={{ fontSize: 12, color: 'gray' }}> - วันที่ {moment(item.date).format('ll')}</Text></Text>\n                    }\n                    <View style={{ marginVertical: 8, borderRadius: 5, borderColor: 'gray', borderWidth: .3 }}>\n                        <Text style={{ color: 'green', padding: 8 }}>{item.answer}</Text>\n                    </View>\n                </View>\n            );\n        };\n\n        return (\n            loadingPage ?\n                <ActivityIndicator style={{\n\n                    position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }} size=\"large\" color=\"#0275d8\" />\n                :\n                answerForManger.length != 0 ?\n                    <View style={{ marginBottom: 18 }}>\n                        <FlatList\n                            data={answerForManger}\n                            extraData={answerForManger}\n                            keyExtractor={(item, index) => `${index}`}\n                            renderItem={renderItem}\n                            ListHeaderComponent={\n                                <View style={{ margin: 16 }}>\n                                    <Text style={{ alignSelf: 'center', fontSize: 14 }}>ความคิดเห็นทั้งหมด</Text>\n                                </View>\n\n                            }\n                            showsVerticalScrollIndicator={false}\n                        />\n                    </View>\n                    :\n                    <Text style={{ fontSize: 16, alignSelf: 'center', marginTop: 50 }}>ไม่มีข้อมูล</Text>\n            // null\n        )\n    }\n\n    const renderUserComment = () => {\n        const renderItem = ({ item, index }) => {\n            return (\n                <View style={{ padding: 8, margin: 15, backgroundColor: 'white', borderColor: 'gray', borderWidth: .3 }}>\n                    <Text style={{ fontSize: 16 }}>{item.number}. {item.qt}</Text>\n                    {/* <Text style={{ color: 'red' }}>*ผู้จัดการของแผนกคุณเท่านั้นที่จะเห็นคำตอบ แต่จะไม่รู้ว่าใครเป็นคนตอบ</Text> */}\n\n                    <TextInput\n                        style={{ backgroundColor: 'white', marginTop: 20, borderWidth: 1, padding: 10, borderRadius: 5, marginVertical: 8, height: 150 }}\n                        // textContentType='telephoneNumber'\n                        placeholder=\"คำตอบ\"\n                        placeholderTextColor=\"gray\"\n                        multiline\n                        numberOfLines={6}\n                        color='blue'\n                        fontSize={16}\n                        onChangeText={text => {\n                            answer[index] = text;\n                        }}\n                        defaultValue={item.answer}\n                    />\n\n                    <Button\n                        style={{\n                            backgroundColor: 'green',\n                            borderRadius: 10,\n                            marginVertical: 8\n                        }}\n                        mode=\"Contained\"\n                        onPress={() => {\n\n                            const dataSend = {\n                                manager_id: managerID,\n                                reveal: checked,\n                                answer: answer[index],\n                                date: moment().format('yyyy-MM-DD'),\n                                department: USER.department\n                            }\n                            console.log(dataSend)\n                            console.log(\"year\", year)\n                            console.log(\"part\", part)\n                            console.log(\"number\", item.number)\n                            console.log(\"userid\", USER.userid)\n                            postAnswer({ dataSend, number: item.number });\n                        }}\n                    >\n                        <Text style={{ alignSelf: 'center', color: 'white' }}>ส่งคำตอบ</Text>\n                    </Button>\n                </View>\n            )\n        }\n\n        return (\n            loadingPage ?\n                <ActivityIndicator style={{\n\n                    position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }} size=\"large\" color=\"#0275d8\" />\n                :\n                questionWithAnswer.length != 0 ?\n                    <FlatList\n                        data={questionWithAnswer}\n                        extraData={questionWithAnswer}\n                        keyExtractor={(item, index) => `${index}`}\n                        renderItem={renderItem}\n                        ListHeaderComponent={\n                            <View style={{ margin: 16, backgroundColor: 'white', paddingBottom: 16 }}>\n                                <Text style={{ fontSize: 16, margin: 16 }}>* ก่อนตอบคำถาม ท่านต้องการเปิดเผยชื่อให้ผู้จัดการทราบหรือไม่</Text>\n                                <CheckBox\n                                    title='ไม่เปิดเผยชื่อ'\n                                    checked={checked}\n                                    onPress={() => {\n                                        setChecked(!checked)\n                                        // console.log(checked);\n                                    }}\n                                />\n                            </View>\n                        }\n                    />\n                    :\n                    <Text style={{ fontSize: 16, alignSelf: 'center', marginTop: 50 }}>ไม่มีข้อมูล</Text>\n        )\n    }\n\n    return (\n        <View style={{ flex: 1, backgroundColor: 'white' }}>\n\n            {USER.position === 'ผู้จัดการ' ?\n                renderManagerCheck(navigation)\n                :\n                renderUserComment(navigation)\n            }\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    checkboxContainer: {\n        backgroundColor: 'white',\n        borderColor: 'gray',\n        borderWidth: 3,\n        flexDirection: \"row\",\n        marginBottom: 20,\n    },\n    checkbox: {\n\n        width: 20,\n        height: 20,\n        alignSelf: \"center\",\n    },\n    label: {\n        margin: 8,\n    },\n})\n\nexport default StaffCommentScreen;","import React, { useState, useEffect } from 'react';\nimport { View, Text, SafeAreaView, TextInput, StyleSheet, ActivityIndicator } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nimport axiox from 'axios';\nimport { MAIN_URL, USER } from '../constants/variables';\n\nconst ManagerListScreen = ({ navigation, route }) => {\n    let sheetID = route.params.sheetID;\n    let year = route.params.year;\n    let part = route.params.part;\n    let userid = USER.userid;\n    let position = USER.position;\n    let department = USER.department;\n\n    const [users, setUsers] = useState([]);\n    const [isLoading, setLoading] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n        getManagerList();\n\n    }, []);\n\n    const getManagerList = () => {\n        // console.log(MAIN_URL + '/users/position/ผู้จัดการ');\n        axiox.get(MAIN_URL + '/users/position/ผู้จัดการ')\n            .then(res => {\n                setUsers(res.data);\n                setLoading(false);\n                // setArrayholder(res.data)\n                // console.log(users);\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    };\n\n    const renderUsers = ({ navigation }) => {\n\n        // console.log(users);\n\n        const renderItem = ({ item }) => {\n            return (\n                <TouchableOpacity\n                    onPress={() => {\n                        // console.log(item);\n                        // console.log(USER)\n                        navigation.navigate('StaffComment', {\n                            sheetID: sheetID,\n                            managerID: item.userid,\n                            year: year,\n                            part: part\n                        });\n                    }}>\n                    <View style={{backgroundColor: 'white', borderWidth: 0.5, padding: 8, borderRadius: 10, margin: 4 }}>\n                        <Text style={{ fontSize: 18, fontWeight: 'bold', color: 'blue' }}>\n                            ชื่อ : {item.name + \" \" + item.lastname}\n                        </Text>\n                        <Text style={{ fontSize: 18, fontWeight: 'bold', color: 'red' }}>\n                            ชื่อเล่น : {item.nickname}\n                        </Text>\n                        <Text>\n                            เบอร์โทร :{item.phone}\n                        </Text>\n                        <Text>\n                            แผนก : {item.department}\n                        </Text>\n                    </View>\n                </TouchableOpacity>\n            );\n        }\n\n        return (\n            <FlatList\n                data={users}\n                keyExtractor={(item, index) => `${index}`}\n                // ItemSeparatorComponent={itemSeparator}\n                shouldComponentUpdate={false}\n                renderItem={renderItem}\n            // horizontal\n            // showsHorizontalScrollIndicator={false}\n            />\n\n        );\n    }\n\n    return (\n        <SafeAreaView style={{ flex: 1 }}>\n\n            {/* <TextInput\n                style={styles.textInput}\n                onChangeText={(text) => searchData(text)}\n                value={text}\n                underlineColorAndroid='transparent'\n                placeholder=\"ค้นหาจากชื่อเล่น\" /> */}\n\n            {/* {position === 'admin' ?\n                <View style={{ borderBottomWidth: 0.5, borderBottomColor: 'gray' }}>\n                    <Text style={{ marginHorizontal: 8, marginBottom: 8, }}>จำนวนคนตอบคำถามครบ {users.length} คน</Text>\n                </View>\n                :\n                null} */}\n\n\n            {renderUsers({ navigation })}\n\n            {isLoading ?\n\n                <ActivityIndicator style={{\n\n                    position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }} size=\"large\" color=\"#0275d8\" />\n                :\n                null\n            }\n\n        </SafeAreaView>\n\n    );\n};\n\nexport default ManagerListScreen;","import React from 'react';\nimport { View, Text, FlatList, Button, TouchableOpacity } from 'react-native';\nimport * as Animatable from 'react-native-animatable';\n\nimport axiox from 'axios';\nimport { MAIN_URL, USER } from '../constants/variables';\n\nconst EmployeeStatusSelectScreen = ({ navigation, route }) => {\n\n    let sheetID = route.params.item;\n    let userid = USER.userid;\n    let position = USER.position;\n    let department = USER.department;\n\n    // const getDepartment = () => {\n    //     console.log(department);\n    //     // console.log(MAIN_URL + '/users/department/' + department);\n    //     axiox.get(MAIN_URL + '/users/department/' + department)\n    //         .then(res => {\n    //             setUsers(res.data);\n    //             setLoading(false);\n    //             setArrayholder(res.data)\n    //             // console.log(users);\n    //         })\n    //         .catch(err => {\n    //             console.log(err)\n    //         })\n    // };\n\n    // useEffect(() => {\n    //     setLoading(true);\n    //     if (position === 'admin' || department === 'MD') {\n    //         getAllQuestion();\n    //     } else {\n    //         getDepartment();\n    //     }\n\n\n    // }, []);\n\n    return (\n        <Animatable.View\n            style={{ flex: 1 }}\n            animation='fadeIn'>\n            <TouchableOpacity\n                style={{ marginVertical: 20, marginHorizontal: 30, borderRadius: 10, backgroundColor: 'green' }}\n                onPress={() => {\n                    navigation.navigate('UserList', {\n                        userId: USER.userid,\n                        sheetID: sheetID,\n                    })\n                }}>\n                <Text style={{ paddingVertical: 20, alignSelf: 'center', color: 'white', fontSize: 20 }}>เลือกพนักงานในทีมเพื่อประเมิน</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n                style={{ marginVertical: 20, marginHorizontal: 30, borderRadius: 10, backgroundColor: 'blue' }}\n                onPress={() => {\n                    navigation.navigate('EmployeeStatusComment')\n                }}>\n                <Text style={{ paddingVertical: 20, alignSelf: 'center', color: 'white', fontSize: 20 }}>ดูรายชื่อพนักงานที่ประเมินแล้ว</Text>\n            </TouchableOpacity>\n        </Animatable.View>\n\n    )\n}\n\nexport default EmployeeStatusSelectScreen;","import React, { useState } from 'react';\nimport { View, Text, TextInput, FlatList, TouchableOpacity } from 'react-native';\nimport * as Animatable from 'react-native-animatable';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nimport axiox from 'axios';\nimport moment from 'moment';\nimport 'moment/locale/th';\n\nimport { MAIN_URL, USER } from '../constants/variables';\nimport { Button } from 'react-native-paper';\nimport { COLORS } from '../constants/theme';\n\nconst EmployeeStatusScreen = ({ route }) => {\n\n    let user = route.params.user;\n    console.log(user)\n    const [selected, setSelected] = useState(0);\n    const [answer, setAnswer] = useState('1. โน้มน้าวใจให้เขาอยู่ต่อ');\n    const [reason, setReason] = useState('');\n    const list = [\n        {\n            id: 1,\n            question: '1. โน้มน้าวใจให้เขาอยู่ต่อ'\n        },\n        {\n            id: 2,\n            question: '2. ไม่แน่ใจ (ปรับทัศนคติใหม่)'\n        },\n        {\n            id: 3,\n            question: '3. เฉยๆ (เดี๋ยวหาใหม่ก็ได้)'\n        },\n        {\n            id: 4,\n            question: '4. โล่งใจ'\n        }\n    ]\n    \n    const postAnswer = ({ dataSend }) => {\n        console.log()\n        axiox.post(MAIN_URL + '/answer/assessment', dataSend)\n            // console.log('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.questionNumber + '/Answer/officer/' + userId, answer)\n            .then(res => {\n                // console.log(res.data);\n                alert(\"บันทึกข้อมูลสำเร็จ\");\n                // setLoading(false);\n            })\n            .catch(err => {\n                console.log(err)\n                alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                // setLoading(false);\n\n            });\n    }\n\n    const renderList = ({ item, index }) => {\n        return (\n            <TouchableOpacity\n                style={{ margin: 8 }}\n                onPress={() => {\n                    setSelected(index);\n                    setAnswer(item.question);\n                }}>\n                {selected === index ?\n                    <View style={{ flexDirection: 'row' }}>\n                        <Icon name='check-circle'\n                            color={COLORS.primary}\n                            size={30} />\n                        <Text style={{ fontSize: 16, alignSelf: 'center' }}> {item.question}</Text>\n                    </View>\n                    :\n                    <View style={{ flexDirection: 'row' }}>\n                        <Icon name='circle'\n                            color={COLORS.primary}\n                            size={30} />\n                        <Text style={{ fontSize: 16, alignSelf: 'center' }}> {item.question}</Text>\n                    </View>\n                }\n            </TouchableOpacity>\n        )\n    }\n\n    return (\n        <Animatable.View\n            style={{ flex: 1, padding: 20, backgroundColor: 'white' }}\n            animation='fadeIn'>\n\n\n            <View style={{ marginVertical: 24 }}>\n                <FlatList\n                    data={list}\n                    renderItem={renderList}\n                    // numColumns={2}\n                    keyExtractor={(item, index) => `${index}`}\n                    ListHeaderComponent={\n                        <Text style={{ fontSize: 18, marginBottom: 20 }}>หาก\n                            <Text style={{ fontStyle: 'italic', fontSize: 18, color: 'blue' }}>\n                                {' '} {user.title_name}{user.name} {user.lastname}\n                                <Text style={{ color: 'red', fontSize: 18 }}> ลาออก</Text>\n                            </Text>\n                            {' '}ท่านจะทำอย่างไร?\n                        </Text>\n                    }\n                    ListFooterComponent={\n                        <View>\n                            <TextInput\n                                style={{ backgroundColor: 'white', marginTop: 20, borderWidth: 1, padding: 10, borderRadius: 5, marginVertical: 8, height: 150 }}\n                                // textContentType='telephoneNumber'\n                                placeholder=\"เหตุผลเพราะอะไร\"\n                                placeholderTextColor=\"gray\"\n                                multiline\n                                numberOfLines={6}\n                                color='blue'\n                                fontSize={16}\n                                onChangeText={text => {\n                                    setReason(text)\n                                }}\n                            // defaultValue={item.answer}\n                            />\n                            <Button\n                                style={{\n                                    backgroundColor: 'green',\n                                    borderRadius: 10,\n                                    marginVertical: 16\n                                }}\n                                mode=\"Contained\"\n                                onPress={() => {\n                                    console.log(user);\n                                    const dataSend = {\n                                        userid: user.userid,\n                                        name: user.name,\n                                        lastname: user.lastname,\n                                        nickname: user.nickname,\n                                        answer: answer,\n                                        reason: reason,\n                                        department: user.department,\n                                        date: moment().format('yyyy-MM-DD'),\n                                        manager_id: USER.userid,\n                                        manager_name: USER.name,\n                                        manager_lastname: USER.lastname,\n                                        manager_nickname: USER.nickname\n                                    }\n                                    console.log(dataSend)\n                                    // console.log(\"year\", year)\n                                    // console.log(\"part\", part)\n                                    // console.log(\"number\", item.number)\n                                    // console.log(\"userid\", USER.userid)\n                                    postAnswer({ dataSend });\n                                }}\n                            >\n                                <Text style={{ alignSelf: 'center', color: 'white' }}>บันทึกคำตอบ</Text>\n                            </Button>\n                        </View>\n\n                    }\n                />\n            </View>\n        </Animatable.View>\n\n    )\n}\n\nexport default EmployeeStatusScreen;","import React, { useState, useEffect } from 'react'\nimport { View, Text, TextInput, FlatList, TouchableOpacity, ActivityIndicator, Alert } from 'react-native'\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport axiox from 'axios';\nimport { COLORS, SIZES } from '../constants/theme';\n\nimport moment from 'moment';\nimport 'moment/locale/th';\nimport { MAIN_URL, USER } from '../constants/variables';\n\nconst EmployeeStatusCommentScreen = () => {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    // const [dataDelete, setDataDelete] = useState({});\n\n    useEffect(() => {\n        getAllEmployeeAssessment();\n    }, []);\n\n    const getAllEmployeeAssessment = () => {\n        setLoading(true);\n        // console.log(\"getAll\")\n        axiox.get(MAIN_URL + '/answer/assessment')\n            // console.log('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.questionNumber + '/Answer/officer/' + userId, answer)\n            .then(res => {\n                // console.log(\"ALL DATA\", res.data);\n                setData(res.data)\n                // alert(\"บันทึกข้อมูลสำเร็จ\");\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err)\n                // alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                setLoading(false);\n\n            });\n    };\n\n    const deleteComment = ({ userid, answer, manager_id }) => {\n        setLoading(true);\n        console.log(userid)\n        axiox.delete(MAIN_URL + '/answer/assessment', { data: { userid, answer, manager_id } })\n            .then(res => {\n                // console.log(dataDelete);\n                getAllEmployeeAssessment();\n\n                alert(\"ลบความคิดเห็นสำเร็จ\");\n                setLoading(false);\n                // setNumber = '';\n                // setQuestion = '';\n            })\n            .catch(err => {\n                console.log(err);\n\n                alert(\"ล้มเหลว กรุณาลองใหม่\");\n                setLoading(false);\n            });\n    }\n\n    const renderItem = ({ item, index }) => {\n        return (\n            <View style={{ padding: 12, backgroundColor: 'white' }}>\n                <View style={{ borderRadius: 10, borderWidth: 1, borderColor: 'black', padding: 8 }}>\n                    <Text style={{ color: 'gray', marginBottom: 4 }}>\n                        วันที่ {moment(item.date).format('ll')}\n                    </Text>\n                    <Text style={{ fontSize: 16 }}>\n                        ความเห็นจาก <Text style={{ color: 'blue' }}>{item.manager_name} {item.manager_lastname} [{item.manager_nickname}]</Text>\n                    </Text>\n                    <Text style={{ fontSize: 16 }}>\n                        หากว่า <Text style={{ color: 'green' }}>{item.name} {item.lastname} ({item.nickname}) [{item.department}]</Text> <Text style={{ color: 'red' }}>จะลาออก</Text>\n                    </Text>\n                    <View style={{ marginVertical: 8, borderRadius: 10, borderWidth: 0.5, borderColor: 'gray', padding: 8 }}>\n                        <Text style={{ fontSize: 16 }}>\n                            {item.answer}\n                        </Text>\n                        <Text style={{ color: 'green', fontSize: 16 }}>\n                            เพราะ {item.reason}\n                        </Text>\n                    </View>\n                    {\n                        USER.department === 'MD' ?\n                            <TouchableOpacity\n                                style={{ position: 'absolute', right: 5, top: 5 }}\n                                onPress={() => {\n\n                                    Alert.alert(\n                                        \"ลบความคิดเห็น\",\n                                        \"คุณต้องการลบความคิดเห็นนี้หรือไม่\",\n                                        [\n                                            {\n                                                text: \"ลบ\",\n                                                onPress: () => {\n                                                    // console.log(dataDelete)\n                                                    deleteComment({ userid: item.userid, answer: item.answer, manager_id: item.manager_id })\n                                                },\n                                                style: \"default\"\n                                            },\n                                            {\n                                                text: \"ยกเลิก\",\n                                                onPress: () => { },\n                                                style: \"cancle\"\n                                            }\n                                        ],\n                                    )\n\n                                }}>\n                                <Icon name='trash'\n                                    color='red'\n                                    size={20} />\n                            </TouchableOpacity>\n                            : null\n                    }\n\n                </View>\n            </View>\n        )\n    }\n\n    return (\n        loading ?\n            <ActivityIndicator style={{\n                position: 'absolute',\n                left: 0,\n                right: 0,\n                top: 0,\n                bottom: 0,\n                alignItems: 'center',\n                justifyContent: 'center'\n            }} size=\"large\" color=\"#0275d8\" />\n            :\n            <FlatList\n                data={data}\n                extraData={data}\n                keyExtractor={(item, index) => `${index}`}\n                renderItem={renderItem}\n                ListHeaderComponent={\n                    <Text style={{ alignSelf: 'center', marginVertical: 16, fontSize: 16, fontWeight: 'bold' }}>ความเห็นทั้งหมดของผู้จัดการ</Text>\n                }\n            // scrollEnabled={false}\n            />\n    )\n}\n\nexport default EmployeeStatusCommentScreen;","import React, { useState, useEffect, useMemo } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\n\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { USER } from './src/constants/variables'\n\nimport HomeScreen from './src/screens/HomeScreen'\nimport AssessmentScreen from './src/screens/AssessmentScreen';\nimport StaffQuestionnaireScreen from './src/screens/StaffQuestionnaireScreen';\nimport ManagerQuestionnaireScreen from './src/screens/ManagerQuestionnaireScreen';\nimport VideoWebViewScreen from './src/screens/VideoWebViewScreen';\nimport LoginScreen from './src/screens/LoginScreen';\n\nimport { AuthContext } from './src/components/context';\nimport RootStackScreen from './src/screens/RootStackScreen';\nimport { COLORS } from './src/constants/theme';\nimport UserListScreen from './src/screens/UserListScreen';\nimport SelectQuestionScreen from './src/screens/SelectQuestionScreen';\nimport CreateQuestionScreen from './src/screens/CreateQuestionScreen';\nimport StaffCommentScreen from './src/screens/StaffCommentScreen';\nimport ManagerListScreen from './src/screens/ManagerListScreen';\nimport EmployeeStatusSelectScreen from './src/screens/EmployeeStatusSelectScreen';\nimport EmployeeStatusScreen from './src/screens/EmployeeStatusScreen';\nimport EmployeeStatusCommentScreen from './src/screens/EmployeeStatusCommentScreen';\n\nconst Stack = createStackNavigator();\nconst Tab = createMaterialTopTabNavigator();\n\nconst Questionnaire = ({ route }) => {\n\n  const userId = route.params.userId;\n  const sheetID = route.params.sheetID;\n  const year = route.params.year;\n  const part = route.params.part;\n\n  // console.log(route);\n  return (\n    <Tab.Navigator>\n      <Tab.Screen\n        name=\"AllStaff\"\n        component={StaffQuestionnaireScreen}\n        options={{ title: 'ทั่วไป' }}\n        // listeners={({ navigation }) => ({ blur: () => navigation.setParams({ screen: undefined }) })}\n        initialParams={{ userId: userId, sheetID: sheetID, year: year, part: part }} />\n      <Tab.Screen\n        name=\"Manager\"\n        component={ManagerQuestionnaireScreen}\n        options={{ title: 'ผู้จัดการถาม' }}\n        // listeners={({ navigation }) => ({ blur: () => navigation.setParams({ screen: undefined }) })}\n        initialParams={{ userId: userId, sheetID: sheetID, year: year, part: part }} />\n    </Tab.Navigator>\n  );\n}\n\nconst App = () => {\n\n  // const [isLoading, setIsLoading] = useState(true);\n  // const [userToken, setUserToken] = useState(null);\n\n  const initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null,\n  };\n\n  const loginReducer = (prevState, action) => {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return {\n          ...prevState,\n          userToken: action.token,\n          isLoading: false\n        };\n      case 'LOGIN':\n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        };\n      case 'LOGOUT':\n        return {\n          ...prevState,\n          userName: null,\n          userToken: null,\n          isLoading: false\n        };\n    }\n  };\n\n  const [loginState, dispacth] = React.useReducer(loginReducer, initialLoginState);\n\n  const authContext = useMemo(() => ({\n    signIn: (userName, position, department) => {\n      // setUserToken('asdf');\n      // setIsLoading(false);\n      let userToken;\n      // userName = null;\n      // if (userName === 'User' && password === 'Pass') {\n      userToken = userName;\n      USER.position = position;\n      USER.department = department;\n      USER.userid = userName;\n\n      // console.log(LOGIN.position);\n      // }\n      dispacth({ type: 'LOGIN', id: userName, token: userToken });\n    },\n    signOut: () => {\n      // setUserToken(null);\n      // setIsLoading(false);\n      dispacth({ type: 'LOGOUT' });\n    },\n  }), []);\n\n  const logoutState = async () => {\n    // console.log(queueSelect);\n    try {\n      await AsyncStorage.removeItem('user_login');\n      return true;\n\n    } catch (error) {\n      console.log('error: ', error);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      <NavigationContainer>\n        {/* {console.log(loginState.userToken)} */}\n        {loginState.userToken != null ? (\n\n          <Stack.Navigator\n            screenOptions={{\n              headerShown: true,\n              headerRight: () => <Icon name='sign-out'\n                // color= {COLORS.primary}\n                size={20}\n                style={{ marginHorizontal: 16 }}\n                onPress={() => {\n                  logoutState();\n                  authContext.signOut();\n\n                }}\n              />\n            }}\n            initialRouteName=\"Home\">\n\n            <Stack.Screen name=\"Home\" component={HomeScreen} options={{ title: 'หน้าแรก', }} initialParams={{ userid: loginState.userToken }} />\n            <Stack.Screen name=\"Assessment\" component={AssessmentScreen} options={{ title: 'ปีประเมิน' }} />\n            <Stack.Screen name=\"ManagerList\" component={ManagerListScreen} options={{ title: 'เลือกผู้จัดการ' }} />\n            <Stack.Screen name=\"SelectQuestion\" component={SelectQuestionScreen} options={{ title: 'ตั้งคำถาม' }} />\n            <Stack.Screen name=\"CreateQuestion\" component={CreateQuestionScreen} options={{ title: 'ตั้งคำถาม' }} />\n            <Stack.Screen name=\"UserList\" component={UserListScreen} options={{ title: 'รายชื่อ' }} />\n            <Stack.Screen name=\"Questionnaire\" component={Questionnaire} options={{ title: 'แบบประเมิน' }} />\n            <Stack.Screen name=\"EmployeeStatusSelect\" component={EmployeeStatusSelectScreen} options={{ title: 'ประเมินสถานะพนักงาน' }} />\n            <Stack.Screen name=\"EmployeeStatusComment\" component={EmployeeStatusCommentScreen} options={{ title: 'ความเห็นผู้จัดการ' }} />\n            <Stack.Screen name=\"EmployeeStatus\" component={EmployeeStatusScreen} options={{ title: 'ประเมินสถานะพนักงาน' }} />\n            <Stack.Screen name=\"VideoWebView\" component={VideoWebViewScreen} options={{ title: 'ดูวิดีโอ' }} />\n            <Stack.Screen name=\"StaffComment\" component={StaffCommentScreen} options={{ title: 'ความคิดเห็น' }} />\n          </Stack.Navigator>\n        )\n\n          :\n\n          <RootStackScreen />\n        }\n\n      </NavigationContainer>\n\n    </AuthContext.Provider>\n\n  );\n}\n\nexport default App;\n","var map = {\n\t\"./af\": 168,\n\t\"./af.js\": 168,\n\t\"./ar\": 169,\n\t\"./ar-dz\": 170,\n\t\"./ar-dz.js\": 170,\n\t\"./ar-kw\": 171,\n\t\"./ar-kw.js\": 171,\n\t\"./ar-ly\": 172,\n\t\"./ar-ly.js\": 172,\n\t\"./ar-ma\": 173,\n\t\"./ar-ma.js\": 173,\n\t\"./ar-sa\": 174,\n\t\"./ar-sa.js\": 174,\n\t\"./ar-tn\": 175,\n\t\"./ar-tn.js\": 175,\n\t\"./ar.js\": 169,\n\t\"./az\": 176,\n\t\"./az.js\": 176,\n\t\"./be\": 177,\n\t\"./be.js\": 177,\n\t\"./bg\": 178,\n\t\"./bg.js\": 178,\n\t\"./bm\": 179,\n\t\"./bm.js\": 179,\n\t\"./bn\": 180,\n\t\"./bn-bd\": 181,\n\t\"./bn-bd.js\": 181,\n\t\"./bn.js\": 180,\n\t\"./bo\": 182,\n\t\"./bo.js\": 182,\n\t\"./br\": 183,\n\t\"./br.js\": 183,\n\t\"./bs\": 184,\n\t\"./bs.js\": 184,\n\t\"./ca\": 185,\n\t\"./ca.js\": 185,\n\t\"./cs\": 186,\n\t\"./cs.js\": 186,\n\t\"./cv\": 187,\n\t\"./cv.js\": 187,\n\t\"./cy\": 188,\n\t\"./cy.js\": 188,\n\t\"./da\": 189,\n\t\"./da.js\": 189,\n\t\"./de\": 190,\n\t\"./de-at\": 191,\n\t\"./de-at.js\": 191,\n\t\"./de-ch\": 192,\n\t\"./de-ch.js\": 192,\n\t\"./de.js\": 190,\n\t\"./dv\": 193,\n\t\"./dv.js\": 193,\n\t\"./el\": 194,\n\t\"./el.js\": 194,\n\t\"./en-au\": 195,\n\t\"./en-au.js\": 195,\n\t\"./en-ca\": 196,\n\t\"./en-ca.js\": 196,\n\t\"./en-gb\": 197,\n\t\"./en-gb.js\": 197,\n\t\"./en-ie\": 198,\n\t\"./en-ie.js\": 198,\n\t\"./en-il\": 199,\n\t\"./en-il.js\": 199,\n\t\"./en-in\": 200,\n\t\"./en-in.js\": 200,\n\t\"./en-nz\": 201,\n\t\"./en-nz.js\": 201,\n\t\"./en-sg\": 202,\n\t\"./en-sg.js\": 202,\n\t\"./eo\": 203,\n\t\"./eo.js\": 203,\n\t\"./es\": 204,\n\t\"./es-do\": 205,\n\t\"./es-do.js\": 205,\n\t\"./es-mx\": 206,\n\t\"./es-mx.js\": 206,\n\t\"./es-us\": 207,\n\t\"./es-us.js\": 207,\n\t\"./es.js\": 204,\n\t\"./et\": 208,\n\t\"./et.js\": 208,\n\t\"./eu\": 209,\n\t\"./eu.js\": 209,\n\t\"./fa\": 210,\n\t\"./fa.js\": 210,\n\t\"./fi\": 211,\n\t\"./fi.js\": 211,\n\t\"./fil\": 212,\n\t\"./fil.js\": 212,\n\t\"./fo\": 213,\n\t\"./fo.js\": 213,\n\t\"./fr\": 214,\n\t\"./fr-ca\": 215,\n\t\"./fr-ca.js\": 215,\n\t\"./fr-ch\": 216,\n\t\"./fr-ch.js\": 216,\n\t\"./fr.js\": 214,\n\t\"./fy\": 217,\n\t\"./fy.js\": 217,\n\t\"./ga\": 218,\n\t\"./ga.js\": 218,\n\t\"./gd\": 219,\n\t\"./gd.js\": 219,\n\t\"./gl\": 220,\n\t\"./gl.js\": 220,\n\t\"./gom-deva\": 221,\n\t\"./gom-deva.js\": 221,\n\t\"./gom-latn\": 222,\n\t\"./gom-latn.js\": 222,\n\t\"./gu\": 223,\n\t\"./gu.js\": 223,\n\t\"./he\": 224,\n\t\"./he.js\": 224,\n\t\"./hi\": 225,\n\t\"./hi.js\": 225,\n\t\"./hr\": 226,\n\t\"./hr.js\": 226,\n\t\"./hu\": 227,\n\t\"./hu.js\": 227,\n\t\"./hy-am\": 228,\n\t\"./hy-am.js\": 228,\n\t\"./id\": 229,\n\t\"./id.js\": 229,\n\t\"./is\": 230,\n\t\"./is.js\": 230,\n\t\"./it\": 231,\n\t\"./it-ch\": 232,\n\t\"./it-ch.js\": 232,\n\t\"./it.js\": 231,\n\t\"./ja\": 233,\n\t\"./ja.js\": 233,\n\t\"./jv\": 234,\n\t\"./jv.js\": 234,\n\t\"./ka\": 235,\n\t\"./ka.js\": 235,\n\t\"./kk\": 236,\n\t\"./kk.js\": 236,\n\t\"./km\": 237,\n\t\"./km.js\": 237,\n\t\"./kn\": 238,\n\t\"./kn.js\": 238,\n\t\"./ko\": 239,\n\t\"./ko.js\": 239,\n\t\"./ku\": 240,\n\t\"./ku.js\": 240,\n\t\"./ky\": 241,\n\t\"./ky.js\": 241,\n\t\"./lb\": 242,\n\t\"./lb.js\": 242,\n\t\"./lo\": 243,\n\t\"./lo.js\": 243,\n\t\"./lt\": 244,\n\t\"./lt.js\": 244,\n\t\"./lv\": 245,\n\t\"./lv.js\": 245,\n\t\"./me\": 246,\n\t\"./me.js\": 246,\n\t\"./mi\": 247,\n\t\"./mi.js\": 247,\n\t\"./mk\": 248,\n\t\"./mk.js\": 248,\n\t\"./ml\": 249,\n\t\"./ml.js\": 249,\n\t\"./mn\": 250,\n\t\"./mn.js\": 250,\n\t\"./mr\": 251,\n\t\"./mr.js\": 251,\n\t\"./ms\": 252,\n\t\"./ms-my\": 253,\n\t\"./ms-my.js\": 253,\n\t\"./ms.js\": 252,\n\t\"./mt\": 254,\n\t\"./mt.js\": 254,\n\t\"./my\": 255,\n\t\"./my.js\": 255,\n\t\"./nb\": 256,\n\t\"./nb.js\": 256,\n\t\"./ne\": 257,\n\t\"./ne.js\": 257,\n\t\"./nl\": 258,\n\t\"./nl-be\": 259,\n\t\"./nl-be.js\": 259,\n\t\"./nl.js\": 258,\n\t\"./nn\": 260,\n\t\"./nn.js\": 260,\n\t\"./oc-lnc\": 261,\n\t\"./oc-lnc.js\": 261,\n\t\"./pa-in\": 262,\n\t\"./pa-in.js\": 262,\n\t\"./pl\": 263,\n\t\"./pl.js\": 263,\n\t\"./pt\": 264,\n\t\"./pt-br\": 265,\n\t\"./pt-br.js\": 265,\n\t\"./pt.js\": 264,\n\t\"./ro\": 266,\n\t\"./ro.js\": 266,\n\t\"./ru\": 267,\n\t\"./ru.js\": 267,\n\t\"./sd\": 268,\n\t\"./sd.js\": 268,\n\t\"./se\": 269,\n\t\"./se.js\": 269,\n\t\"./si\": 270,\n\t\"./si.js\": 270,\n\t\"./sk\": 271,\n\t\"./sk.js\": 271,\n\t\"./sl\": 272,\n\t\"./sl.js\": 272,\n\t\"./sq\": 273,\n\t\"./sq.js\": 273,\n\t\"./sr\": 274,\n\t\"./sr-cyrl\": 275,\n\t\"./sr-cyrl.js\": 275,\n\t\"./sr.js\": 274,\n\t\"./ss\": 276,\n\t\"./ss.js\": 276,\n\t\"./sv\": 277,\n\t\"./sv.js\": 277,\n\t\"./sw\": 278,\n\t\"./sw.js\": 278,\n\t\"./ta\": 279,\n\t\"./ta.js\": 279,\n\t\"./te\": 280,\n\t\"./te.js\": 280,\n\t\"./tet\": 281,\n\t\"./tet.js\": 281,\n\t\"./tg\": 282,\n\t\"./tg.js\": 282,\n\t\"./th\": 85,\n\t\"./th.js\": 85,\n\t\"./tk\": 283,\n\t\"./tk.js\": 283,\n\t\"./tl-ph\": 284,\n\t\"./tl-ph.js\": 284,\n\t\"./tlh\": 285,\n\t\"./tlh.js\": 285,\n\t\"./tr\": 286,\n\t\"./tr.js\": 286,\n\t\"./tzl\": 287,\n\t\"./tzl.js\": 287,\n\t\"./tzm\": 288,\n\t\"./tzm-latn\": 289,\n\t\"./tzm-latn.js\": 289,\n\t\"./tzm.js\": 288,\n\t\"./ug-cn\": 290,\n\t\"./ug-cn.js\": 290,\n\t\"./uk\": 291,\n\t\"./uk.js\": 291,\n\t\"./ur\": 292,\n\t\"./ur.js\": 292,\n\t\"./uz\": 293,\n\t\"./uz-latn\": 294,\n\t\"./uz-latn.js\": 294,\n\t\"./uz.js\": 293,\n\t\"./vi\": 295,\n\t\"./vi.js\": 295,\n\t\"./x-pseudo\": 296,\n\t\"./x-pseudo.js\": 296,\n\t\"./yo\": 297,\n\t\"./yo.js\": 297,\n\t\"./zh-cn\": 298,\n\t\"./zh-cn.js\": 298,\n\t\"./zh-hk\": 299,\n\t\"./zh-hk.js\": 299,\n\t\"./zh-mo\": 300,\n\t\"./zh-mo.js\": 300,\n\t\"./zh-tw\": 301,\n\t\"./zh-tw.js\": 301\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 436;"],"sourceRoot":""}