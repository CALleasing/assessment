{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/drift/Documents/ReactNative/cal-assessment/src/screens/EmployeeStatusScreen.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Animatable from 'react-native-animatable';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport axiox from 'axios';\nimport moment from 'moment';\nimport 'moment/locale/th';\nimport { MAIN_URL, USER } from \"../constants/variables\";\nimport { Button } from 'react-native-paper';\nimport { COLORS } from \"../constants/theme\";\n\nvar EmployeeStatusScreen = function EmployeeStatusScreen(_ref) {\n  var route = _ref.route;\n  var user = route.params.user;\n  console.log(user);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState('1. โน้มน้าวใจให้เขาอยู่ต่อ'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      answer = _useState4[0],\n      setAnswer = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      reason = _useState6[0],\n      setReason = _useState6[1];\n\n  var list = [{\n    id: 1,\n    question: '1. โน้มน้าวใจให้เขาอยู่ต่อ'\n  }, {\n    id: 2,\n    question: '2. ไม่แน่ใจ (ปรับทัศนคติใหม่)'\n  }, {\n    id: 3,\n    question: '3. เฉยๆ (เดี๋ยวหาใหม่ก็ได้)'\n  }, {\n    id: 4,\n    question: '4. โล่งใจ'\n  }];\n\n  var postAnswer = function postAnswer(_ref2) {\n    var dataSend = _ref2.dataSend;\n    console.log();\n    axiox.post(MAIN_URL + '/answer/assessment', dataSend).then(function (res) {\n      alert(\"บันทึกข้อมูลสำเร็จ\");\n    }).catch(function (err) {\n      console.log(err);\n      alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n    });\n  };\n\n  var renderList = function renderList(_ref3) {\n    var item = _ref3.item,\n        index = _ref3.index;\n    return React.createElement(TouchableOpacity, {\n      style: {\n        margin: 8\n      },\n      onPress: function onPress() {\n        setSelected(index);\n        setAnswer(item.question);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, selected === index ? React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, React.createElement(Icon, {\n      name: \"check-circle\",\n      color: COLORS.primary,\n      size: 30,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      style: {\n        fontSize: 16,\n        alignSelf: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, \" \", item.question)) : React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, React.createElement(Icon, {\n      name: \"circle\",\n      color: COLORS.primary,\n      size: 30,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      style: {\n        fontSize: 16,\n        alignSelf: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, \" \", item.question)));\n  };\n\n  return React.createElement(Animatable.View, {\n    style: {\n      flex: 1,\n      padding: 20,\n      backgroundColor: 'white'\n    },\n    animation: \"fadeIn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      marginVertical: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: list,\n    renderItem: renderList,\n    keyExtractor: function keyExtractor(item, index) {\n      return \"\" + index;\n    },\n    ListHeaderComponent: React.createElement(Text, {\n      style: {\n        fontSize: 18,\n        marginBottom: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, \"\\u0E2B\\u0E32\\u0E01\", React.createElement(Text, {\n      style: {\n        fontStyle: 'italic',\n        fontSize: 18,\n        color: 'blue'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, ' ', \" \", user.title_name, user.name, \" \", user.lastname, React.createElement(Text, {\n      style: {\n        color: 'red',\n        fontSize: 18\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, \" \\u0E25\\u0E32\\u0E2D\\u0E2D\\u0E01\")), ' ', \"\\u0E17\\u0E48\\u0E32\\u0E19\\u0E08\\u0E30\\u0E17\\u0E33\\u0E2D\\u0E22\\u0E48\\u0E32\\u0E07\\u0E44\\u0E23?\"),\n    ListFooterComponent: React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, React.createElement(TextInput, {\n      style: {\n        backgroundColor: 'white',\n        marginTop: 20,\n        borderWidth: 1,\n        padding: 10,\n        borderRadius: 5,\n        marginVertical: 8,\n        height: 150\n      },\n      placeholder: \"\\u0E40\\u0E2B\\u0E15\\u0E38\\u0E1C\\u0E25\\u0E40\\u0E1E\\u0E23\\u0E32\\u0E30\\u0E2D\\u0E30\\u0E44\\u0E23\",\n      placeholderTextColor: \"gray\",\n      multiline: true,\n      numberOfLines: 6,\n      color: \"blue\",\n      fontSize: 16,\n      onChangeText: function onChangeText(text) {\n        setReason(text);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }\n    }), React.createElement(Button, {\n      style: {\n        backgroundColor: 'green',\n        borderRadius: 10,\n        marginVertical: 16\n      },\n      mode: \"Contained\",\n      onPress: function onPress() {\n        console.log(user);\n        var dataSend = {\n          userid: user.userid,\n          name: user.name,\n          lastname: user.lastname,\n          nickname: user.nickname,\n          answer: answer,\n          reason: reason,\n          department: user.department,\n          date: moment().format('yyyy-MM-DD'),\n          manager_id: USER.userid,\n          manager_name: USER.name,\n          manager_lastname: USER.lastname,\n          manager_nickname: USER.nickname\n        };\n        console.log(dataSend);\n        postAnswer({\n          dataSend: dataSend\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: {\n        alignSelf: 'center',\n        color: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    }, \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\"))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default EmployeeStatusScreen;","map":{"version":3,"sources":["/Users/drift/Documents/ReactNative/cal-assessment/src/screens/EmployeeStatusScreen.js"],"names":["React","useState","Animatable","Icon","axiox","moment","MAIN_URL","USER","Button","COLORS","EmployeeStatusScreen","route","user","params","console","log","selected","setSelected","answer","setAnswer","reason","setReason","list","id","question","postAnswer","dataSend","post","then","res","alert","catch","err","renderList","item","index","margin","flexDirection","primary","fontSize","alignSelf","flex","padding","backgroundColor","marginVertical","marginBottom","fontStyle","color","title_name","name","lastname","marginTop","borderWidth","borderRadius","height","text","userid","nickname","department","date","format","manager_id","manager_name","manager_lastname","manager_nickname"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, FlatList, TouchableOpacity } from 'react-native';\nimport * as Animatable from 'react-native-animatable';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nimport axiox from 'axios';\nimport moment from 'moment';\nimport 'moment/locale/th';\n\nimport { MAIN_URL, USER } from '../constants/variables';\nimport { Button } from 'react-native-paper';\nimport { COLORS } from '../constants/theme';\n\nconst EmployeeStatusScreen = ({ route }) => {\n\n    let user = route.params.user;\n    console.log(user)\n    const [selected, setSelected] = useState(0);\n    const [answer, setAnswer] = useState('1. โน้มน้าวใจให้เขาอยู่ต่อ');\n    const [reason, setReason] = useState('');\n    const list = [\n        {\n            id: 1,\n            question: '1. โน้มน้าวใจให้เขาอยู่ต่อ'\n        },\n        {\n            id: 2,\n            question: '2. ไม่แน่ใจ (ปรับทัศนคติใหม่)'\n        },\n        {\n            id: 3,\n            question: '3. เฉยๆ (เดี๋ยวหาใหม่ก็ได้)'\n        },\n        {\n            id: 4,\n            question: '4. โล่งใจ'\n        }\n    ]\n    \n    const postAnswer = ({ dataSend }) => {\n        console.log()\n        axiox.post(MAIN_URL + '/answer/assessment', dataSend)\n            // console.log('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.questionNumber + '/Answer/officer/' + userId, answer)\n            .then(res => {\n                // console.log(res.data);\n                alert(\"บันทึกข้อมูลสำเร็จ\");\n                // setLoading(false);\n            })\n            .catch(err => {\n                console.log(err)\n                alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                // setLoading(false);\n\n            });\n    }\n\n    const renderList = ({ item, index }) => {\n        return (\n            <TouchableOpacity\n                style={{ margin: 8 }}\n                onPress={() => {\n                    setSelected(index);\n                    setAnswer(item.question);\n                }}>\n                {selected === index ?\n                    <View style={{ flexDirection: 'row' }}>\n                        <Icon name='check-circle'\n                            color={COLORS.primary}\n                            size={30} />\n                        <Text style={{ fontSize: 16, alignSelf: 'center' }}> {item.question}</Text>\n                    </View>\n                    :\n                    <View style={{ flexDirection: 'row' }}>\n                        <Icon name='circle'\n                            color={COLORS.primary}\n                            size={30} />\n                        <Text style={{ fontSize: 16, alignSelf: 'center' }}> {item.question}</Text>\n                    </View>\n                }\n            </TouchableOpacity>\n        )\n    }\n\n    return (\n        <Animatable.View\n            style={{ flex: 1, padding: 20, backgroundColor: 'white' }}\n            animation='fadeIn'>\n\n\n            <View style={{ marginVertical: 24 }}>\n                <FlatList\n                    data={list}\n                    renderItem={renderList}\n                    // numColumns={2}\n                    keyExtractor={(item, index) => `${index}`}\n                    ListHeaderComponent={\n                        <Text style={{ fontSize: 18, marginBottom: 20 }}>หาก\n                            <Text style={{ fontStyle: 'italic', fontSize: 18, color: 'blue' }}>\n                                {' '} {user.title_name}{user.name} {user.lastname}\n                                <Text style={{ color: 'red', fontSize: 18 }}> ลาออก</Text>\n                            </Text>\n                            {' '}ท่านจะทำอย่างไร?\n                        </Text>\n                    }\n                    ListFooterComponent={\n                        <View>\n                            <TextInput\n                                style={{ backgroundColor: 'white', marginTop: 20, borderWidth: 1, padding: 10, borderRadius: 5, marginVertical: 8, height: 150 }}\n                                // textContentType='telephoneNumber'\n                                placeholder=\"เหตุผลเพราะอะไร\"\n                                placeholderTextColor=\"gray\"\n                                multiline\n                                numberOfLines={6}\n                                color='blue'\n                                fontSize={16}\n                                onChangeText={text => {\n                                    setReason(text)\n                                }}\n                            // defaultValue={item.answer}\n                            />\n                            <Button\n                                style={{\n                                    backgroundColor: 'green',\n                                    borderRadius: 10,\n                                    marginVertical: 16\n                                }}\n                                mode=\"Contained\"\n                                onPress={() => {\n                                    console.log(user);\n                                    const dataSend = {\n                                        userid: user.userid,\n                                        name: user.name,\n                                        lastname: user.lastname,\n                                        nickname: user.nickname,\n                                        answer: answer,\n                                        reason: reason,\n                                        department: user.department,\n                                        date: moment().format('yyyy-MM-DD'),\n                                        manager_id: USER.userid,\n                                        manager_name: USER.name,\n                                        manager_lastname: USER.lastname,\n                                        manager_nickname: USER.nickname\n                                    }\n                                    console.log(dataSend)\n                                    // console.log(\"year\", year)\n                                    // console.log(\"part\", part)\n                                    // console.log(\"number\", item.number)\n                                    // console.log(\"userid\", USER.userid)\n                                    postAnswer({ dataSend });\n                                }}\n                            >\n                                <Text style={{ alignSelf: 'center', color: 'white' }}>บันทึกคำตอบ</Text>\n                            </Button>\n                        </View>\n\n                    }\n                />\n            </View>\n        </Animatable.View>\n\n    )\n}\n\nexport default EmployeeStatusScreen;"]},"metadata":{},"sourceType":"module"}