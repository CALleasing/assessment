{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/drift/Documents/ReactNative/cal-assessment/src/screens/ManagerQuestionnaireScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, Card } from 'react-native-paper';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { WebView } from 'react-native-webview';\nimport { Video, Audio } from 'expo-av';\nimport Dialog from \"react-native-dialog\";\nimport axiox from 'axios';\nimport { COLORS } from \"../constants/theme\";\nimport moment from 'moment';\nimport 'moment/locale/th';\nimport { LOGIN } from \"../constants/variables\";\n\nvar ManagerQuestionnaireScreen = function ManagerQuestionnaireScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  console.log(navigation);\n  var userId = LOGIN.userid;\n  var year = route.params.year;\n  var part = route.params.part;\n  var answer = {};\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      managerList = _useState2[0],\n      setManagerList = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      managerAnswer = _useState4[0],\n      setManagerAnswer = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isAnswerError = _useState6[0],\n      setAnserError = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isEditVideo = _useState8[0],\n      setIsEditVideo = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dialogConfirmAns = _useState12[0],\n      setDialogConfirmAns = _useState12[1];\n\n  var managerAnswerList = [];\n\n  var getManagerAssessmentList = function getManagerAssessmentList() {\n    axiox.get('https://program-api.herokuapp.com/' + year + '/' + part + '/manager/' + userId).then(function (res) {\n      setManagerList(res.data);\n      setLoading(false);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var postAnswer = function postAnswer() {\n    console.log(answer);\n    axiox.post('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.number + '/Answer/manager/' + userId, answer).then(function (res) {\n      console.log(res.data);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var updateAnswer = function updateAnswer() {\n    console.log(answer);\n    axiox.put('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.number + '/Answer/manager/' + userId, answer).then(function (res) {\n      console.log(\"response: \", res);\n    }).catch(function (err) {\n      console.error(err);\n    });\n  };\n\n  useEffect(function () {\n    setLoading(true);\n    getManagerAssessmentList();\n  }, []);\n\n  var renderQuestionnaireManager = function renderQuestionnaireManager(_ref2) {\n    var navigation = _ref2.navigation;\n\n    var renderItem = function renderItem(_ref3) {\n      var item = _ref3.item,\n          index = _ref3.index;\n      managerAnswerList[index] = item.answer;\n      return React.createElement(View, {\n        style: {\n          margin: 8,\n          borderWidth: 1,\n          borderRadius: 5,\n          elevation: 5,\n          padding: 8,\n          backgroundColor: '#fff'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          fontWeight: 'bold'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, item.number, \". \", item.qt), item.answer === undefined ? React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          borderWidth: 1,\n          borderRadius: 5,\n          padding: 10,\n          marginVertical: 8,\n          height: 100\n        },\n        placeholder: \"\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\",\n        placeholderTextColor: \"gray\",\n        multiline: true,\n        numberOfLines: 6,\n        color: \"blue\",\n        fontSize: 16,\n        onChangeText: function onChangeText(text) {\n          setManagerAnswer(text);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }\n      }), React.createElement(Button, {\n        style: {\n          backgroundColor: 'gray',\n          borderRadius: 10,\n          marginVertical: 8\n        },\n        mode: \"Contained\",\n        onPress: function onPress() {\n          setDialogConfirmAns(true);\n          setQuestionNumber(item.number);\n\n          if (managerAnswer != \"\") {\n            var answerObject = {\n              user_id: LOGIN.userid,\n              date: moment().format('yyyy-MM-DD'),\n              answer: managerAnswer,\n              number: item.number,\n              qt: item.qt,\n              year: year\n            };\n            setAnserError(false);\n            setManagerAnswer(\"\");\n            answer = answerObject;\n            item.answer = managerAnswer;\n            postAnswer();\n          } else {\n            setAnserError(true);\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: {\n          alignSelf: 'center',\n          color: 'white'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 33\n        }\n      }, \"\\u0E2A\\u0E48\\u0E07\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\"))) : React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          borderWidth: 1,\n          borderRadius: 5,\n          padding: 10,\n          marginVertical: 8,\n          height: 100\n        },\n        placeholder: \"\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\",\n        placeholderTextColor: \"gray\",\n        multiline: true,\n        numberOfLines: 6,\n        color: \"blue\",\n        fontSize: 16,\n        onChangeText: function onChangeText(text) {\n          setManagerAnswer(text);\n        },\n        defaultValue: managerAnswerList[index],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }\n      }), React.createElement(Button, {\n        style: {\n          backgroundColor: 'green',\n          borderRadius: 10,\n          marginVertical: 8\n        },\n        mode: \"Contained\",\n        onPress: function onPress() {\n          setDialogConfirmAns(true);\n          setQuestionNumber(item.number);\n\n          if (managerAnswer != \"\") {\n            var answerObject = {\n              user_id: LOGIN.userid,\n              date: moment().format('yyyy-MM-DD'),\n              answer: managerAnswer,\n              number: item.number,\n              qt: item.qt,\n              year: year\n            };\n            setAnserError(false);\n            answer = answerObject;\n            item.answer = managerAnswer;\n            updateAnswer();\n            setManagerAnswer(\"\");\n          } else {\n            setAnserError(true);\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: {\n          alignSelf: 'center',\n          color: 'white'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 33\n        }\n      }, \"\\u0E2A\\u0E48\\u0E07\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\\u0E2D\\u0E35\\u0E01\\u0E04\\u0E23\\u0E31\\u0E49\\u0E07\"))));\n    };\n\n    if (isLoading === false && managerList.length === 0) {\n      return React.createElement(View, {\n        style: {\n          alignItems: 'center',\n          marginTop: 48\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 24,\n          color: 'red',\n          justifyContent: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }\n      }, \"\\u0E44\\u0E21\\u0E48\\u0E1E\\u0E1A\\u0E41\\u0E1A\\u0E1A\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E21\\u0E34\\u0E19\"));\n    } else {\n      return React.createElement(FlatList, {\n        data: managerList,\n        extraData: managerList,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item;\n        },\n        renderItem: renderItem,\n        ListHeaderComponent: function ListHeaderComponent() {\n          return React.createElement(View, {\n            style: {\n              backgroundColor: '#D3D3D3'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }\n          }, React.createElement(View, {\n            style: {\n              padding: 8,\n              backgroundColor: COLORS.primary,\n              width: '100%'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: {\n              alignSelf: 'center',\n              color: 'white',\n              fontSize: 20\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 37\n            }\n          }, \"\\u0E41\\u0E1A\\u0E1A\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E21\\u0E34\\u0E19 \\u0E1C\\u0E39\\u0E49\\u0E08\\u0E31\\u0E14\\u0E01\\u0E32\\u0E23\\u0E16\\u0E32\\u0E21\\u0E1E\\u0E19\\u0E31\\u0E01\\u0E07\\u0E32\\u0E19\")), React.createElement(Text, {\n            style: {\n              marginVertical: 4,\n              alignSelf: 'center',\n              color: 'red',\n              fontSize: 14\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }\n          }, \"*** \\u0E01\\u0E14\\u0E2A\\u0E48\\u0E07\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\\u0E17\\u0E38\\u0E01\\u0E04\\u0E23\\u0E31\\u0E49\\u0E07\\u0E01\\u0E48\\u0E2D\\u0E19\\u0E08\\u0E30\\u0E17\\u0E33\\u0E02\\u0E49\\u0E2D\\u0E43\\u0E2B\\u0E21\\u0E48 ***\"));\n        },\n        stickyHeaderIndices: [0],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }\n      });\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }, renderQuestionnaireManager({\n    navigation: navigation\n  }), managerList.length != 0 && (managerList[0].videoURL === undefined || managerList[0].videoURL === \"\") ? React.createElement(View, {\n    style: {\n      margin: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    style: {\n      backgroundColor: COLORS.primary,\n      borderRadius: 10,\n      marginVertical: 8\n    },\n    mode: \"Contained\",\n    onPress: function onPress() {\n      setIsEditVideo(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 25\n    }\n  }, \"\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E25\\u0E34\\u0E49\\u0E07\\u0E04\\u0E4C\\u0E27\\u0E34\\u0E14\\u0E35\\u0E42\\u0E2D\"))) : managerList.length != 0 && managerList[0].videoURL != \"\" ? React.createElement(View, {\n    style: {\n      margin: 16,\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.primary,\n      borderRadius: 10,\n      marginVertical: 8,\n      marginRight: 4\n    },\n    mode: \"Contained\",\n    onPress: function onPress() {\n      navigation.navigate('VideoWebView', {\n        videoURL: managerList[0].videoURL\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 29\n    }\n  }, \"\\u0E14\\u0E39\\u0E27\\u0E34\\u0E14\\u0E35\\u0E42\\u0E2D\")), React.createElement(Button, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.primary,\n      borderRadius: 10,\n      marginVertical: 8,\n      marginLeft: 4\n    },\n    mode: \"Contained\",\n    onPress: function onPress() {\n      setIsEditVideo(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 29\n    }\n  }, \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E25\\u0E34\\u0E49\\u0E07\\u0E04\\u0E4C\"))) : null, isLoading ? React.createElement(ActivityIndicator, {\n    style: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    size: \"large\",\n    color: \"#0275d8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 17\n    }\n  }) : null);\n};\n\nexport default ManagerQuestionnaireScreen;","map":{"version":3,"sources":["/Users/drift/Documents/ReactNative/cal-assessment/src/screens/ManagerQuestionnaireScreen.js"],"names":["React","useState","useEffect","Button","Card","Icon","WebView","Video","Audio","Dialog","axiox","COLORS","moment","LOGIN","ManagerQuestionnaireScreen","navigation","route","console","log","userId","userid","year","params","part","answer","managerList","setManagerList","managerAnswer","setManagerAnswer","isAnswerError","setAnserError","isEditVideo","setIsEditVideo","isLoading","setLoading","dialogConfirmAns","setDialogConfirmAns","managerAnswerList","getManagerAssessmentList","get","then","res","data","catch","err","postAnswer","post","number","updateAnswer","put","error","renderQuestionnaireManager","renderItem","item","index","margin","borderWidth","borderRadius","elevation","padding","backgroundColor","fontSize","fontWeight","qt","undefined","marginVertical","height","text","setQuestionNumber","answerObject","user_id","date","format","alignSelf","color","length","alignItems","marginTop","justifyContent","primary","width","flex","videoURL","flexDirection","marginRight","navigate","marginLeft","position","left","right","top","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, SafeAreaView, FlatList, StyleSheet, ActivityIndicator, ScrollView } from 'react-native';\nimport { Button, Card } from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { WebView } from 'react-native-webview';\nimport { Video, Audio } from 'expo-av';\n\nimport Dialog from \"react-native-dialog\";\nimport axiox from 'axios';\nimport { COLORS } from '../constants/theme';\n\nimport moment from 'moment';\nimport 'moment/locale/th';\n\nimport { LOGIN } from '../constants/variables';\n\nconst ManagerQuestionnaireScreen = ({ navigation, route }) => {\n\n    console.log(navigation);\n\n    let userId = LOGIN.userid;\n    let year = route.params.year;\n    let part = route.params.part;\n\n    var answer = {};\n\n    const [managerList, setManagerList] = useState([]);\n\n    // Answer\n    const [managerAnswer, setManagerAnswer] = useState(\"\");\n    const [isAnswerError, setAnserError] = useState(false);\n\n    // VideoURL\n    const [isEditVideo, setIsEditVideo] = useState(false);\n\n    const [isLoading, setLoading] = useState(false);\n    const [dialogConfirmAns, setDialogConfirmAns] = useState(false);\n\n    var managerAnswerList = [];\n\n    const getManagerAssessmentList = () => {\n        axiox.get('https://program-api.herokuapp.com/' + year + '/' + part + '/manager/' + userId)\n            .then(res => {\n                setManagerList(res.data);\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    };\n\n    const postAnswer = () => {\n        console.log(answer);\n        axiox.post('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.number + '/Answer/manager/' + userId, answer)\n            // console.log('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.questionNumber + '/Answer/officer/' + userId, answer)\n            .then(res => {\n                console.log(res.data);\n\n            })\n            .catch(err => {\n                console.log(err)\n            });\n    }\n\n    const updateAnswer = () => {\n        console.log(answer);\n        axiox\n            .put('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.number + '/Answer/manager/' + userId, answer)\n            .then(res => {\n                console.log(\"response: \", res)\n                // do something about response\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n\n    useEffect(() => {\n        setLoading(true);\n        getManagerAssessmentList();\n\n    }, []);\n\n    // Manager API\n\n    const renderQuestionnaireManager = ({ navigation }) => {\n\n        const renderItem = ({ item, index }) => {\n            // const textInfo = \"บันทึกคำตอบแล้ว\\nเมื่อทำการแก้ไขให้คลิกยืนยันข้อมูลอีกครั้ง\"\n\n            managerAnswerList[index] = item.answer;\n\n            return (\n                <View style={{\n                    margin: 8,\n                    borderWidth: 1,\n                    // borderColor: 'gray',\n                    borderRadius: 5,\n                    elevation: 5,\n                    padding: 8,\n                    backgroundColor: '#fff'\n                    // borderColor: COLORS.primary\n                    // \n                }} >\n                    <Text style={{\n                        fontSize: 16,\n                        fontWeight: 'bold',\n\n                    }}>{item.number}. {item.qt}</Text>\n\n                    {item.answer === undefined ?\n                        <View>\n                            <TextInput\n                                style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, height: 100 }}\n                                // textContentType='telephoneNumber'\n                                placeholder=\"คำตอบ\"\n                                placeholderTextColor=\"gray\"\n                                multiline\n                                numberOfLines={6}\n                                color='blue'\n                                fontSize={16}\n                                onChangeText={text => {\n                                    // setAnserError(false);\n                                    setManagerAnswer(text)\n                                }}\n                            />\n                            <Button\n                                style={{\n                                    backgroundColor: 'gray',\n                                    borderRadius: 10,\n                                    marginVertical: 8\n                                }}\n                                mode=\"Contained\"\n                                onPress={() => {\n                                    // dialogConfirmAnswer({ index });\n                                    setDialogConfirmAns(true);\n\n                                    setQuestionNumber(item.number);\n                                    if (managerAnswer != \"\") {\n                                        var answerObject = {\n                                            user_id: LOGIN.userid,\n                                            date: moment().format('yyyy-MM-DD'),\n                                            // video_url: videoURLText,\n                                            answer: managerAnswer,\n                                            number: item.number,\n                                            qt: item.qt,\n                                            year: year\n                                        };\n\n                                        setAnserError(false);\n                                        setManagerAnswer(\"\");\n                                        // setVideoURLText(\"\");\n                                        answer = answerObject;\n                                        item.answer = managerAnswer;\n                                        // setDialogConfirmAns(false);\n                                        postAnswer();\n                                    }\n                                    else {\n                                        setAnserError(true);\n                                    }\n\n                                    // console.log(questionAllStaffList);\n\n                                }}>\n                                <Text style={{ alignSelf: 'center', color: 'white' }}>ส่งคำตอบ</Text>\n\n                            </Button>\n                        </View>\n\n                        :\n\n                        <View>\n                            <TextInput\n                                style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, height: 100 }}\n                                // textContentType='telephoneNumber'\n                                placeholder=\"คำตอบ\"\n                                placeholderTextColor=\"gray\"\n                                multiline\n                                numberOfLines={6}\n                                color='blue'\n                                fontSize={16}\n                                // text=\"dfsdfsdf\"\n                                onChangeText={text => {\n                                    // setAnserError(false);\n                                    setManagerAnswer(text);\n                                }}\n                                defaultValue={managerAnswerList[index]}\n                            />\n\n                            <Button\n                                style={{\n                                    backgroundColor: 'green',\n                                    borderRadius: 10,\n                                    marginVertical: 8\n                                }}\n                                mode=\"Contained\"\n                                onPress={() => {\n                                    // dialogConfirmAnswer({ index });\n                                    setDialogConfirmAns(true);\n\n                                    setQuestionNumber(item.number);\n                                    if (managerAnswer != \"\") {\n                                        var answerObject = {\n                                            user_id: LOGIN.userid,\n                                            date: moment().format('yyyy-MM-DD'),\n                                            // video_url: videoURLText,\n                                            answer: managerAnswer,\n                                            number: item.number,\n                                            qt: item.qt,\n                                            year: year\n                                        };\n                                        // setDialogAnswer(false);\n                                        setAnserError(false);\n\n                                        answer = answerObject;\n                                        item.answer = managerAnswer;\n                                        updateAnswer();\n                                        setManagerAnswer(\"\");\n\n                                        // setDialogConfirmAns(false);\n                                        // setAnswer({});\n                                    }\n                                    else {\n                                        setAnserError(true);\n                                    }\n\n                                    // console.log(questionAllStaffList);\n\n                                }}>\n                                <Text style={{ alignSelf: 'center', color: 'white' }}>ส่งคำตอบอีกครั้ง</Text>\n\n                            </Button>\n                        </View>\n                    }\n\n                </View>\n\n            );\n        }\n\n        if (isLoading === false && managerList.length === 0) {\n            return (\n                <View style={{\n                    alignItems: 'center',\n                    marginTop: 48\n                }}>\n                    <Text style={{\n                        fontSize: 24,\n                        color: 'red',\n                        justifyContent: 'center',\n                    }}>ไม่พบแบบประเมิน</Text>\n                </View>\n            );\n\n        } else {\n\n            return (\n                <FlatList\n                    data={managerList}\n                    extraData={managerList}\n                    keyExtractor={(item) => `${item}`}\n                    renderItem={renderItem}\n                    ListHeaderComponent={() => {\n                        return (\n                            <View style={{ backgroundColor: '#D3D3D3' }}>\n                                <View style={{ padding: 8, backgroundColor: COLORS.primary, width: '100%' }}>\n                                    <Text style={{ alignSelf: 'center', color: 'white', fontSize: 20 }}>\n                                        แบบประเมิน ผู้จัดการถามพนักงาน\n                                    </Text>\n                                </View>\n                                <Text style={{ marginVertical: 4, alignSelf: 'center', color: 'red', fontSize: 14 }}>*** กดส่งคำตอบทุกครั้งก่อนจะทำข้อใหม่ ***</Text>\n                                {/* <Text style={{ marginBottom: 4, alignSelf: 'center', color: 'red', fontSize: 14 }}>เมื่อครบทุกข้อให้คลิก ส่งคำตอบ</Text> */}\n                            </View>\n\n                        );\n                    }}\n                    stickyHeaderIndices={[0]}\n\n                />\n\n            );\n        }\n    }\n\n    return (\n        <SafeAreaView style={{ flex: 1, }}>\n\n            {renderQuestionnaireManager({ navigation })}\n\n            {managerList.length != 0 && (managerList[0].videoURL === undefined || managerList[0].videoURL === \"\") ?\n\n                <View style={{ margin: 16 }}>\n                    <Button style={{\n                        backgroundColor: COLORS.primary,\n                        borderRadius: 10,\n                        marginVertical: 8\n                    }}\n                        mode=\"Contained\"\n                        onPress={() => { setIsEditVideo(true) }}>\n                        <Text style={{ alignSelf: 'center', color: 'white' }}>เพิ่มลิ้งค์วิดีโอ</Text>\n                    </Button>\n                </View>\n\n                :\n                managerList.length != 0 && managerList[0].videoURL != \"\" ?\n                    <View style={{ margin: 16, flexDirection: 'row', justifyContent: 'center' }}>\n                        <Button style={{\n                            flex: 1,\n                            backgroundColor: COLORS.primary,\n                            borderRadius: 10,\n                            marginVertical: 8,\n                            marginRight: 4\n\n                        }}\n                            mode=\"Contained\"\n                            onPress={() => {\n                                // console.log(questionManagerList[0].videoURL);\n                                navigation.navigate('VideoWebView', { videoURL: managerList[0].videoURL })\n\n                            }}>\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>ดูวิดีโอ</Text>\n                        </Button>\n\n                        <Button style={{\n                            flex: 1,\n                            backgroundColor: COLORS.primary,\n                            borderRadius: 10,\n                            marginVertical: 8,\n                            marginLeft: 4\n                        }}\n                            mode=\"Contained\"\n                            onPress={() => { setIsEditVideo(true) }}>\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>แก้ไขลิ้งค์</Text>\n                        </Button>\n                    </View>\n                    :\n                    null\n            }\n\n            {/* <Dialog.Container visible={dialogConfirmAns}>\n                <Dialog.Title style={{ fontSize: 20, fontWeight: 'bold' }}>บันทึกข้อมูลสำเร็จ</Dialog.Title>\n                <Dialog.Description style={{ fontSize: 18, padding: 16 }}>หากทำการแก้ไขให้คลิกยืนยันข้อมูลอีกครั้ง</Dialog.Description>\n\n                <Dialog.Button\n                    label=\"ตกลง\"\n                    onPress={() => {\n\n                        setDialogConfirmAns(false);\n                    }} />\n\n            </Dialog.Container>\n\n            <Dialog.Container visible={isEditVideo}>\n                <Dialog.Title style={{ fontSize: 20, fontWeight: 'bold' }}>เพิ่มลิ้งค์วิดีโอ</Dialog.Title>\n                <TextInput\n                    style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginHorizontal: 16 }}\n                    // textContentType='telephoneNumber'\n                    placeholder=\":url\"\n                    placeholderTextColor=\"gray\"\n                    multiline\n                    numberOfLines={6}\n                    color='blue'\n                    fontSize={16}\n                    onChangeText={text => {\n                        // setAnserError(false);\n                        // setVideoLink(text)\n                        managerList[0].videoURL = text\n                    }}\n                />\n                <Dialog.Button\n                    label=\"ยกเลิก\"\n                    onPress={() => {\n                        setIsEditVideo(false);\n                    }} />\n\n                <Dialog.Button\n                    label=\"ตกลง\"\n                    onPress={() => {\n                        const currentObject = {\n                            userid: managerList[0].userid,\n                            year: managerList[0].year,\n                            number: managerList[0].number,\n                            qt: managerList[0].qt,\n                            answer: managerList[0].answer,\n                            videoURL: managerList[0].videoURL,\n                            date: moment(managerList[0].date).format('yyyy-MM-DD'),\n\n                        }\n                        console.log(currentObject);\n                        {\n                            managerList[0].videoURL === undefined ?\n                                axiox.post('https://program-api.herokuapp.com/' + year + '/' + part + '/1/Answer/manager/' + userId, currentObject)\n                                    .then(res => {\n                                        console.log(res.data);\n                                    })\n                                    .catch(err => {\n                                        console.log(err)\n                                    })\n                                :\n                                axiox.put('https://program-api.herokuapp.com/' + year + '/' + part + '/1/Answer/manager/' + userId, currentObject)\n                                    .then(res => {\n                                        // storeData(res.data)\n                                        console.log(res.data);\n\n                                    })\n                                    .catch(err => {\n                                        console.log(err)\n                                    });\n                        }\n                        setIsEditVideo(false);\n                    }} />\n\n\n            </Dialog.Container> */}\n\n            {isLoading ?\n\n                <ActivityIndicator style={{\n\n                    position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }} size=\"large\" color=\"#0275d8\" />\n                :\n                null\n            }\n\n        </SafeAreaView>\n    );\n}\n\nexport default ManagerQuestionnaireScreen;"]},"metadata":{},"sourceType":"module"}