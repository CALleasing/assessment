{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/drift/Documents/ReactNative/cal-assessment/src/screens/QuestionnaireAllStaffScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, Card } from 'react-native-paper';\nimport Dialog from \"react-native-dialog\";\nimport axiox from 'axios';\nimport { COLORS } from \"../constants/theme\";\nimport { LOGIN } from \"../constants/variables\";\nimport moment from 'moment';\n\nvar QuestionnaireScreen = function QuestionnaireScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var userId = LOGIN.userid;\n  var year = route.params.year;\n  var part = route.params.part;\n  var answer;\n  var video = React.useRef(null);\n\n  var play = function play() {\n    return video.current && video.current.playAsync();\n  };\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      status = _React$useState2[0],\n      setStatus = _React$useState2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVideo = _useState2[0],\n      setIsVideo = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      questionAllStaffList = _useState4[0],\n      setQuestionAllStaffList = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dialogConfirmAns = _useState8[0],\n      setDialogConfirmAns = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      questionNumber = _useState10[0],\n      setQuestionNumber = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      answerText = _useState12[0],\n      setAnswerText = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      videoURLText = _useState14[0],\n      setVideoURLText = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isEditVideo = _useState16[0],\n      setIsEditVideo = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      isAnswerError = _useState18[0],\n      setAnserError = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      textInputValue = _useState20[0],\n      setTextInputValue = _useState20[1];\n\n  var allAnswers = [];\n\n  var getQuestionnaireAllStaff = function getQuestionnaireAllStaff() {\n    axiox.get('https://program-api.herokuapp.com/' + year + '/' + part + '/officer/' + userId).then(function (res) {\n      var data = res.data;\n      console.log(data);\n      setQuestionAllStaffList(data);\n      {\n        setLoading(false);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var postAnswer = function postAnswer() {\n    console.log(answer);\n    axiox.post('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.number + '/Answer/officer/' + userId, answer).then(function (res) {\n      console.log(res.data);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var updateAnswer = function updateAnswer() {\n    console.log(answer);\n    axiox.put('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.number + '/Answer/officer/' + userId, answer).then(function (res) {\n      console.log(\"response: \", res);\n    }).catch(function (err) {\n      console.error(err);\n    });\n  };\n\n  useEffect(function () {\n    setLoading(true);\n    getQuestionnaireAllStaff();\n  }, []);\n\n  var renderQuestionnaireAllStaff = function renderQuestionnaireAllStaff(_ref2) {\n    var navigation = _ref2.navigation;\n\n    var renderItem = function renderItem(_ref3) {\n      var item = _ref3.item,\n          index = _ref3.index;\n      allAnswers[index] = item.answer;\n      console.log(allAnswers);\n      return React.createElement(View, {\n        style: {\n          margin: 8,\n          borderWidth: 1,\n          borderRadius: 5,\n          elevation: 5,\n          padding: 8,\n          backgroundColor: '#fff'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          fontWeight: 'bold'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }, item.number, \". \", item.qt), item.answer === undefined ? React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          borderWidth: 1,\n          borderRadius: 5,\n          padding: 10,\n          marginVertical: 8,\n          height: 100\n        },\n        placeholder: \"\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\",\n        placeholderTextColor: \"gray\",\n        multiline: true,\n        numberOfLines: 6,\n        color: \"blue\",\n        fontSize: 16,\n        onChangeText: function onChangeText(text) {\n          setAnswerText(text);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      }), React.createElement(Button, {\n        style: {\n          backgroundColor: 'gray',\n          borderRadius: 10,\n          marginVertical: 8\n        },\n        mode: \"Contained\",\n        onPress: function onPress() {\n          setDialogConfirmAns(true);\n\n          if (answerText != \"\") {\n            var answerObject = {\n              userid: LOGIN.userid,\n              videoURL: item.videoURL,\n              answer: answerText,\n              number: item.number,\n              qt: item.qt,\n              date: moment().format('yyyy-MM-DD'),\n              year: year\n            };\n            setAnserError(false);\n            setAnswerText(\"\");\n            answer = answerObject;\n            item.answer = answerText;\n            postAnswer();\n          } else {\n            setAnserError(true);\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: {\n          alignSelf: 'center',\n          color: 'white'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 33\n        }\n      }, \"\\u0E2A\\u0E48\\u0E07\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\"))) : React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          borderWidth: 1,\n          borderRadius: 5,\n          padding: 10,\n          marginVertical: 8,\n          height: 100\n        },\n        placeholder: \"\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\",\n        placeholderTextColor: \"green\",\n        multiline: true,\n        numberOfLines: 6,\n        color: \"blue\",\n        fontSize: 16,\n        onChangeText: function onChangeText(text) {\n          setAnswerText(text);\n        },\n        defaultValue: allAnswers[index],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }\n      }), React.createElement(Button, {\n        style: {\n          backgroundColor: 'green',\n          borderRadius: 10,\n          marginVertical: 8\n        },\n        mode: \"Contained\",\n        onPress: function onPress() {\n          setDialogConfirmAns(true);\n\n          if (answerText != \"\") {\n            var answerObject = {\n              userid: LOGIN.userid,\n              videoURL: item.videoURL,\n              answer: answerText,\n              number: item.number,\n              qt: item.qt,\n              date: moment().format('yyyy-MM-DD'),\n              year: year\n            };\n            setAnserError(false);\n            answer = answerObject;\n            item.answer = answerText;\n            updateAnswer();\n            setAnswerText(\"\");\n          } else {\n            setAnserError(true);\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: {\n          alignSelf: 'center',\n          color: 'white'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 33\n        }\n      }, \"\\u0E2A\\u0E48\\u0E07\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\\u0E2D\\u0E35\\u0E01\\u0E04\\u0E23\\u0E31\\u0E49\\u0E07\"))));\n    };\n\n    if (isLoading === false && questionAllStaffList.length === 0) {\n      return React.createElement(View, {\n        style: {\n          alignItems: 'center',\n          marginTop: 48\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 24,\n          color: 'red',\n          justifyContent: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }\n      }, \"\\u0E44\\u0E21\\u0E48\\u0E1E\\u0E1A\\u0E41\\u0E1A\\u0E1A\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E21\\u0E34\\u0E19\"));\n    } else {\n      return React.createElement(FlatList, {\n        data: questionAllStaffList,\n        extraData: questionAllStaffList,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item;\n        },\n        renderItem: renderItem,\n        ListHeaderComponent: function ListHeaderComponent() {\n          return React.createElement(View, {\n            style: {\n              backgroundColor: '#D3D3D3'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }\n          }, React.createElement(View, {\n            style: {\n              padding: 8,\n              backgroundColor: COLORS.primary,\n              width: '100%'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: {\n              alignSelf: 'center',\n              color: 'white',\n              fontSize: 20\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 37\n            }\n          }, \"\\u0E41\\u0E1A\\u0E1A\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E21\\u0E34\\u0E19 \\u0E1E\\u0E19\\u0E31\\u0E01\\u0E07\\u0E32\\u0E19\\u0E17\\u0E38\\u0E01\\u0E23\\u0E30\\u0E14\\u0E31\\u0E1A\")), React.createElement(Text, {\n            style: {\n              marginVertical: 4,\n              alignSelf: 'center',\n              color: 'red'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }\n          }, \"*** \\u0E01\\u0E14\\u0E2A\\u0E48\\u0E07\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\\u0E17\\u0E38\\u0E01\\u0E04\\u0E23\\u0E31\\u0E49\\u0E07\\u0E01\\u0E48\\u0E2D\\u0E19\\u0E08\\u0E30\\u0E17\\u0E33\\u0E02\\u0E49\\u0E2D\\u0E43\\u0E2B\\u0E21\\u0E48 ***\"));\n        },\n        stickyHeaderIndices: [0],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }\n      });\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }, renderQuestionnaireAllStaff({\n    navigation: navigation\n  }), questionAllStaffList.length != 0 && (questionAllStaffList[0].videoURL === undefined || questionAllStaffList[0].videoURL === \"\") ? React.createElement(View, {\n    style: {\n      margin: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    style: {\n      backgroundColor: COLORS.primary,\n      borderRadius: 10,\n      marginVertical: 8\n    },\n    mode: \"Contained\",\n    onPress: function onPress() {\n      setIsEditVideo(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 25\n    }\n  }, \"\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E25\\u0E34\\u0E49\\u0E07\\u0E04\\u0E4C\\u0E27\\u0E34\\u0E14\\u0E35\\u0E42\\u0E2D\"))) : questionAllStaffList.length != 0 && questionAllStaffList[0].videoURL != \"\" ? React.createElement(View, {\n    style: {\n      margin: 16,\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.primary,\n      borderRadius: 10,\n      marginVertical: 8,\n      marginRight: 4\n    },\n    mode: \"Contained\",\n    onPress: function onPress() {\n      navigation.navigate('VideoWebView', {\n        videoURL: questionAllStaffList[0].videoURL\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 29\n    }\n  }, \"\\u0E14\\u0E39\\u0E27\\u0E34\\u0E14\\u0E35\\u0E42\\u0E2D\")), React.createElement(Button, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.primary,\n      borderRadius: 10,\n      marginVertical: 8,\n      marginLeft: 4\n    },\n    mode: \"Contained\",\n    onPress: function onPress() {\n      setIsEditVideo(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 29\n    }\n  }, \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E25\\u0E34\\u0E49\\u0E07\\u0E04\\u0E4C\"))) : null, React.createElement(Dialog.Container, {\n    visible: dialogConfirmAns,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, React.createElement(Dialog.Title, {\n    style: {\n      fontSize: 20,\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  }, \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E2A\\u0E33\\u0E40\\u0E23\\u0E47\\u0E08\"), React.createElement(Dialog.Description, {\n    style: {\n      fontSize: 18,\n      padding: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }, \"\\u0E2B\\u0E32\\u0E01\\u0E17\\u0E33\\u0E01\\u0E32\\u0E23\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E43\\u0E2B\\u0E49\\u0E04\\u0E25\\u0E34\\u0E01\\u0E22\\u0E37\\u0E19\\u0E22\\u0E31\\u0E19\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E2D\\u0E35\\u0E01\\u0E04\\u0E23\\u0E31\\u0E49\\u0E07\"), React.createElement(Dialog.Button, {\n    label: \"\\u0E15\\u0E01\\u0E25\\u0E07\",\n    onPress: function onPress() {\n      setDialogConfirmAns(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 17\n    }\n  })), React.createElement(Dialog.Container, {\n    visible: isEditVideo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }, React.createElement(Dialog.Title, {\n    style: {\n      fontSize: 20,\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }\n  }, \"\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E25\\u0E34\\u0E49\\u0E07\\u0E04\\u0E4C\\u0E27\\u0E34\\u0E14\\u0E35\\u0E42\\u0E2D\"), React.createElement(TextInput, {\n    style: {\n      borderWidth: 1,\n      borderRadius: 5,\n      padding: 10,\n      marginHorizontal: 16\n    },\n    placeholder: \":url\",\n    placeholderTextColor: \"gray\",\n    multiline: true,\n    numberOfLines: 6,\n    color: \"blue\",\n    fontSize: 16,\n    onChangeText: function onChangeText(text) {\n      questionAllStaffList[0].videoURL = text;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 17\n    }\n  }), React.createElement(Dialog.Button, {\n    label: \"\\u0E22\\u0E01\\u0E40\\u0E25\\u0E34\\u0E01\",\n    onPress: function onPress() {\n      setIsEditVideo(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 17\n    }\n  }), React.createElement(Dialog.Button, {\n    label: \"\\u0E15\\u0E01\\u0E25\\u0E07\",\n    onPress: function onPress() {\n      var currentObject = {\n        userid: questionAllStaffList[0].userid,\n        year: questionAllStaffList[0].year,\n        number: questionAllStaffList[0].number,\n        qt: questionAllStaffList[0].qt,\n        answer: questionAllStaffList[0].answer,\n        videoURL: questionAllStaffList[0].videoURL,\n        date: moment(questionAllStaffList[0].date).format('yyyy-MM-DD')\n      };\n      console.log(currentObject);\n      {\n        questionAllStaffList[0].videoURL === undefined ? axiox.post('https://program-api.herokuapp.com/' + year + '/' + part + '/1/Answer/officer/' + userId, currentObject).then(function (res) {\n          console.log(res.data);\n        }).catch(function (err) {\n          console.log(err);\n        }) : axiox.put('https://program-api.herokuapp.com/' + year + '/' + part + '/1/Answer/officer/' + userId, currentObject).then(function (res) {\n          console.log(res.data);\n        }).catch(function (err) {\n          console.log(err);\n        });\n      }\n      setIsEditVideo(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 17\n    }\n  })), isLoading ? React.createElement(ActivityIndicator, {\n    style: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    size: \"large\",\n    color: \"#0275d8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 17\n    }\n  }) : null);\n};\n\nvar styles = StyleSheet.create({\n  button_confirm: {}\n});\nexport default QuestionnaireScreen;","map":{"version":3,"sources":["/Users/drift/Documents/ReactNative/cal-assessment/src/screens/QuestionnaireAllStaffScreen.js"],"names":["React","useState","useEffect","Button","Card","Dialog","axiox","COLORS","LOGIN","moment","QuestionnaireScreen","navigation","route","userId","userid","year","params","part","answer","video","useRef","play","current","playAsync","status","setStatus","isVideo","setIsVideo","questionAllStaffList","setQuestionAllStaffList","isLoading","setLoading","dialogConfirmAns","setDialogConfirmAns","questionNumber","setQuestionNumber","answerText","setAnswerText","videoURLText","setVideoURLText","isEditVideo","setIsEditVideo","isAnswerError","setAnserError","textInputValue","setTextInputValue","allAnswers","getQuestionnaireAllStaff","get","then","res","data","console","log","catch","err","postAnswer","post","number","updateAnswer","put","error","renderQuestionnaireAllStaff","renderItem","item","index","margin","borderWidth","borderRadius","elevation","padding","backgroundColor","fontSize","fontWeight","qt","undefined","marginVertical","height","text","answerObject","videoURL","date","format","alignSelf","color","length","alignItems","marginTop","justifyContent","primary","width","flex","flexDirection","marginRight","navigate","marginLeft","marginHorizontal","currentObject","position","left","right","top","bottom","styles","StyleSheet","create","button_confirm"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, SafeAreaView, FlatList, StyleSheet, ActivityIndicator, ScrollView } from 'react-native';\nimport { Button, Card } from 'react-native-paper';\n// import { FlatList } from 'react-native-gesture-handler';\nimport Dialog from \"react-native-dialog\";\nimport axiox from 'axios';\nimport { COLORS } from '../constants/theme';\nimport { LOGIN } from '../constants/variables';\nimport moment from 'moment';\nconst QuestionnaireScreen = ({ navigation, route }) => {\n\n    let userId = LOGIN.userid;\n    // console.log(userId);\n    let year = route.params.year;\n    let part = route.params.part;\n\n    var answer;\n\n    const video = React.useRef(null);\n    const play = () => video.current && video.current.playAsync()\n    const [status, setStatus] = React.useState({});\n    const [isVideo, setIsVideo] = useState(false);\n\n    const [questionAllStaffList, setQuestionAllStaffList] = useState([]);\n\n    const [isLoading, setLoading] = useState(false);\n    const [dialogConfirmAns, setDialogConfirmAns] = useState(false);\n    // const [dialogURL, setDialogURL] = useState(false);\n\n    const [questionNumber, setQuestionNumber] = useState(\"\");\n    // Answer\n    const [answerText, setAnswerText] = useState(\"\");\n    // Video URL\n    const [videoURLText, setVideoURLText] = useState(\"\");\n    const [isEditVideo, setIsEditVideo] = useState(false);\n    const [isAnswerError, setAnserError] = useState(false);\n\n    // const [answer, setAnswer] = useState({});\n    const [textInputValue, setTextInputValue] = useState([]);\n\n    var allAnswers = [];\n\n    const getQuestionnaireAllStaff = () => {\n        axiox.get('https://program-api.herokuapp.com/' + year + '/' + part + '/officer/' + userId)\n            .then(res => {\n                const data = res.data;\n                console.log(data);\n                setQuestionAllStaffList(data);\n                { setLoading(false) }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    };\n\n    const postAnswer = () => {\n        console.log(answer);\n        axiox.post('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.number + '/Answer/officer/' + userId, answer)\n            // console.log('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.questionNumber + '/Answer/officer/' + userId, answer)\n            .then(res => {\n                console.log(res.data);\n\n            })\n            .catch(err => {\n                console.log(err)\n            });\n    }\n\n    const updateAnswer = () => {\n        console.log(answer);\n        axiox\n            .put('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.number + '/Answer/officer/' + userId, answer)\n            .then(res => {\n                console.log(\"response: \", res)\n                // do something about response\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    useEffect(() => {\n        setLoading(true);\n        getQuestionnaireAllStaff();\n    }, []);\n\n    const renderQuestionnaireAllStaff = ({ navigation }) => {\n\n        const renderItem = ({ item, index }) => {\n            // const textInfo = \"บันทึกคำตอบแล้ว\\nเมื่อทำการแก้ไขให้คลิกยืนยันข้อมูลอีกครั้ง\"\n            // console.log(index);\n            allAnswers[index] = item.answer;\n\n            // textInputValue[index] = item.answer\n            console.log(allAnswers);\n            return (\n                <View style={{\n                    margin: 8,\n                    borderWidth: 1,\n                    // borderColor: 'gray',\n                    borderRadius: 5,\n                    elevation: 5,\n                    padding: 8,\n                    backgroundColor: '#fff'\n                    // borderColor: COLORS.primary\n                    // \n                }} >\n                    <Text style={{\n                        fontSize: 16,\n                        fontWeight: 'bold',\n\n                    }}>{item.number}. {item.qt}</Text>\n\n                    {item.answer === undefined ?\n                        <View>\n                            <TextInput\n                                style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, height: 100 }}\n                                // textContentType='telephoneNumber'\n                                placeholder=\"คำตอบ\"\n                                placeholderTextColor=\"gray\"\n                                multiline\n                                numberOfLines={6}\n                                color='blue'\n                                fontSize={16}\n                                onChangeText={text => {\n                                    // setAnserError(false);\n                                    setAnswerText(text);\n                                }}\n                            />\n                            <Button\n                                style={{\n                                    backgroundColor: 'gray',\n                                    borderRadius: 10,\n                                    marginVertical: 8\n                                }}\n                                mode=\"Contained\"\n                                onPress={() => {\n                                    // dialogConfirmAnswer({ index });\n                                    setDialogConfirmAns(true);\n\n                                    if (answerText != \"\") {\n                                        var answerObject = {\n                                            userid: LOGIN.userid,\n                                            videoURL: item.videoURL,\n                                            answer: answerText,\n                                            number: item.number,\n                                            qt: item.qt,\n                                            date: moment().format('yyyy-MM-DD'),\n                                            year: year\n                                        };\n                                        // setDialogAnswer(false);\n                                        setAnserError(false);\n                                        setAnswerText(\"\");\n                                        // setVideoURLText(\"\");\n                                        answer = answerObject;\n                                        item.answer = answerText;\n                                        // allAnswers[index] = item.answer\n                                        // console.log(answer);\n                                        postAnswer();\n                                    }\n\n                                    else {\n                                        setAnserError(true);\n                                    }\n\n                                    // console.log(questionAllStaffList);\n\n                                }}>\n                                <Text style={{ alignSelf: 'center', color: 'white' }}>ส่งคำตอบ</Text>\n\n                            </Button>\n                        </View>\n\n                        :\n\n                        <View>\n                            <TextInput\n                                style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, height: 100 }}\n                                // textContentType='telephoneNumber'\n                                placeholder=\"คำตอบ\"\n                                placeholderTextColor=\"green\"\n                                multiline\n                                numberOfLines={6}\n                                color='blue'\n                                fontSize={16}\n                                onChangeText={text => {\n                                    setAnswerText(text);\n                                }}\n                                defaultValue={allAnswers[index]}\n                            />\n                            <Button\n                                style={{\n                                    backgroundColor: 'green',\n                                    borderRadius: 10,\n                                    marginVertical: 8\n                                }}\n                                mode=\"Contained\"\n                                onPress={() => {\n\n                                    setDialogConfirmAns(true);\n\n                                    if (answerText != \"\") {\n                                        var answerObject = {\n                                            userid: LOGIN.userid,\n                                            videoURL: item.videoURL,\n                                            answer: answerText,\n                                            number: item.number,\n                                            qt: item.qt,\n                                            date: moment().format('yyyy-MM-DD'),\n                                            year: year\n                                        };\n                                        // setDialogAnswer(false);\n                                        setAnserError(false);\n                                        // \n                                        // setVideoURLText(\"\");\n                                        answer = answerObject;\n                                        item.answer = answerText;\n                                        updateAnswer();\n                                        setAnswerText(\"\");\n\n                                        // setDialogConfirmAns(false);\n                                        // setAnswer({});\n                                    }\n                                    else {\n                                        setAnserError(true);\n                                    }\n\n                                    // console.log(questionAllStaffList);\n\n                                }}>\n                                <Text style={{ alignSelf: 'center', color: 'white' }}>ส่งคำตอบอีกครั้ง</Text>\n\n                            </Button>\n                        </View>\n\n                    }\n                </View>\n\n            );\n        }\n\n        if (isLoading === false && questionAllStaffList.length === 0) {\n            return (\n                <View style={{\n                    alignItems: 'center',\n                    marginTop: 48\n                }}>\n                    <Text style={{\n                        fontSize: 24,\n                        color: 'red',\n                        justifyContent: 'center',\n                    }}>ไม่พบแบบประเมิน</Text>\n                </View>\n            );\n        } else {\n            return (\n\n                <FlatList\n                    data={questionAllStaffList}\n                    extraData={questionAllStaffList}\n                    keyExtractor={(item) => `${item}`}\n\n                    renderItem={renderItem}\n                    ListHeaderComponent={() => {\n                        return (\n                            <View style={{ backgroundColor: '#D3D3D3' }}>\n                                <View style={{ padding: 8, backgroundColor: COLORS.primary, width: '100%' }}>\n                                    <Text style={{ alignSelf: 'center', color: 'white', fontSize: 20 }}>\n                                        แบบประเมิน พนักงานทุกระดับ\n                                    </Text>\n                                </View>\n                                <Text style={{ marginVertical: 4, alignSelf: 'center', color: 'red' }}>*** กดส่งคำตอบทุกครั้งก่อนจะทำข้อใหม่ ***</Text>\n                            </View>\n\n                        );\n                    }}\n                    stickyHeaderIndices={[0]}\n                />\n            );\n        }\n\n    }\n\n    // QuestionnaireScreen\n\n    return (\n        <SafeAreaView style={{ flex: 1 }}>\n\n            {renderQuestionnaireAllStaff({ navigation })}\n\n            {questionAllStaffList.length != 0 && (questionAllStaffList[0].videoURL === undefined || questionAllStaffList[0].videoURL === \"\") ?\n\n                <View style={{ margin: 16 }}>\n                    <Button style={{\n                        backgroundColor: COLORS.primary,\n                        borderRadius: 10,\n                        marginVertical: 8\n                    }}\n                        mode=\"Contained\"\n                        onPress={() => { setIsEditVideo(true) }}>\n                        <Text style={{ alignSelf: 'center', color: 'white' }}>เพิ่มลิ้งค์วิดีโอ</Text>\n                    </Button>\n                </View>\n\n                :\n                questionAllStaffList.length != 0 && questionAllStaffList[0].videoURL != \"\" ?\n                    <View style={{ margin: 16, flexDirection: 'row', justifyContent: 'center' }}>\n                        <Button style={{\n                            flex: 1,\n                            backgroundColor: COLORS.primary,\n                            borderRadius: 10,\n                            marginVertical: 8,\n                            marginRight: 4\n\n                        }}\n                            mode=\"Contained\"\n                            onPress={() => {\n                                // console.log(questionAllStaffList[0].videoURL);\n                                navigation.navigate('VideoWebView', { videoURL: questionAllStaffList[0].videoURL })\n\n                            }}>\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>ดูวิดีโอ</Text>\n                        </Button>\n\n                        <Button style={{\n                            flex: 1,\n                            backgroundColor: COLORS.primary,\n                            borderRadius: 10,\n                            marginVertical: 8,\n                            marginLeft: 4\n                        }}\n                            mode=\"Contained\"\n                            onPress={() => { setIsEditVideo(true) }}>\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>แก้ไขลิ้งค์</Text>\n                        </Button>\n                    </View>\n                    :\n                    null\n            }\n\n            <Dialog.Container visible={dialogConfirmAns}>\n                <Dialog.Title style={{ fontSize: 20, fontWeight: 'bold' }}>บันทึกข้อมูลสำเร็จ</Dialog.Title>\n                <Dialog.Description style={{ fontSize: 18, padding: 16 }}>หากทำการแก้ไขให้คลิกยืนยันข้อมูลอีกครั้ง</Dialog.Description>\n\n                <Dialog.Button\n                    label=\"ตกลง\"\n                    onPress={() => {\n                        setDialogConfirmAns(false);\n                    }} />\n\n            </Dialog.Container>\n\n            {/* Upload Video */}\n            <Dialog.Container visible={isEditVideo}>\n                <Dialog.Title style={{ fontSize: 20, fontWeight: 'bold' }}>เพิ่มลิ้งค์วิดีโอ</Dialog.Title>\n                {/* <Dialog.Description style={{ fontSize: 18, padding: 16 }}>หากทำการแก้ไขให้คลิกยืนยันข้อมูลอีกครั้ง</Dialog.Description> */}\n                <TextInput\n                    style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginHorizontal: 16 }}\n                    // textContentType='telephoneNumber'\n                    placeholder=\":url\"\n                    placeholderTextColor=\"gray\"\n                    multiline\n                    numberOfLines={6}\n                    color='blue'\n                    fontSize={16}\n                    onChangeText={text => {\n                        // setAnserError(false);\n                        // setVideoLink(text)\n                        questionAllStaffList[0].videoURL = text\n                    }}\n                />\n                <Dialog.Button\n                    label=\"ยกเลิก\"\n                    onPress={() => {\n                        setIsEditVideo(false);\n                    }} />\n\n                <Dialog.Button\n                    label=\"ตกลง\"\n                    onPress={() => {\n                        const currentObject = {\n                            userid: questionAllStaffList[0].userid,\n                            year: questionAllStaffList[0].year,\n                            number: questionAllStaffList[0].number,\n                            qt: questionAllStaffList[0].qt,\n                            answer: questionAllStaffList[0].answer,\n                            videoURL: questionAllStaffList[0].videoURL,\n                            date: moment(questionAllStaffList[0].date).format('yyyy-MM-DD'),\n\n                        }\n                        console.log(currentObject);\n                        {\n                            questionAllStaffList[0].videoURL === undefined ?\n                                axiox.post('https://program-api.herokuapp.com/' + year + '/' + part + '/1/Answer/officer/' + userId, currentObject)\n                                    .then(res => {\n                                        console.log(res.data);\n                                    })\n                                    .catch(err => {\n                                        console.log(err)\n                                    })\n                                :\n                                axiox.put('https://program-api.herokuapp.com/' + year + '/' + part + '/1/Answer/officer/' + userId, currentObject)\n                                    .then(res => {\n                                        // storeData(res.data)\n                                        console.log(res.data);\n\n                                    })\n                                    .catch(err => {\n                                        console.log(err)\n                                    });\n                        }\n                        setIsEditVideo(false);\n                    }} />\n\n\n            </Dialog.Container>\n\n\n            {isLoading ?\n\n                <ActivityIndicator style={{\n\n                    position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }} size=\"large\" color=\"#0275d8\" />\n\n                :\n\n                null\n\n            }\n\n        </SafeAreaView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    button_confirm: {\n\n    }\n})\n\nexport default QuestionnaireScreen;"]},"metadata":{},"sourceType":"module"}