{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/drift/Documents/ReactNative/cal-assessment/src/screens/QuestionnaireAllStaffScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, Card } from 'react-native-paper';\nimport Dialog from \"react-native-dialog\";\nimport axiox from 'axios';\nimport { COLORS } from \"../constants/theme\";\nimport { LOGIN } from \"../constants/variables\";\nimport moment from 'moment';\nimport AwesomeAlert from 'react-native-awesome-alerts';\n\nvar QuestionnaireScreen = function QuestionnaireScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var userId = LOGIN.userid;\n  var year = route.params.year;\n  var part = route.params.part;\n  var answer = {};\n  var video = React.useRef(null);\n\n  var play = function play() {\n    return video.current && video.current.playAsync();\n  };\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      questionAllStaffList = _useState2[0],\n      setQuestionAllStaffList = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dialogConfirmAns = _useState6[0],\n      setDialogConfirmAns = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      answerText = _useState8[0],\n      setAnswerText = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isEditVideo = _useState10[0],\n      setIsEditVideo = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isAnswerError = _useState12[0],\n      setAnserError = _useState12[1];\n\n  var allAnswers = [];\n\n  var getQuestionnaireAllStaff = function getQuestionnaireAllStaff() {\n    axiox.get('https://program-api.herokuapp.com/' + year + '/' + part + '/officer/' + userId).then(function (res) {\n      var data = res.data;\n      console.log(data);\n      setQuestionAllStaffList(data);\n      {\n        setLoading(false);\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var postAnswer = function postAnswer() {\n    console.log(answer);\n    axiox.post('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.number + '/Answer/officer/' + userId, answer).then(function (res) {\n      console.log(res.data);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var updateAnswer = function updateAnswer() {\n    console.log(answer);\n    axiox.put('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.number + '/Answer/officer/' + userId, answer).then(function (res) {\n      console.log(\"response: \", res);\n    }).catch(function (err) {\n      console.error(err);\n    });\n  };\n\n  useEffect(function () {\n    setLoading(true);\n    getQuestionnaireAllStaff();\n  }, []);\n\n  var renderQuestionnaireAllStaff = function renderQuestionnaireAllStaff(_ref2) {\n    var navigation = _ref2.navigation;\n\n    var renderItem = function renderItem(_ref3) {\n      var item = _ref3.item,\n          index = _ref3.index;\n      allAnswers[index] = item.answer;\n      console.log(allAnswers);\n      return React.createElement(View, {\n        style: {\n          margin: 8,\n          borderWidth: 1,\n          borderRadius: 5,\n          elevation: 5,\n          padding: 8,\n          backgroundColor: '#fff'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          fontWeight: 'bold'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, item.number, \". \", item.qt), item.answer === undefined ? React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          borderWidth: 1,\n          borderRadius: 5,\n          padding: 10,\n          marginVertical: 8,\n          height: 100\n        },\n        placeholder: \"\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\",\n        placeholderTextColor: \"gray\",\n        multiline: true,\n        numberOfLines: 6,\n        color: \"blue\",\n        fontSize: 16,\n        onChangeText: function onChangeText(text) {\n          setAnswerText(text);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }\n      }), React.createElement(Button, {\n        style: {\n          backgroundColor: 'gray',\n          borderRadius: 10,\n          marginVertical: 8\n        },\n        mode: \"Contained\",\n        onPress: function onPress() {\n          setDialogConfirmAns(true);\n\n          if (answerText != \"\") {\n            var answerObject = {\n              userid: LOGIN.userid,\n              videoURL: item.videoURL,\n              answer: answerText,\n              number: item.number,\n              qt: item.qt,\n              date: moment().format('yyyy-MM-DD'),\n              year: year\n            };\n            setAnserError(false);\n            setAnswerText(\"\");\n            answer = answerObject;\n            item.answer = answerText;\n            postAnswer();\n          } else {\n            setAnserError(true);\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: {\n          alignSelf: 'center',\n          color: 'white'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 33\n        }\n      }, \"\\u0E2A\\u0E48\\u0E07\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\"))) : React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          borderWidth: 1,\n          borderRadius: 5,\n          padding: 10,\n          marginVertical: 8,\n          height: 100\n        },\n        placeholder: \"\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\",\n        placeholderTextColor: \"green\",\n        multiline: true,\n        numberOfLines: 6,\n        color: \"blue\",\n        fontSize: 16,\n        onChangeText: function onChangeText(text) {\n          setAnswerText(text);\n        },\n        defaultValue: allAnswers[index],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }\n      }), React.createElement(Button, {\n        style: {\n          backgroundColor: 'green',\n          borderRadius: 10,\n          marginVertical: 8\n        },\n        mode: \"Contained\",\n        onPress: function onPress() {\n          setDialogConfirmAns(true);\n\n          if (answerText != \"\") {\n            var answerObject = {\n              userid: LOGIN.userid,\n              videoURL: item.videoURL,\n              answer: answerText,\n              number: item.number,\n              qt: item.qt,\n              date: moment().format('yyyy-MM-DD'),\n              year: year\n            };\n            setAnserError(false);\n            answer = answerObject;\n            item.answer = answerText;\n            updateAnswer();\n            setAnswerText(\"\");\n          } else {\n            setAnserError(true);\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: {\n          alignSelf: 'center',\n          color: 'white'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 33\n        }\n      }, \"\\u0E2A\\u0E48\\u0E07\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\\u0E2D\\u0E35\\u0E01\\u0E04\\u0E23\\u0E31\\u0E49\\u0E07\"))));\n    };\n\n    if (isLoading === false && questionAllStaffList.length === 0) {\n      return React.createElement(View, {\n        style: {\n          alignItems: 'center',\n          marginTop: 48\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 24,\n          color: 'red',\n          justifyContent: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }\n      }, \"\\u0E44\\u0E21\\u0E48\\u0E1E\\u0E1A\\u0E41\\u0E1A\\u0E1A\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E21\\u0E34\\u0E19\"));\n    } else {\n      return React.createElement(FlatList, {\n        data: questionAllStaffList,\n        extraData: questionAllStaffList,\n        keyExtractor: function keyExtractor(item) {\n          return \"\" + item;\n        },\n        renderItem: renderItem,\n        ListHeaderComponent: function ListHeaderComponent() {\n          return React.createElement(View, {\n            style: {\n              backgroundColor: '#D3D3D3'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 29\n            }\n          }, React.createElement(View, {\n            style: {\n              padding: 8,\n              backgroundColor: COLORS.primary,\n              width: '100%'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: {\n              alignSelf: 'center',\n              color: 'white',\n              fontSize: 20\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 37\n            }\n          }, \"\\u0E41\\u0E1A\\u0E1A\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E21\\u0E34\\u0E19 \\u0E1E\\u0E19\\u0E31\\u0E01\\u0E07\\u0E32\\u0E19\\u0E17\\u0E38\\u0E01\\u0E23\\u0E30\\u0E14\\u0E31\\u0E1A\")), React.createElement(Text, {\n            style: {\n              marginVertical: 4,\n              alignSelf: 'center',\n              color: 'red'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 33\n            }\n          }, \"*** \\u0E01\\u0E14\\u0E2A\\u0E48\\u0E07\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\\u0E17\\u0E38\\u0E01\\u0E04\\u0E23\\u0E31\\u0E49\\u0E07\\u0E01\\u0E48\\u0E2D\\u0E19\\u0E08\\u0E30\\u0E17\\u0E33\\u0E02\\u0E49\\u0E2D\\u0E43\\u0E2B\\u0E21\\u0E48 ***\"));\n        },\n        stickyHeaderIndices: [0],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }\n      });\n    }\n  };\n\n  var confirmAlert = function confirmAlert() {};\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, renderQuestionnaireAllStaff({\n    navigation: navigation\n  }), questionAllStaffList.length != 0 && (questionAllStaffList[0].videoURL === undefined || questionAllStaffList[0].videoURL === \"\") ? React.createElement(View, {\n    style: {\n      margin: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    style: {\n      backgroundColor: COLORS.primary,\n      borderRadius: 10,\n      marginVertical: 8\n    },\n    mode: \"Contained\",\n    onPress: function onPress() {\n      setIsEditVideo(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 25\n    }\n  }, \"\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E25\\u0E34\\u0E49\\u0E07\\u0E04\\u0E4C\\u0E27\\u0E34\\u0E14\\u0E35\\u0E42\\u0E2D\"))) : questionAllStaffList.length != 0 && questionAllStaffList[0].videoURL != \"\" ? React.createElement(View, {\n    style: {\n      margin: 16,\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.primary,\n      borderRadius: 10,\n      marginVertical: 8,\n      marginRight: 4\n    },\n    mode: \"Contained\",\n    onPress: function onPress() {\n      navigation.navigate('VideoWebView', {\n        videoURL: questionAllStaffList[0].videoURL\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 29\n    }\n  }, \"\\u0E14\\u0E39\\u0E27\\u0E34\\u0E14\\u0E35\\u0E42\\u0E2D\")), React.createElement(Button, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.primary,\n      borderRadius: 10,\n      marginVertical: 8,\n      marginLeft: 4\n    },\n    mode: \"Contained\",\n    onPress: function onPress() {\n      setIsEditVideo(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 29\n    }\n  }, \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E25\\u0E34\\u0E49\\u0E07\\u0E04\\u0E4C\"))) : null, React.createElement(AwesomeAlert, {\n    show: dialogConfirmAns,\n    showProgress: false,\n    title: \"AwesomeAlert\",\n    message: \"I have a message for you!\",\n    closeOnTouchOutside: true,\n    closeOnHardwareBackPress: false,\n    showCancelButton: true,\n    showConfirmButton: true,\n    cancelText: \"No, cancel\",\n    confirmText: \"Yes, delete it\",\n    confirmButtonColor: \"#DD6B55\",\n    onCancelPressed: function onCancelPressed() {\n      _this.hideAlert();\n    },\n    onConfirmPressed: function onConfirmPressed() {\n      _this.hideAlert();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 13\n    }\n  }), isLoading ? React.createElement(ActivityIndicator, {\n    style: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    size: \"large\",\n    color: \"#0275d8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 17\n    }\n  }) : null);\n};\n\nexport default QuestionnaireScreen;","map":{"version":3,"sources":["/Users/drift/Documents/ReactNative/cal-assessment/src/screens/QuestionnaireAllStaffScreen.js"],"names":["React","useState","useEffect","Button","Card","Dialog","axiox","COLORS","LOGIN","moment","AwesomeAlert","QuestionnaireScreen","navigation","route","userId","userid","year","params","part","answer","video","useRef","play","current","playAsync","questionAllStaffList","setQuestionAllStaffList","isLoading","setLoading","dialogConfirmAns","setDialogConfirmAns","answerText","setAnswerText","isEditVideo","setIsEditVideo","isAnswerError","setAnserError","allAnswers","getQuestionnaireAllStaff","get","then","res","data","console","log","catch","err","postAnswer","post","number","updateAnswer","put","error","renderQuestionnaireAllStaff","renderItem","item","index","margin","borderWidth","borderRadius","elevation","padding","backgroundColor","fontSize","fontWeight","qt","undefined","marginVertical","height","text","answerObject","videoURL","date","format","alignSelf","color","length","alignItems","marginTop","justifyContent","primary","width","confirmAlert","flex","flexDirection","marginRight","navigate","marginLeft","hideAlert","position","left","right","top","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, SafeAreaView, FlatList, Alert, StyleSheet, ActivityIndicator, ScrollView } from 'react-native';\nimport { Button, Card } from 'react-native-paper';\n// import { FlatList } from 'react-native-gesture-handler';\nimport Dialog from \"react-native-dialog\";\nimport axiox from 'axios';\nimport { COLORS } from '../constants/theme';\nimport { LOGIN } from '../constants/variables';\nimport moment from 'moment';\n\nimport AwesomeAlert from 'react-native-awesome-alerts';\n\nconst QuestionnaireScreen = ({ navigation, route }) => {\n\n    const userId = LOGIN.userid;\n    // console.log(userId);\n    const year = route.params.year;\n    const part = route.params.part;\n\n    var answer = {};\n\n    const video = React.useRef(null);\n    const play = () => video.current && video.current.playAsync();\n\n    const [questionAllStaffList, setQuestionAllStaffList] = useState([]);\n\n    const [isLoading, setLoading] = useState(false);\n    const [dialogConfirmAns, setDialogConfirmAns] = useState(false);\n    // const [dialogURL, setDialogURL] = useState(false);\n\n    // Answer\n    const [answerText, setAnswerText] = useState(\"\");\n    // Video URL\n    const [isEditVideo, setIsEditVideo] = useState(false);\n    const [isAnswerError, setAnserError] = useState(false);\n\n    var allAnswers = [];\n\n    const getQuestionnaireAllStaff = () => {\n        axiox.get('https://program-api.herokuapp.com/' + year + '/' + part + '/officer/' + userId)\n            .then(res => {\n                const data = res.data;\n                console.log(data);\n                setQuestionAllStaffList(data);\n                { setLoading(false) }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    };\n\n    const postAnswer = () => {\n        console.log(answer);\n        axiox.post('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.number + '/Answer/officer/' + userId, answer)\n            // console.log('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.questionNumber + '/Answer/officer/' + userId, answer)\n            .then(res => {\n                console.log(res.data);\n\n            })\n            .catch(err => {\n                console.log(err)\n            });\n    }\n\n    const updateAnswer = () => {\n        console.log(answer);\n        axiox\n            .put('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.number + '/Answer/officer/' + userId, answer)\n            .then(res => {\n                console.log(\"response: \", res)\n                // do something about response\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    useEffect(() => {\n        setLoading(true);\n        getQuestionnaireAllStaff();\n    }, []);\n\n    const renderQuestionnaireAllStaff = ({ navigation }) => {\n\n        const renderItem = ({ item, index }) => {\n            // const textInfo = \"บันทึกคำตอบแล้ว\\nเมื่อทำการแก้ไขให้คลิกยืนยันข้อมูลอีกครั้ง\"\n            // console.log(index);\n            allAnswers[index] = item.answer;\n\n            // textInputValue[index] = item.answer\n            console.log(allAnswers);\n            return (\n                <View style={{\n                    margin: 8,\n                    borderWidth: 1,\n                    // borderColor: 'gray',\n                    borderRadius: 5,\n                    elevation: 5,\n                    padding: 8,\n                    backgroundColor: '#fff'\n                    // borderColor: COLORS.primary\n                    // \n                }} >\n                    <Text style={{\n                        fontSize: 16,\n                        fontWeight: 'bold',\n\n                    }}>{item.number}. {item.qt}</Text>\n\n                    {item.answer === undefined ?\n                        <View>\n                            <TextInput\n                                style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, height: 100 }}\n                                // textContentType='telephoneNumber'\n                                placeholder=\"คำตอบ\"\n                                placeholderTextColor=\"gray\"\n                                multiline\n                                numberOfLines={6}\n                                color='blue'\n                                fontSize={16}\n                                onChangeText={text => {\n                                    // setAnserError(false);\n                                    setAnswerText(text);\n                                }}\n                            />\n                            <Button\n                                style={{\n                                    backgroundColor: 'gray',\n                                    borderRadius: 10,\n                                    marginVertical: 8\n                                }}\n                                mode=\"Contained\"\n                                onPress={() => {\n                                    // dialogConfirmAnswer({ index });\n                                    setDialogConfirmAns(true);\n                                    // confirmAlert();\n\n                                    if (answerText != \"\") {\n                                        var answerObject = {\n                                            userid: LOGIN.userid,\n                                            videoURL: item.videoURL,\n                                            answer: answerText,\n                                            number: item.number,\n                                            qt: item.qt,\n                                            date: moment().format('yyyy-MM-DD'),\n                                            year: year\n                                        };\n                                        // setDialogAnswer(false);\n                                        setAnserError(false);\n                                        setAnswerText(\"\");\n                                        // setVideoURLText(\"\");\n                                        answer = answerObject;\n                                        item.answer = answerText;\n                                        // allAnswers[index] = item.answer\n                                        // console.log(answer);\n                                        postAnswer();\n                                    }\n\n                                    else {\n                                        setAnserError(true);\n                                    }\n\n                                    // console.log(questionAllStaffList);\n\n                                }}>\n                                <Text style={{ alignSelf: 'center', color: 'white' }}>ส่งคำตอบ</Text>\n\n                            </Button>\n                        </View>\n\n                        :\n\n                        <View>\n                            <TextInput\n                                style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, height: 100 }}\n                                // textContentType='telephoneNumber'\n                                placeholder=\"คำตอบ\"\n                                placeholderTextColor=\"green\"\n                                multiline\n                                numberOfLines={6}\n                                color='blue'\n                                fontSize={16}\n                                onChangeText={text => {\n                                    setAnswerText(text);\n                                }}\n                                defaultValue={allAnswers[index]}\n                            />\n                            <Button\n                                style={{\n                                    backgroundColor: 'green',\n                                    borderRadius: 10,\n                                    marginVertical: 8\n                                }}\n                                mode=\"Contained\"\n                                onPress={() => {\n\n                                    setDialogConfirmAns(true);\n                                    // confirmAlert();\n\n                                    if (answerText != \"\") {\n                                        var answerObject = {\n                                            userid: LOGIN.userid,\n                                            videoURL: item.videoURL,\n                                            answer: answerText,\n                                            number: item.number,\n                                            qt: item.qt,\n                                            date: moment().format('yyyy-MM-DD'),\n                                            year: year\n                                        };\n                                        // setDialogAnswer(false);\n                                        setAnserError(false);\n                                        // \n                                        // setVideoURLText(\"\");\n                                        answer = answerObject;\n                                        item.answer = answerText;\n                                        updateAnswer();\n                                        setAnswerText(\"\");\n\n                                        // setDialogConfirmAns(false);\n                                        // setAnswer({});\n                                    }\n                                    else {\n                                        setAnserError(true);\n                                    }\n\n                                    // console.log(questionAllStaffList);\n\n                                }}>\n                                <Text style={{ alignSelf: 'center', color: 'white' }}>ส่งคำตอบอีกครั้ง</Text>\n\n                            </Button>\n                        </View>\n\n                    }\n                </View>\n\n            );\n        }\n\n        if (isLoading === false && questionAllStaffList.length === 0) {\n            return (\n                <View style={{\n                    alignItems: 'center',\n                    marginTop: 48\n                }}>\n                    <Text style={{\n                        fontSize: 24,\n                        color: 'red',\n                        justifyContent: 'center',\n                    }}>ไม่พบแบบประเมิน</Text>\n                </View>\n            );\n        } else {\n            return (\n\n                <FlatList\n                    data={questionAllStaffList}\n                    extraData={questionAllStaffList}\n                    keyExtractor={(item) => `${item}`}\n\n                    renderItem={renderItem}\n                    ListHeaderComponent={() => {\n                        return (\n                            <View style={{ backgroundColor: '#D3D3D3' }}>\n                                <View style={{ padding: 8, backgroundColor: COLORS.primary, width: '100%' }}>\n                                    <Text style={{ alignSelf: 'center', color: 'white', fontSize: 20 }}>\n                                        แบบประเมิน พนักงานทุกระดับ\n                                    </Text>\n                                </View>\n                                <Text style={{ marginVertical: 4, alignSelf: 'center', color: 'red' }}>*** กดส่งคำตอบทุกครั้งก่อนจะทำข้อใหม่ ***</Text>\n                            </View>\n\n                        );\n                    }}\n                    stickyHeaderIndices={[0]}\n                />\n            );\n        }\n\n    }\n\n    const confirmAlert = () => {\n\n    }\n\n    // QuestionnaireScreen\n\n    return (\n        <SafeAreaView style={{ flex: 1 }}>\n\n            {renderQuestionnaireAllStaff({ navigation })}\n\n            {questionAllStaffList.length != 0 && (questionAllStaffList[0].videoURL === undefined || questionAllStaffList[0].videoURL === \"\") ?\n\n                <View style={{ margin: 16 }}>\n                    <Button style={{\n                        backgroundColor: COLORS.primary,\n                        borderRadius: 10,\n                        marginVertical: 8\n                    }}\n                        mode=\"Contained\"\n                        onPress={() => { setIsEditVideo(true) }}>\n                        <Text style={{ alignSelf: 'center', color: 'white' }}>เพิ่มลิ้งค์วิดีโอ</Text>\n                    </Button>\n                </View>\n\n                :\n                questionAllStaffList.length != 0 && questionAllStaffList[0].videoURL != \"\" ?\n                    <View style={{ margin: 16, flexDirection: 'row', justifyContent: 'center' }}>\n                        <Button style={{\n                            flex: 1,\n                            backgroundColor: COLORS.primary,\n                            borderRadius: 10,\n                            marginVertical: 8,\n                            marginRight: 4\n\n                        }}\n                            mode=\"Contained\"\n                            onPress={() => {\n                                // console.log(questionAllStaffList[0].videoURL);\n                                navigation.navigate('VideoWebView', { videoURL: questionAllStaffList[0].videoURL })\n\n                            }}>\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>ดูวิดีโอ</Text>\n                        </Button>\n\n                        <Button style={{\n                            flex: 1,\n                            backgroundColor: COLORS.primary,\n                            borderRadius: 10,\n                            marginVertical: 8,\n                            marginLeft: 4\n                        }}\n                            mode=\"Contained\"\n                            onPress={() => { setIsEditVideo(true) }}>\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>แก้ไขลิ้งค์</Text>\n                        </Button>\n                    </View>\n                    :\n                    null\n            }\n\n            <AwesomeAlert\n                show={dialogConfirmAns}\n                showProgress={false}\n                title=\"AwesomeAlert\"\n                message=\"I have a message for you!\"\n                closeOnTouchOutside={true}\n                closeOnHardwareBackPress={false}\n                showCancelButton={true}\n                showConfirmButton={true}\n                cancelText=\"No, cancel\"\n                confirmText=\"Yes, delete it\"\n                confirmButtonColor=\"#DD6B55\"\n                onCancelPressed={() => {\n                    this.hideAlert();\n                }}\n                onConfirmPressed={() => {\n                    this.hideAlert();\n                }}\n            />\n\n            {/* <Dialog.Container visible={dialogConfirmAns}>\n                <Dialog.Title style={{ fontSize: 20, fontWeight: 'bold' }}>บันทึกข้อมูลสำเร็จ</Dialog.Title>\n                <Dialog.Description style={{ fontSize: 18, padding: 16 }}>หากทำการแก้ไขให้คลิกยืนยันข้อมูลอีกครั้ง</Dialog.Description>\n\n                <Dialog.Button\n                    label=\"ตกลง\"\n                    onPress={() => {\n                        setDialogConfirmAns(false);\n                    }} />\n\n            </Dialog.Container>\n\n            <Dialog.Container visible={isEditVideo}>\n                <Dialog.Title style={{ fontSize: 20, fontWeight: 'bold' }}>เพิ่มลิ้งค์วิดีโอ</Dialog.Title>\n                <TextInput\n                    style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginHorizontal: 16 }}\n                    // textContentType='telephoneNumber'\n                    placeholder=\":url\"\n                    placeholderTextColor=\"gray\"\n                    multiline\n                    numberOfLines={6}\n                    color='blue'\n                    fontSize={16}\n                    onChangeText={text => {\n                        // setAnserError(false);\n                        // setVideoLink(text)\n                        questionAllStaffList[0].videoURL = text\n                    }}\n                />\n                <Dialog.Button\n                    label=\"ยกเลิก\"\n                    onPress={() => {\n                        setIsEditVideo(false);\n                    }} />\n\n                <Dialog.Button\n                    label=\"ตกลง\"\n                    onPress={() => {\n                        const currentObject = {\n                            userid: questionAllStaffList[0].userid,\n                            year: questionAllStaffList[0].year,\n                            number: questionAllStaffList[0].number,\n                            qt: questionAllStaffList[0].qt,\n                            answer: questionAllStaffList[0].answer,\n                            videoURL: questionAllStaffList[0].videoURL,\n                            date: moment(questionAllStaffList[0].date).format('yyyy-MM-DD'),\n\n                        }\n                        console.log(currentObject);\n                        {\n                            questionAllStaffList[0].videoURL === undefined ?\n                                axiox.post('https://program-api.herokuapp.com/' + year + '/' + part + '/1/Answer/officer/' + userId, currentObject)\n                                    .then(res => {\n                                        console.log(res.data);\n                                    })\n                                    .catch(err => {\n                                        console.log(err)\n                                    })\n                                :\n                                axiox.put('https://program-api.herokuapp.com/' + year + '/' + part + '/1/Answer/officer/' + userId, currentObject)\n                                    .then(res => {\n                                        // storeData(res.data)\n                                        console.log(res.data);\n\n                                    })\n                                    .catch(err => {\n                                        console.log(err)\n                                    });\n                        }\n                        setIsEditVideo(false);\n                    }} />\n\n\n            </Dialog.Container> */}\n\n\n            {isLoading ?\n\n                <ActivityIndicator style={{\n\n                    position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }} size=\"large\" color=\"#0275d8\" />\n\n                :\n\n                null\n\n            }\n\n        </SafeAreaView>\n    );\n}\n\nexport default QuestionnaireScreen;"]},"metadata":{},"sourceType":"module"}