{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/drift/Documents/ReactNative/cal-assessment/src/screens/StaffQuestionnaireScreen.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, Card } from 'react-native-paper';\nimport { useFocusEffect } from '@react-navigation/native';\nimport axiox from 'axios';\nimport { COLORS, SIZES } from \"../constants/theme\";\nimport { MAIN_URL, USER } from \"../constants/variables\";\nimport moment from 'moment';\nimport AwesomeAlert from 'react-native-awesome-alerts';\n\nvar StaffQuestionnaireScreen = function StaffQuestionnaireScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var sheetID = route.params.sheetID;\n  var userId = route.params.userId;\n  var year = route.params.year;\n  var part = route.params.part;\n  var answer = {};\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      answerStaff = _useState2[0],\n      setAnswerStaff = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      staffAnswer = _useState6[0],\n      setStaffAnswer = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isEditVideo = _useState8[0],\n      setIsEditVideo = _useState8[1];\n\n  var staffAnswerList = [];\n\n  var getStaff = function getStaff() {\n    axiox.get(MAIN_URL + '/answer/staff/' + year + '/' + part + '/' + userId).then(function (resStaff) {\n      setAnswerStaff(resStaff.data);\n      setLoading(false);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var postAnswer = function postAnswer() {\n    setLoading(true);\n    axiox.post(MAIN_URL + '/answer/staff/' + year + '/' + part + '/' + userId + '/' + answer.number, answer).then(function (res) {\n      console.log(res.data);\n      alert(\"บันทึกข้อมูลสำเร็จ\");\n      setLoading(false);\n    }).catch(function (err) {\n      console.log(err);\n      alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n      setLoading(false);\n    });\n  };\n\n  useEffect(function () {\n    setLoading(true);\n    getStaff();\n  }, []);\n\n  var renderQuestionnaireAllStaff = function renderQuestionnaireAllStaff(_ref2) {\n    var navigation = _ref2.navigation;\n\n    var renderItem = function renderItem(_ref3) {\n      var item = _ref3.item,\n          index = _ref3.index;\n      staffAnswerList[index] = item.answer;\n      return React.createElement(View, {\n        style: {\n          margin: 8,\n          borderWidth: 1,\n          borderRadius: 5,\n          elevation: 5,\n          padding: 8,\n          backgroundColor: '#fff'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 16,\n          fontWeight: 'bold'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }, item.number, \". \", item.qt), sheetID === 1 ? item.answer === undefined ? React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          borderWidth: 1,\n          borderRadius: 5,\n          padding: 10,\n          marginVertical: 8,\n          height: 150\n        },\n        placeholder: \"\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\",\n        placeholderTextColor: \"gray\",\n        multiline: true,\n        color: \"blue\",\n        fontSize: 16,\n        onChangeText: function onChangeText(text) {\n          staffAnswer[index] = text;\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 33\n        }\n      }), React.createElement(Button, {\n        style: {\n          backgroundColor: 'gray',\n          borderRadius: 10,\n          marginVertical: 8\n        },\n        mode: \"Contained\",\n        onPress: function onPress() {\n          if (staffAnswer[index] != undefined) {\n            var answerObject = {\n              userid: USER.userid,\n              videoURL: item.videoURL,\n              answer: staffAnswer[index],\n              number: item.number,\n              qt: item.qt,\n              date: moment().format('yyyy-MM-DD'),\n              year: year\n            };\n            answer = answerObject;\n            postAnswer();\n            item.answer = staffAnswer[index];\n          } else {\n            alert(\"ข้อมูลไม่ได้ถูกแก้ไข กรุณาแก้ไขข้อมูลก่อนบันทึก\");\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          alignSelf: 'center',\n          color: 'white'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 37\n        }\n      }, \"\\u0E2A\\u0E48\\u0E07\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\"))) : React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          borderWidth: 1,\n          borderRadius: 5,\n          padding: 10,\n          marginVertical: 8,\n          height: 150\n        },\n        placeholder: \"\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\",\n        placeholderTextColor: \"gray\",\n        multiline: true,\n        color: \"blue\",\n        fontSize: 16,\n        onChangeText: function onChangeText(text) {\n          staffAnswer[index] = text;\n        },\n        defaultValue: staffAnswerList[index],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 33\n        }\n      }), React.createElement(Button, {\n        style: {\n          backgroundColor: 'green',\n          borderRadius: 10,\n          marginVertical: 8\n        },\n        mode: \"Contained\",\n        onPress: function onPress() {\n          console.log(staffAnswer);\n\n          if (staffAnswer[index] != undefined) {\n            var answerObject = {\n              userid: USER.userid,\n              videoURL: item.videoURL,\n              answer: staffAnswer[index],\n              number: item.number,\n              qt: item.qt,\n              date: moment().format('yyyy-MM-DD'),\n              year: year\n            };\n            answer = answerObject;\n            postAnswer();\n            item.answer = staffAnswer[index];\n          } else {\n            alert(\"ข้อมูลไม่ได้ถูกแก้ไข กรุณาแก้ไขข้อมูลก่อนบันทึก\");\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: {\n          alignSelf: 'center',\n          color: 'white'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 37\n        }\n      }, \"\\u0E2A\\u0E48\\u0E07\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\\u0E2D\\u0E35\\u0E01\\u0E04\\u0E23\\u0E31\\u0E49\\u0E07\"))) : React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: {\n          borderWidth: 1,\n          borderRadius: 5,\n          padding: 10,\n          marginVertical: 8,\n          color: 'blue'\n        },\n        fontSize: 16,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 29\n        }\n      }, item.answer)));\n    };\n\n    if (isLoading === false && answerStaff.length === 0) {\n      return React.createElement(View, {\n        style: {\n          alignItems: 'center',\n          marginTop: 48\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 24,\n          color: 'red',\n          justifyContent: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }\n      }, \"\\u0E44\\u0E21\\u0E48\\u0E1E\\u0E1A\\u0E41\\u0E1A\\u0E1A\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E21\\u0E34\\u0E19\"));\n    } else {\n      return React.createElement(FlatList, {\n        data: answerStaff,\n        extraData: answerStaff,\n        keyExtractor: function keyExtractor(item, index) {\n          return \"\" + index;\n        },\n        renderItem: renderItem,\n        ListHeaderComponent: function ListHeaderComponent() {\n          return React.createElement(View, {\n            style: {\n              backgroundColor: '#D3D3D3'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }\n          }, React.createElement(View, {\n            style: {\n              padding: 8,\n              backgroundColor: COLORS.primary,\n              width: '100%'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 33\n            }\n          }, React.createElement(Text, {\n            style: {\n              alignSelf: 'center',\n              color: 'white',\n              fontSize: 20\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 37\n            }\n          }, \"\\u0E41\\u0E1A\\u0E1A\\u0E1B\\u0E23\\u0E30\\u0E40\\u0E21\\u0E34\\u0E19 \\u0E1E\\u0E19\\u0E31\\u0E01\\u0E07\\u0E32\\u0E19\\u0E17\\u0E38\\u0E01\\u0E23\\u0E30\\u0E14\\u0E31\\u0E1A\")), React.createElement(Text, {\n            style: {\n              marginVertical: 4,\n              alignSelf: 'center',\n              color: 'red'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 33\n            }\n          }, \"*** \\u0E01\\u0E14\\u0E2A\\u0E48\\u0E07\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\\u0E17\\u0E38\\u0E01\\u0E04\\u0E23\\u0E31\\u0E49\\u0E07\\u0E01\\u0E48\\u0E2D\\u0E19\\u0E08\\u0E30\\u0E17\\u0E33\\u0E02\\u0E49\\u0E2D\\u0E43\\u0E2B\\u0E21\\u0E48 ***\"));\n        },\n        stickyHeaderIndices: [0],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }\n      });\n    }\n  };\n\n  var renderCustomViewInput = function renderCustomViewInput() {\n    return React.createElement(TextInput, {\n      style: {\n        borderWidth: 1,\n        borderRadius: 5,\n        padding: 10,\n        marginHorizontal: 16,\n        width: SIZES.width / 2\n      },\n      placeholder: \":url\",\n      placeholderTextColor: \"gray\",\n      multiline: true,\n      color: \"blue\",\n      fontSize: 16,\n      onChangeText: function onChangeText(text) {\n        answerStaff[0].videoURL = text;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }, renderQuestionnaireAllStaff({\n    navigation: navigation\n  }), sheetID === 1 ? answerStaff.length != 0 && (answerStaff[0].videoURL === undefined || answerStaff[0].videoURL === \"\") ? React.createElement(View, {\n    style: {\n      margin: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    style: {\n      backgroundColor: COLORS.primary,\n      borderRadius: 10,\n      marginVertical: 8\n    },\n    mode: \"Contained\",\n    onPress: function onPress() {\n      setIsEditVideo(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 29\n    }\n  }, \"\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E25\\u0E34\\u0E49\\u0E07\\u0E04\\u0E4C\\u0E27\\u0E34\\u0E14\\u0E35\\u0E42\\u0E2D\"))) : answerStaff.length != 0 && answerStaff[0].videoURL != \"\" ? React.createElement(View, {\n    style: {\n      margin: 16,\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 25\n    }\n  }, React.createElement(Button, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.primary,\n      borderRadius: 10,\n      marginVertical: 8,\n      marginRight: 4\n    },\n    mode: \"Contained\",\n    onPress: function onPress() {\n      {\n        Platform.OS === \"web\" ? window.open(answerStaff[0].videoURL) : navigation.navigate('VideoWebView', {\n          videoURL: answerStaff[0].videoURL\n        });\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 33\n    }\n  }, \"\\u0E14\\u0E39\\u0E27\\u0E34\\u0E14\\u0E35\\u0E42\\u0E2D\")), React.createElement(Button, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.primary,\n      borderRadius: 10,\n      marginVertical: 8,\n      marginLeft: 4\n    },\n    mode: \"Contained\",\n    onPress: function onPress() {\n      setIsEditVideo(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 33\n    }\n  }, \"\\u0E41\\u0E01\\u0E49\\u0E44\\u0E02\\u0E25\\u0E34\\u0E49\\u0E07\\u0E04\\u0E4C\"))) : null : React.createElement(View, {\n    style: {\n      margin: 16,\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.primary,\n      borderRadius: 10,\n      marginVertical: 8,\n      marginRight: 4\n    },\n    mode: \"Contained\",\n    onPress: function onPress() {\n      navigation.navigate('VideoWebView', {\n        videoURL: answerStaff[0].videoURL\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      alignSelf: 'center',\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 25\n    }\n  }, \"\\u0E14\\u0E39\\u0E27\\u0E34\\u0E14\\u0E35\\u0E42\\u0E2D\"))), React.createElement(AwesomeAlert, {\n    show: isEditVideo,\n    title: \"\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E25\\u0E34\\u0E49\\u0E07\\u0E04\\u0E4C\\u0E27\\u0E34\\u0E14\\u0E35\\u0E42\\u0E2D\",\n    closeOnTouchOutside: false,\n    confirmText: \"\\u0E15\\u0E01\\u0E25\\u0E07\",\n    showConfirmButton: true,\n    showCancelButton: true,\n    customView: renderCustomViewInput(),\n    confirmButtonColor: COLORS.primary,\n    cancelText: \"\\u0E22\\u0E01\\u0E40\\u0E25\\u0E34\\u0E01\",\n    onCancelPressed: function onCancelPressed() {\n      setIsEditVideo(false);\n    },\n    onConfirmPressed: function onConfirmPressed() {\n      setIsEditVideo(false);\n      var currentObject = {\n        userid: answerStaff[0].userid,\n        year: answerStaff[0].year,\n        number: answerStaff[0].number,\n        qt: answerStaff[0].qt,\n        answer: answerStaff[0].answer,\n        videoURL: answerStaff[0].videoURL,\n        date: moment(answerStaff[0].date).format('yyyy-MM-DD')\n      };\n      console.log(currentObject);\n      {\n        axiox.post(MAIN_URL + '/answer/staff/' + year + '/' + part + '/' + userId + '/1', currentObject).then(function (res) {\n          console.log(res.data);\n        }).catch(function (err) {\n          console.log(err);\n        });\n      }\n      setIsEditVideo(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }), isLoading ? React.createElement(ActivityIndicator, {\n    style: {\n      position: 'absolute',\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    size: \"large\",\n    color: \"#0275d8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 17\n    }\n  }) : null);\n};\n\nexport default StaffQuestionnaireScreen;","map":{"version":3,"sources":["/Users/drift/Documents/ReactNative/cal-assessment/src/screens/StaffQuestionnaireScreen.js"],"names":["React","useState","useEffect","Button","Card","useFocusEffect","axiox","COLORS","SIZES","MAIN_URL","USER","moment","AwesomeAlert","StaffQuestionnaireScreen","navigation","route","sheetID","params","userId","year","part","answer","answerStaff","setAnswerStaff","isLoading","setLoading","staffAnswer","setStaffAnswer","isEditVideo","setIsEditVideo","staffAnswerList","getStaff","get","then","resStaff","data","catch","err","console","log","postAnswer","post","number","res","alert","renderQuestionnaireAllStaff","renderItem","item","index","margin","borderWidth","borderRadius","elevation","padding","backgroundColor","fontSize","fontWeight","qt","undefined","marginVertical","height","text","answerObject","userid","videoURL","date","format","alignSelf","color","length","alignItems","marginTop","justifyContent","primary","width","renderCustomViewInput","marginHorizontal","flex","flexDirection","marginRight","Platform","OS","window","open","navigate","marginLeft","currentObject","position","left","right","top","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, SafeAreaView, FlatList, StyleSheet, Platform, ActivityIndicator, ScrollView } from 'react-native';\nimport { Button, Card } from 'react-native-paper';\nimport { useFocusEffect } from '@react-navigation/native';\n// import { FlatList } from 'react-native-gesture-handler';\n// import Dialog from \"react-native-dialog\";\nimport axiox from 'axios';\nimport { COLORS, SIZES } from '../constants/theme';\nimport { MAIN_URL, USER } from '../constants/variables';\nimport moment from 'moment';\n\nimport AwesomeAlert from 'react-native-awesome-alerts';\n\nconst StaffQuestionnaireScreen = ({ navigation, route }) => {\n    // console.log(route);\n\n    let sheetID = route.params.sheetID;\n    const userId = route.params.userId;\n    // console.log(userId);\n    const year = route.params.year;\n    const part = route.params.part;\n\n    var answer = {};\n\n    const [answerStaff, setAnswerStaff] = useState([]);\n\n    const [isLoading, setLoading] = useState(false);\n    // const [dialogURL, setDialogURL] = useState(false);\n\n    // Answer\n    const [staffAnswer, setStaffAnswer] = useState([]);\n    // Video URL\n    const [isEditVideo, setIsEditVideo] = useState(false);\n\n    // var checkStaffAnswer = [];\n    var staffAnswerList = [];\n\n    const getStaff = () => {\n        axiox.get(MAIN_URL + '/answer/staff/' + year + '/' + part + '/' + userId)\n            .then(resStaff => {\n                setAnswerStaff(resStaff.data);\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    };\n\n    const postAnswer = () => {\n        setLoading(true);\n        axiox.post(MAIN_URL + '/answer/staff/' + year + '/' + part + '/' + userId + '/' + answer.number, answer)\n            .then(res => {\n                console.log(res.data);\n\n                alert(\"บันทึกข้อมูลสำเร็จ\");\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err);\n                alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                setLoading(false);\n            });\n    }\n\n    // useFocusEffect(\n    //     React.useCallback(() => {\n    //         return () => getStaff();\n    //     }, [])\n    // );\n\n    useEffect(() => {\n        setLoading(true);\n        getStaff();\n    }, []);\n\n    const renderQuestionnaireAllStaff = ({ navigation }) => {\n\n        const renderItem = ({ item, index }) => {\n            staffAnswerList[index] = item.answer;\n            return (\n                <View style={{\n                    margin: 8,\n                    borderWidth: 1,\n                    // borderColor: 'gray',\n                    borderRadius: 5,\n                    elevation: 5,\n                    padding: 8,\n                    backgroundColor: '#fff'\n                    // borderColor: COLORS.primary\n                    // \n                }} >\n                    <Text style={{\n                        fontSize: 16,\n                        fontWeight: 'bold',\n\n                    }}>{item.number}. {item.qt}</Text>\n\n                    {sheetID === 1 ?\n                        item.answer === undefined ?\n                            <View>\n                                <TextInput\n                                    style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, height: 150 }}\n                                    // textContentType='telephoneNumber'\n                                    placeholder=\"คำตอบ\"\n                                    placeholderTextColor=\"gray\"\n                                    multiline\n                                    // blurOnSubmit={true}\n                                    // numberOfLines={6}\n                                    color='blue'\n                                    fontSize={16}\n                                    onChangeText={text => {\n                                        staffAnswer[index] = text;\n                                    }}\n                                />\n                                <Button\n                                    style={{\n                                        backgroundColor: 'gray',\n                                        borderRadius: 10,\n                                        marginVertical: 8\n                                    }}\n                                    mode=\"Contained\"\n                                    onPress={() => {\n                                        // dialogConfirmAnswer({ index });\n\n                                        // confirmAlert();\n                                        // console.log(staffAnswer[index]);\n                                        if (staffAnswer[index] != undefined) {\n                                            var answerObject = {\n                                                userid: USER.userid,\n                                                videoURL: item.videoURL,\n                                                answer: staffAnswer[index],\n                                                number: item.number,\n                                                qt: item.qt,\n                                                date: moment().format('yyyy-MM-DD'),\n                                                year: year\n                                            };\n                                            answer = answerObject;\n\n                                            postAnswer();\n\n                                            item.answer = staffAnswer[index];\n\n                                        }\n\n                                        else {\n                                            alert(\"ข้อมูลไม่ได้ถูกแก้ไข กรุณาแก้ไขข้อมูลก่อนบันทึก\");\n                                        }\n\n                                        // console.log(questionAllStaffList);\n\n                                    }}>\n                                    <Text style={{ alignSelf: 'center', color: 'white' }}>ส่งคำตอบ</Text>\n\n                                </Button>\n                            </View>\n\n                            :\n\n                            <View>\n                                <TextInput\n                                    style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, height: 150 }}\n                                    // textContentType='telephoneNumber'\n                                    placeholder=\"คำตอบ\"\n                                    placeholderTextColor=\"gray\"\n                                    multiline\n                                    // blurOnSubmit={true}\n                                    // numberOfLines={6}\n                                    color='blue'\n                                    fontSize={16}\n                                    onChangeText={text => {\n                                        staffAnswer[index] = text;\n                                    }}\n                                    defaultValue={staffAnswerList[index]}\n                                />\n                                <Button\n                                    style={{\n                                        backgroundColor: 'green',\n                                        borderRadius: 10,\n                                        marginVertical: 8\n                                    }}\n                                    mode=\"Contained\"\n                                    onPress={() => {\n\n                                        console.log(staffAnswer);\n                                        if (staffAnswer[index] != undefined) {\n                                            var answerObject = {\n                                                userid: USER.userid,\n                                                videoURL: item.videoURL,\n                                                answer: staffAnswer[index],\n                                                number: item.number,\n                                                qt: item.qt,\n                                                date: moment().format('yyyy-MM-DD'),\n                                                year: year\n                                            };\n\n                                            answer = answerObject;\n\n                                            postAnswer();\n\n                                            item.answer = staffAnswer[index];\n                                        }\n                                        else {\n                                            alert(\"ข้อมูลไม่ได้ถูกแก้ไข กรุณาแก้ไขข้อมูลก่อนบันทึก\");\n                                        }\n\n                                        // console.log(questionAllStaffList);\n\n                                    }}>\n                                    <Text style={{ alignSelf: 'center', color: 'white' }}>ส่งคำตอบอีกครั้ง</Text>\n\n                                </Button>\n                            </View>\n\n                        :\n\n                        // Sheet id = 2 || ดูคำตอบของ user ที่เลือก\n                        <View>\n                            <Text\n                                style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, color: 'blue' }}\n                                fontSize={16}\n                            >\n                                {item.answer}\n                            </Text>\n\n                        </View>\n                    }\n                </View>\n\n            );\n        }\n\n        if (isLoading === false && answerStaff.length === 0) {\n            return (\n                <View style={{\n                    alignItems: 'center',\n                    marginTop: 48\n                }}>\n                    <Text style={{\n                        fontSize: 24,\n                        color: 'red',\n                        justifyContent: 'center',\n                    }}>ไม่พบแบบประเมิน</Text>\n                </View>\n            );\n        } else {\n            return (\n\n                <FlatList\n                    data={answerStaff}\n                    extraData={answerStaff}\n                    keyExtractor={(item, index) => `${index}`}\n                    renderItem={renderItem}\n                    ListHeaderComponent={() => {\n                        return (\n                            <View style={{ backgroundColor: '#D3D3D3' }}>\n                                <View style={{ padding: 8, backgroundColor: COLORS.primary, width: '100%' }}>\n                                    <Text style={{ alignSelf: 'center', color: 'white', fontSize: 20 }}>\n                                        แบบประเมิน พนักงานทุกระดับ\n                                    </Text>\n                                </View>\n                                <Text style={{ marginVertical: 4, alignSelf: 'center', color: 'red' }}>*** กดส่งคำตอบทุกครั้งก่อนจะทำข้อใหม่ ***</Text>\n                            </View>\n\n                        );\n                    }}\n                    stickyHeaderIndices={[0]}\n                />\n            );\n        }\n\n    }\n\n    const renderCustomViewInput = () => (\n        <TextInput\n            style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginHorizontal: 16, width: SIZES.width / 2 }}\n            // textContentType='telephoneNumber'\n            placeholder=\":url\"\n            placeholderTextColor=\"gray\"\n            multiline\n            // numberOfLines={6}\n            color='blue'\n            fontSize={16}\n            onChangeText={text => {\n                // setAnserError(false);\n                // setVideoLink(text)\n                answerStaff[0].videoURL = text\n            }}\n        />\n    )\n\n    // QuestionnaireScreen\n\n    return (\n        <SafeAreaView style={{ flex: 1 }}>\n\n            {renderQuestionnaireAllStaff({ navigation })}\n\n            {sheetID === 1 ?\n                answerStaff.length != 0 && (answerStaff[0].videoURL === undefined || answerStaff[0].videoURL === \"\") ?\n\n                    <View style={{ margin: 16 }}>\n                        <Button style={{\n                            backgroundColor: COLORS.primary,\n                            borderRadius: 10,\n                            marginVertical: 8\n                        }}\n                            mode=\"Contained\"\n                            onPress={() => { setIsEditVideo(true) }}>\n                            <Text style={{ alignSelf: 'center', color: 'white' }}>เพิ่มลิ้งค์วิดีโอ</Text>\n                        </Button>\n                    </View>\n\n                    :\n                    answerStaff.length != 0 && answerStaff[0].videoURL != \"\" ?\n                        <View style={{ margin: 16, flexDirection: 'row', justifyContent: 'center' }}>\n                            <Button style={{\n                                flex: 1,\n                                backgroundColor: COLORS.primary,\n                                borderRadius: 10,\n                                marginVertical: 8,\n                                marginRight: 4\n\n                            }}\n                                mode=\"Contained\"\n                                onPress={() => {\n                                    // console.log(questionAllStaffList[0].videoURL);\n                                    {\n                                        Platform.OS === \"web\" ?\n                                            window.open(answerStaff[0].videoURL) :\n                                            navigation.navigate('VideoWebView', { videoURL: answerStaff[0].videoURL })\n                                    }\n\n\n                                }}>\n                                <Text style={{ alignSelf: 'center', color: 'white' }}>ดูวิดีโอ</Text>\n                            </Button>\n\n                            <Button style={{\n                                flex: 1,\n                                backgroundColor: COLORS.primary,\n                                borderRadius: 10,\n                                marginVertical: 8,\n                                marginLeft: 4\n                            }}\n                                mode=\"Contained\"\n                                onPress={() => { setIsEditVideo(true) }}>\n                                <Text style={{ alignSelf: 'center', color: 'white' }}>แก้ไขลิ้งค์</Text>\n                            </Button>\n                        </View>\n                        :\n                        null\n\n                :\n\n                <View style={{ margin: 16, flexDirection: 'row', justifyContent: 'center' }}>\n                    <Button style={{\n                        flex: 1,\n                        backgroundColor: COLORS.primary,\n                        borderRadius: 10,\n                        marginVertical: 8,\n                        marginRight: 4\n\n                    }}\n                        mode=\"Contained\"\n                        onPress={() => {\n                            // console.log(questionManagerList[0].videoURL);\n                            navigation.navigate('VideoWebView', { videoURL: answerStaff[0].videoURL })\n\n                        }}>\n                        <Text style={{ alignSelf: 'center', color: 'white' }}>ดูวิดีโอ</Text>\n                    </Button>\n\n                </View>\n            }\n\n            <AwesomeAlert\n                show={isEditVideo}\n                title=\"เพิ่มลิ้งค์วิดีโอ\"\n                // message=\"เพิ่มลิ้งวิดีโอ\"\n                closeOnTouchOutside={false}\n                confirmText=\"ตกลง\"\n                showConfirmButton={true}\n                showCancelButton={true}\n                customView={renderCustomViewInput()}\n                confirmButtonColor={COLORS.primary}\n                cancelText=\"ยกเลิก\"\n                onCancelPressed={() => {\n                    setIsEditVideo(false);\n                    // this.hideAlert();\n                }}\n                onConfirmPressed={() => {\n                    setIsEditVideo(false);\n                    const currentObject = {\n                        userid: answerStaff[0].userid,\n                        year: answerStaff[0].year,\n                        number: answerStaff[0].number,\n                        qt: answerStaff[0].qt,\n                        answer: answerStaff[0].answer,\n                        videoURL: answerStaff[0].videoURL,\n                        date: moment(answerStaff[0].date).format('yyyy-MM-DD'),\n\n                    }\n                    console.log(currentObject);\n                    {\n                        axiox.post(MAIN_URL + '/answer/staff/' + year + '/' + part + '/' + userId + '/1', currentObject)\n                            .then(res => {\n                                console.log(res.data);\n                            })\n                            .catch(err => {\n                                console.log(err)\n                            })\n                    }\n                    setIsEditVideo(false);\n                }}\n            >\n            </AwesomeAlert>\n\n            {isLoading ?\n\n                <ActivityIndicator style={{\n\n                    position: 'absolute',\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                    bottom: 0,\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }} size=\"large\" color=\"#0275d8\" />\n\n                :\n\n                null\n\n            }\n\n        </SafeAreaView>\n    );\n}\n\nexport default StaffQuestionnaireScreen;"]},"metadata":{},"sourceType":"module"}