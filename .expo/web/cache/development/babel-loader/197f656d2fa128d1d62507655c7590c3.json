{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/drift/Documents/ReactNative/cal-assessment/App.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { USER } from \"./src/constants/variables\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport AssessmentScreen from \"./src/screens/AssessmentScreen\";\nimport StaffQuestionnaireScreen from \"./src/screens/StaffQuestionnaireScreen\";\nimport ManagerQuestionnaireScreen from \"./src/screens/ManagerQuestionnaireScreen\";\nimport VideoWebViewScreen from \"./src/screens/VideoWebViewScreen\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport { AuthContext } from \"./src/components/context\";\nimport RootStackScreen from \"./src/screens/RootStackScreen\";\nimport { COLORS } from \"./src/constants/theme\";\nimport UserListScreen from \"./src/screens/UserListScreen\";\nvar Stack = createStackNavigator();\nvar Tab = createMaterialTopTabNavigator();\n\nvar Questionnaire = function Questionnaire(_ref) {\n  var route = _ref.route;\n  var userId = route.params.userId;\n  var sheetID = route.params.sheetID;\n  var year = route.params.year;\n  var part = route.params.part;\n  return React.createElement(Tab.Navigator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"AllStaff\",\n    component: StaffQuestionnaireScreen,\n    options: {\n      title: 'ทั่วไป'\n    },\n    initialParams: {\n      userId: userId,\n      sheetID: sheetID,\n      year: year,\n      part: part\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Manager\",\n    component: ManagerQuestionnaireScreen,\n    options: {\n      title: 'ผู้จัดการถาม'\n    },\n    initialParams: {\n      userId: userId,\n      sheetID: sheetID,\n      year: year,\n      part: part\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar App = function App() {\n  var initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null\n  };\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: null,\n          userToken: null,\n          isLoading: false\n        });\n    }\n  };\n\n  var _React$useReducer = React.useReducer(loginReducer, initialLoginState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispacth = _React$useReducer2[1];\n\n  var authContext = useMemo(function () {\n    return {\n      signIn: function signIn(userName, position, department) {\n        var userToken;\n        userToken = userName;\n        USER.position = position;\n        USER.department = department;\n        USER.userid = userName;\n        dispacth({\n          type: 'LOGIN',\n          id: userName,\n          token: userToken\n        });\n      },\n      signOut: function signOut() {\n        dispacth({\n          type: 'LOGOUT'\n        });\n      }\n    };\n  }, []);\n\n  var logoutState = function logoutState() {\n    return _regeneratorRuntime.async(function logoutState$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem('user_login'));\n\n          case 3:\n            return _context.abrupt(\"return\", true);\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('error: ', _context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, loginState.userToken != null ? React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: true,\n      headerRight: function headerRight() {\n        return React.createElement(Icon, {\n          name: \"sign-out\",\n          size: 20,\n          style: {\n            marginHorizontal: 16\n          },\n          onPress: function onPress() {\n            logoutState();\n            authContext.signOut();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 34\n          }\n        });\n      }\n    },\n    initialRouteName: \"Home\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      title: 'หน้าแรก'\n    },\n    initialParams: {\n      userid: loginState.userToken\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Assessment\",\n    component: AssessmentScreen,\n    options: {\n      title: 'ปีประเมิน'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"UserList\",\n    component: UserListScreen,\n    options: {\n      title: 'รายชื่อ'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Questionnaire\",\n    component: Questionnaire,\n    options: {\n      title: 'แบบประเมิน'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"VideoWebView\",\n    component: VideoWebViewScreen,\n    options: {\n      title: 'ดูวิดีโอ'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  })) : React.createElement(RootStackScreen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/drift/Documents/ReactNative/cal-assessment/App.js"],"names":["React","useState","useEffect","useMemo","AsyncStorage","NavigationContainer","createStackNavigator","createMaterialTopTabNavigator","Icon","USER","HomeScreen","AssessmentScreen","StaffQuestionnaireScreen","ManagerQuestionnaireScreen","VideoWebViewScreen","LoginScreen","AuthContext","RootStackScreen","COLORS","UserListScreen","Stack","Tab","Questionnaire","route","userId","params","sheetID","year","part","title","App","initialLoginState","isLoading","userName","userToken","loginReducer","prevState","action","type","token","id","useReducer","loginState","dispacth","authContext","signIn","position","department","userid","signOut","logoutState","removeItem","console","log","headerShown","headerRight","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\n\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { USER } from './src/constants/variables'\n\nimport HomeScreen from './src/screens/HomeScreen'\nimport AssessmentScreen from './src/screens/AssessmentScreen';\nimport StaffQuestionnaireScreen from './src/screens/StaffQuestionnaireScreen';\nimport ManagerQuestionnaireScreen from './src/screens/ManagerQuestionnaireScreen';\nimport VideoWebViewScreen from './src/screens/VideoWebViewScreen';\nimport LoginScreen from './src/screens/LoginScreen';\n\nimport { AuthContext } from './src/components/context';\nimport RootStackScreen from './src/screens/RootStackScreen';\nimport { COLORS } from './src/constants/theme';\nimport UserListScreen from './src/screens/UserListScreen';\n\nconst Stack = createStackNavigator();\nconst Tab = createMaterialTopTabNavigator();\n\nconst Questionnaire = ({ route }) => {\n\n  const userId = route.params.userId;\n  const sheetID = route.params.sheetID;\n  const year = route.params.year;\n  const part = route.params.part;\n\n  // console.log(route);\n  return (\n    <Tab.Navigator>\n      <Tab.Screen\n        name=\"AllStaff\"\n        component={StaffQuestionnaireScreen}\n        options={{ title: 'ทั่วไป' }}\n        // listeners={({ navigation }) => ({ blur: () => navigation.setParams({ screen: undefined }) })}\n        initialParams={{ userId: userId, sheetID: sheetID, year: year, part: part }} />\n      <Tab.Screen\n        name=\"Manager\"\n        component={ManagerQuestionnaireScreen}\n        options={{ title: 'ผู้จัดการถาม' }}\n        // listeners={({ navigation }) => ({ blur: () => navigation.setParams({ screen: undefined }) })}\n        initialParams={{ userId: userId, sheetID: sheetID, year: year, part: part }} />\n    </Tab.Navigator>\n  );\n}\n\nconst App = () => {\n\n  // const [isLoading, setIsLoading] = useState(true);\n  // const [userToken, setUserToken] = useState(null);\n\n  const initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null,\n  };\n\n  const loginReducer = (prevState, action) => {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return {\n          ...prevState,\n          userToken: action.token,\n          isLoading: false\n        };\n      case 'LOGIN':\n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        };\n      case 'LOGOUT':\n        return {\n          ...prevState,\n          userName: null,\n          userToken: null,\n          isLoading: false\n        };\n    }\n  };\n\n  const [loginState, dispacth] = React.useReducer(loginReducer, initialLoginState);\n\n  const authContext = useMemo(() => ({\n    signIn: (userName, position, department) => {\n      // setUserToken('asdf');\n      // setIsLoading(false);\n      let userToken;\n      // userName = null;\n      // if (userName === 'User' && password === 'Pass') {\n      userToken = userName;\n      USER.position = position;\n      USER.department = department;\n      USER.userid = userName;\n\n      // console.log(LOGIN.position);\n      // }\n      dispacth({ type: 'LOGIN', id: userName, token: userToken });\n    },\n    signOut: () => {\n      // setUserToken(null);\n      // setIsLoading(false);\n      dispacth({ type: 'LOGOUT' });\n    },\n  }), []);\n\n  const logoutState = async () => {\n    // console.log(queueSelect);\n    try {\n      await AsyncStorage.removeItem('user_login');\n      return true;\n\n    } catch (error) {\n      console.log('error: ', error);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      <NavigationContainer>\n        {/* {console.log(loginState.userToken)} */}\n        {loginState.userToken != null ? (\n\n          <Stack.Navigator\n            screenOptions={{\n              headerShown: true,\n              headerRight: () => <Icon name='sign-out'\n                // color= {COLORS.primary}\n                size={20}\n                style={{ marginHorizontal: 16 }}\n                onPress={() => {\n                  logoutState();\n                  authContext.signOut();\n\n                }}\n              />\n            }}\n            initialRouteName=\"Home\">\n\n            <Stack.Screen name=\"Home\" component={HomeScreen} options={{ title: 'หน้าแรก', }} initialParams={{ userid: loginState.userToken }} />\n            <Stack.Screen name=\"Assessment\" component={AssessmentScreen} options={{ title: 'ปีประเมิน' }} />\n            <Stack.Screen name=\"UserList\" component={UserListScreen} options={{ title: 'รายชื่อ' }} />\n            <Stack.Screen name=\"Questionnaire\" component={Questionnaire} options={{ title: 'แบบประเมิน' }} />\n            <Stack.Screen name=\"VideoWebView\" component={VideoWebViewScreen} options={{ title: 'ดูวิดีโอ' }} />\n          </Stack.Navigator>\n        )\n\n          :\n\n          <RootStackScreen />\n        }\n\n      </NavigationContainer>\n\n    </AuthContext.Provider>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}