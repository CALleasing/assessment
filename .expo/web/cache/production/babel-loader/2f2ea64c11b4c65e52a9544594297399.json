{"ast":null,"code":"import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import{TouchableOpacity}from'react-native-gesture-handler';import{Card}from'react-native-paper';import{FlatList}from'react-native-gesture-handler';import*as Animatable from'react-native-animatable';import moment from'moment';import'moment/locale/th';var AssessmentScreen=function AssessmentScreen(_ref){var navigation=_ref.navigation;var presentYear=new Date();var passedYear=new Date();passedYear.setFullYear(presentYear.getFullYear()-5);console.log(passedYear);var allYear=[];var renderYearList=function renderYearList(_ref2){var navigation=_ref2.navigation;while(presentYear>passedYear){allYear.push(new Date(presentYear));presentYear.setFullYear(presentYear.getFullYear()-1);}var renderItem=function renderItem(_ref3){var item=_ref3.item;return React.createElement(View,{style:{flexDirection:'row',justifyContent:'space-evenly'}},React.createElement(TouchableOpacity,{onPress:function onPress(){navigation.navigate('Questionnaire',{year:moment(item).format('yyyy'),part:1});}},React.createElement(Card,{style:{width:140,marginTop:16,borderRadius:20,elevation:5,backgroundColor:'#E0FFFF'}},React.createElement(Card.Content,null,React.createElement(Text,{style:{fontSize:24,fontStyle:'italic',fontWeight:'bold',alignSelf:'center'}},moment(item).format('yyyy'),\"-1\")))),React.createElement(TouchableOpacity,{onPress:function onPress(){navigation.navigate('Questionnaire',{userId:\"test\",year:moment(item).format('yyyy'),part:2});}},React.createElement(Card,{style:{marginTop:16,width:140,borderRadius:20,elevation:5,backgroundColor:'#FAFAD2'}},React.createElement(Card.Content,null,React.createElement(Text,{style:{fontSize:24,fontStyle:'italic',fontWeight:'bold',alignSelf:'center'}},moment(item).format('yyyy'),\"-2\")))));};return React.createElement(FlatList,{data:allYear,keyExtractor:function keyExtractor(item){return\"\"+item;},renderItem:renderItem});};return React.createElement(Animatable.View,{style:{flex:1},animation:\"fadeIn\"},renderYearList({navigation:navigation}));};var styles=StyleSheet.create({});export default AssessmentScreen;","map":{"version":3,"sources":["/Users/drift/Documents/ReactNative/cal-assessment/src/screens/AssessmentScreen.js"],"names":["React","TouchableOpacity","Card","FlatList","Animatable","moment","AssessmentScreen","navigation","presentYear","Date","passedYear","setFullYear","getFullYear","console","log","allYear","renderYearList","push","renderItem","item","flexDirection","justifyContent","navigate","year","format","part","width","marginTop","borderRadius","elevation","backgroundColor","fontSize","fontStyle","fontWeight","alignSelf","userId","flex","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, SafeAreaView, StyleSheet, ScrollView } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { Card } from 'react-native-paper';\nimport { FlatList } from 'react-native-gesture-handler';\nimport * as Animatable from 'react-native-animatable';\n\nimport moment from 'moment';\nimport 'moment/locale/th';\n\nconst AssessmentScreen = ({ navigation }) => {\n\n    let presentYear = new Date();\n    let passedYear = new Date();\n    passedYear.setFullYear(presentYear.getFullYear() - 5);\n    console.log(passedYear);\n\n    var allYear = [];\n\n    const renderYearList = ({ navigation }) => {\n        while (presentYear > passedYear) {\n            allYear.push(new Date(presentYear));\n            presentYear.setFullYear(presentYear.getFullYear() - 1);\n        }\n\n        const renderItem = ({ item }) => {\n            // if(checkDate != undefined && Object.entries(checkDate).length !== 0){\n            return (\n                <View style={{flexDirection: 'row', justifyContent: 'space-evenly'}}>\n                    <TouchableOpacity\n                        onPress={() => {\n                            navigation.navigate('Questionnaire',\n                            {\n                                // userId: \"test\",\n                                year: moment(item).format('yyyy'),\n                                part: 1\n                            });\n                        }\n                        }>\n                        <Card style={{\n                            width:140,\n                            marginTop: 16,\n                            // borderWidth: 1,\n                            borderRadius: 20,\n                            elevation: 5,\n                            // padding: 16,\n                            backgroundColor: '#E0FFFF'\n                            // borderColor: COLORS.primary\n                            // \n                        }} >\n                            <Card.Content>\n                                <Text style={{\n                                    fontSize: 24,\n                                    fontStyle: 'italic',\n                                    fontWeight: 'bold',\n                                    alignSelf: 'center'\n                                }}>{moment(item).format('yyyy')}-1</Text>\n                            </Card.Content>\n                        </Card>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                        onPress={() => {\n                            navigation.navigate('Questionnaire',\n                            {\n                                userId: \"test\",\n                                year: moment(item).format('yyyy'),\n                                part: 2\n                            });\n                        }\n                        }>\n                        <Card style={{\n                            marginTop: 16,\n                            // borderWidth: 1,\n                            width:140,\n                            borderRadius: 20,\n                            elevation: 5,\n                            // padding: 16,\n                            backgroundColor: '#FAFAD2'\n                            // borderColor: COLORS.primary\n                            // \n                        }} >\n                            <Card.Content>\n                                <Text style={{\n                                    fontSize: 24,\n                                    fontStyle: 'italic',\n                                    fontWeight: 'bold',\n                                    alignSelf: 'center'\n                                }}>{moment(item).format('yyyy')}-2</Text>\n                            </Card.Content>\n                        </Card>\n                    </TouchableOpacity>\n                </View>\n\n            );\n        }\n\n        return (\n            <FlatList\n                data={allYear}\n                keyExtractor={(item) => `${item}`}\n                renderItem={renderItem}\n            // horizontal\n            // showsHorizontalScrollIndicator={false}\n            />\n        );\n    }\n\n    return (\n        <Animatable.View style={{ flex: 1 }}\n        animation='fadeIn'> \n            {renderYearList({ navigation })}\n        </Animatable.View>\n    );\n}\n\nconst styles = StyleSheet.create({\n\n});\n\nexport default AssessmentScreen;"]},"metadata":{},"sourceType":"module"}