{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import FlatList from\"react-native-web/dist/exports/FlatList\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import*as Animatable from'react-native-animatable';import Icon from\"@expo/vector-icons/FontAwesome\";import axiox from'axios';import moment from'moment';import'moment/locale/th';import{MAIN_URL,USER}from\"../constants/variables\";import{Button}from'react-native-paper';import{COLORS}from\"../constants/theme\";var EmployeeStatusScreen=function EmployeeStatusScreen(_ref){var route=_ref.route;var user=route.params.user;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),selected=_useState4[0],setSelected=_useState4[1];var _useState5=useState('1. โน้มน้าวใจให้เขาอยู่ต่อ'),_useState6=_slicedToArray(_useState5,2),answer=_useState6[0],setAnswer=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),reason=_useState8[0],setReason=_useState8[1];var list=[{id:1,question:'1. โน้มน้าวใจให้เขาอยู่ต่อ'},{id:2,question:'2. ไม่แน่ใจ (ปรับทัศนคติใหม่)'},{id:3,question:'3. เฉยๆ (เดี๋ยวหาใหม่ก็ได้)'},{id:4,question:'4. โล่งใจ'}];useEffect(function(){getEmployeeAssessmentByUserId();},[]);var getEmployeeAssessmentByUserId=function getEmployeeAssessmentByUserId(){setLoading(true);console.log(MAIN_URL+'/answer/assessment/users/'+user.userid);axiox.get(MAIN_URL+'/answer/assessment/users/'+user.userid).then(function(res){console.log(\"ALL DATA\",res.data);setAnswer(res.data[0].answer);setReason(res.data[0].reason);switch(res.data[0].answer){case'1. โน้มน้าวใจให้เขาอยู่ต่อ':setSelected(0);break;case'2. ไม่แน่ใจ (ปรับทัศนคติใหม่)':setSelected(1);break;case'3. เฉยๆ (เดี๋ยวหาใหม่ก็ได้)':setSelected(2);break;case'4. โล่งใจ':setSelected(3);break;}setLoading(false);}).catch(function(err){console.log(err);setLoading(false);});};var postAnswer=function postAnswer(_ref2){var dataSend=_ref2.dataSend;console.log();axiox.post(MAIN_URL+'/answer/assessment',dataSend).then(function(res){alert(\"บันทึกข้อมูลสำเร็จ\");}).catch(function(err){console.log(err);alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");});};var renderList=function renderList(_ref3){var item=_ref3.item,index=_ref3.index;return React.createElement(TouchableOpacity,{style:{margin:8},onPress:function onPress(){console.log(index);setSelected(index);setAnswer(item.question);}},selected===index?React.createElement(View,{style:{flexDirection:'row'}},React.createElement(Icon,{name:\"check-circle\",color:COLORS.primary,size:30}),React.createElement(Text,{style:{fontSize:16,alignSelf:'center'}},\" \",item.question)):React.createElement(View,{style:{flexDirection:'row'}},React.createElement(Icon,{name:\"circle\",color:COLORS.primary,size:30}),React.createElement(Text,{style:{fontSize:16,alignSelf:'center'}},\" \",item.question)));};return React.createElement(Animatable.View,{style:{flex:1,padding:20,backgroundColor:'white'},animation:\"fadeIn\"},React.createElement(View,{style:{marginVertical:24}},loading?React.createElement(ActivityIndicator,{style:{position:'absolute',left:0,right:0,top:0,bottom:0,alignItems:'center',justifyContent:'center'},size:\"large\",color:\"#0275d8\"}):React.createElement(FlatList,{data:list,renderItem:renderList,keyExtractor:function keyExtractor(item,index){return\"\"+index;},ListHeaderComponent:React.createElement(Text,{style:{fontSize:18,marginBottom:20}},\"\\u0E2B\\u0E32\\u0E01\",React.createElement(Text,{style:{fontStyle:'italic',fontSize:18,color:'blue'}},' ',\" \",user.title_name,user.name,\" \",user.lastname,React.createElement(Text,{style:{color:'red',fontSize:18}},\" \\u0E25\\u0E32\\u0E2D\\u0E2D\\u0E01\")),' ',\"\\u0E17\\u0E48\\u0E32\\u0E19\\u0E08\\u0E30\\u0E17\\u0E33\\u0E2D\\u0E22\\u0E48\\u0E32\\u0E07\\u0E44\\u0E23?\"),ListFooterComponent:React.createElement(View,null,React.createElement(TextInput,{style:{backgroundColor:'white',marginTop:20,borderWidth:1,padding:10,borderRadius:5,marginVertical:8,height:150},placeholder:\"\\u0E40\\u0E2B\\u0E15\\u0E38\\u0E1C\\u0E25\\u0E40\\u0E1E\\u0E23\\u0E32\\u0E30\\u0E2D\\u0E30\\u0E44\\u0E23\",placeholderTextColor:\"gray\",multiline:true,numberOfLines:6,color:\"blue\",fontSize:16,defaultValue:reason,onChangeText:function onChangeText(text){setReason(text);}}),React.createElement(Button,{style:{backgroundColor:'green',borderRadius:10,marginVertical:16},mode:\"Contained\",onPress:function onPress(){console.log(user);var dataSend={userid:user.userid,name:user.name,lastname:user.lastname,nickname:user.nickname,answer:answer,reason:reason,department:user.department,date:moment().format('yyyy-MM-DD'),manager_id:USER.userid,manager_name:USER.name,manager_lastname:USER.lastname,manager_nickname:USER.nickname};console.log(dataSend);postAnswer({dataSend:dataSend});}},React.createElement(Text,{style:{alignSelf:'center',color:'white'}},\"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\\u0E04\\u0E33\\u0E15\\u0E2D\\u0E1A\")))})));};export default EmployeeStatusScreen;","map":{"version":3,"sources":["/Users/drift/Documents/ReactNative/cal-assessment/src/screens/EmployeeStatusScreen.js"],"names":["React","useState","useEffect","Animatable","Icon","axiox","moment","MAIN_URL","USER","Button","COLORS","EmployeeStatusScreen","route","user","params","loading","setLoading","selected","setSelected","answer","setAnswer","reason","setReason","list","id","question","getEmployeeAssessmentByUserId","console","log","userid","get","then","res","data","catch","err","postAnswer","dataSend","post","alert","renderList","item","index","margin","flexDirection","primary","fontSize","alignSelf","flex","padding","backgroundColor","marginVertical","position","left","right","top","bottom","alignItems","justifyContent","marginBottom","fontStyle","color","title_name","name","lastname","marginTop","borderWidth","borderRadius","height","text","nickname","department","date","format","manager_id","manager_name","manager_lastname","manager_nickname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, FlatList, ActivityIndicator, TouchableOpacity } from 'react-native';\nimport * as Animatable from 'react-native-animatable';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nimport axiox from 'axios';\nimport moment from 'moment';\nimport 'moment/locale/th';\n\nimport { MAIN_URL, USER } from '../constants/variables';\nimport { Button } from 'react-native-paper';\nimport { COLORS } from '../constants/theme';\n\nconst EmployeeStatusScreen = ({ route }) => {\n\n    let user = route.params.user;\n    const [loading, setLoading] = useState(false);\n    // console.log(user)\n    const [selected, setSelected] = useState(0);\n    // var selectIndex = 0;\n    const [answer, setAnswer] = useState('1. โน้มน้าวใจให้เขาอยู่ต่อ');\n    const [reason, setReason] = useState('');\n    const list = [\n        {\n            id: 1,\n            question: '1. โน้มน้าวใจให้เขาอยู่ต่อ'\n        },\n        {\n            id: 2,\n            question: '2. ไม่แน่ใจ (ปรับทัศนคติใหม่)'\n        },\n        {\n            id: 3,\n            question: '3. เฉยๆ (เดี๋ยวหาใหม่ก็ได้)'\n        },\n        {\n            id: 4,\n            question: '4. โล่งใจ'\n        }\n    ]\n\n    useEffect(() => {\n        getEmployeeAssessmentByUserId();\n    }, []);\n\n    const getEmployeeAssessmentByUserId = () => {\n        setLoading(true);\n        console.log(MAIN_URL + '/answer/assessment/users/' + user.userid)\n        axiox.get(MAIN_URL + '/answer/assessment/users/' + user.userid)\n            // console.log('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.questionNumber + '/Answer/officer/' + userId, answer)\n            .then(res => {\n                console.log(\"ALL DATA\", res.data);\n                setAnswer(res.data[0].answer);\n                setReason(res.data[0].reason);\n                switch (res.data[0].answer) {\n                    case '1. โน้มน้าวใจให้เขาอยู่ต่อ': setSelected(0);\n                        break;\n                    case '2. ไม่แน่ใจ (ปรับทัศนคติใหม่)': setSelected(1);\n                        break;\n                    case '3. เฉยๆ (เดี๋ยวหาใหม่ก็ได้)': setSelected(2);\n                        break;\n                    case '4. โล่งใจ': setSelected(3);\n                        break;\n                }\n                // console.log(selectIndex);\n                // alert(\"บันทึกข้อมูลสำเร็จ\");\n                setLoading(false);\n            })\n            .catch(err => {\n                console.log(err)\n                // alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                setLoading(false);\n\n            });\n    };\n\n    const postAnswer = ({ dataSend }) => {\n        console.log()\n        axiox.post(MAIN_URL + '/answer/assessment', dataSend)\n            // console.log('https://program-api.herokuapp.com/' + year + '/' + part + '/' + answer.questionNumber + '/Answer/officer/' + userId, answer)\n            .then(res => {\n                // console.log(res.data);\n                alert(\"บันทึกข้อมูลสำเร็จ\");\n                // setLoading(false);\n            })\n            .catch(err => {\n                console.log(err)\n                alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                // setLoading(false);\n\n            });\n    }\n\n    const renderList = ({ item, index }) => {\n        return (\n            <TouchableOpacity\n                style={{ margin: 8 }}\n                onPress={() => {\n                    console.log(index);\n                    setSelected(index);\n                    setAnswer(item.question);\n                }}>\n                {selected === index ?\n                    <View style={{ flexDirection: 'row' }}>\n                        <Icon name='check-circle'\n                            color={COLORS.primary}\n                            size={30} />\n                        <Text style={{ fontSize: 16, alignSelf: 'center' }}> {item.question}</Text>\n                    </View>\n                    :\n                    <View style={{ flexDirection: 'row' }}>\n                        <Icon name='circle'\n                            color={COLORS.primary}\n                            size={30} />\n                        <Text style={{ fontSize: 16, alignSelf: 'center' }}> {item.question}</Text>\n                    </View>\n                }\n            </TouchableOpacity>\n        )\n    }\n\n    return (\n\n        <Animatable.View\n            style={{ flex: 1, padding: 20, backgroundColor: 'white' }}\n            animation='fadeIn'>\n\n            <View style={{ marginVertical: 24 }}>\n                {loading ?\n                    <ActivityIndicator style={{\n                        position: 'absolute',\n                        left: 0,\n                        right: 0,\n                        top: 0,\n                        bottom: 0,\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                    }} size=\"large\" color=\"#0275d8\" />\n                    :\n                    <FlatList\n                        data={list}\n                        renderItem={renderList}\n                        // numColumns={2}\n                        keyExtractor={(item, index) => `${index}`}\n                        ListHeaderComponent={\n                            <Text style={{ fontSize: 18, marginBottom: 20 }}>หาก\n                                <Text style={{ fontStyle: 'italic', fontSize: 18, color: 'blue' }}>\n                                    {' '} {user.title_name}{user.name} {user.lastname}\n                                    <Text style={{ color: 'red', fontSize: 18 }}> ลาออก</Text>\n                                </Text>\n                                {' '}ท่านจะทำอย่างไร?\n                            </Text>\n                        }\n                        ListFooterComponent={\n                            <View>\n                                <TextInput\n                                    style={{ backgroundColor: 'white', marginTop: 20, borderWidth: 1, padding: 10, borderRadius: 5, marginVertical: 8, height: 150 }}\n                                    // textContentType='telephoneNumber'\n                                    placeholder=\"เหตุผลเพราะอะไร\"\n                                    placeholderTextColor=\"gray\"\n                                    multiline\n                                    numberOfLines={6}\n                                    color='blue'\n                                    fontSize={16}\n                                    defaultValue={reason}\n                                    onChangeText={text => {\n                                        setReason(text)\n                                    }}\n                                // defaultValue={item.answer}\n                                />\n                                <Button\n                                    style={{\n                                        backgroundColor: 'green',\n                                        borderRadius: 10,\n                                        marginVertical: 16\n                                    }}\n                                    mode=\"Contained\"\n                                    onPress={() => {\n                                        console.log(user);\n                                        const dataSend = {\n                                            userid: user.userid,\n                                            name: user.name,\n                                            lastname: user.lastname,\n                                            nickname: user.nickname,\n                                            answer: answer,\n                                            reason: reason,\n                                            department: user.department,\n                                            date: moment().format('yyyy-MM-DD'),\n                                            manager_id: USER.userid,\n                                            manager_name: USER.name,\n                                            manager_lastname: USER.lastname,\n                                            manager_nickname: USER.nickname\n                                        }\n                                        console.log(dataSend)\n                                        // console.log(\"year\", year)\n                                        // console.log(\"part\", part)\n                                        // console.log(\"number\", item.number)\n                                        // console.log(\"userid\", USER.userid)\n                                        postAnswer({ dataSend });\n                                    }}\n                                >\n                                    <Text style={{ alignSelf: 'center', color: 'white' }}>บันทึกคำตอบ</Text>\n                                </Button>\n                            </View>\n\n                        }\n                    />\n                }\n            </View>\n        </Animatable.View>\n\n    )\n}\n\nexport default EmployeeStatusScreen;"]},"metadata":{},"sourceType":"module"}