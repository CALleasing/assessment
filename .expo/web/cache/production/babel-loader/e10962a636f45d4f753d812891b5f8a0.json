{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];}if(s!=null&&typeof Object.getOwnPropertySymbols===\"function\")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;};import*as React from\"react\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Switch from\"react-native-web/dist/exports/Switch\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import{PlatformColor}from\"react-native-web/dist/index\";import{ViewPropTypes}from\"react-native-web/dist/index\";import useTheme from\"./useTheme\";import PropTypes from\"prop-types\";var DialogSwitch=function DialogSwitch(props){var label=props.label,nodeProps=__rest(props,[\"label\"]);var _useTheme=useTheme(buildStyles),styles=_useTheme.styles;return React.createElement(View,{style:styles.switchWrapper},React.createElement(Text,{style:styles.label},label),React.createElement(Switch,_extends({},nodeProps)));};DialogSwitch.propTypes=_extends(_extends({},ViewPropTypes),{label:PropTypes.string});DialogSwitch.displayName=\"DialogSwitch\";var buildStyles=function buildStyles(isDark){return StyleSheet.create({switchWrapper:Platform.select({ios:{flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\",marginHorizontal:20,marginBottom:14,paddingHorizontal:8},android:{flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\",marginHorizontal:10,marginBottom:20},default:{}}),label:Platform.select({ios:{flex:1,paddingRight:8,fontSize:13,color:PlatformColor(\"label\")},android:{flex:1,paddingRight:8,fontSize:16,color:PlatformColor(\"@android:color/\"+(isDark?\"primary_text_dark\":\"primary_text_light\"))},default:{}})});};export default DialogSwitch;","map":{"version":3,"sources":["/Users/drift/Documents/ReactNative/cal-assessment/node_modules/react-native-dialog/lib/Switch.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","PlatformColor","ViewPropTypes","useTheme","PropTypes","DialogSwitch","props","label","nodeProps","buildStyles","styles","createElement","View","style","switchWrapper","Text","Switch","propTypes","string","displayName","isDark","StyleSheet","create","Platform","select","ios","flexDirection","justifyContent","alignItems","marginHorizontal","marginBottom","paddingHorizontal","android","default","flex","paddingRight","fontSize","color"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { Platform, StyleSheet, Switch, Text, View, PlatformColor, ViewPropTypes, } from \"react-native\";\nimport useTheme from \"./useTheme\";\nimport PropTypes from \"prop-types\";\nconst DialogSwitch = (props) => {\n    const { label } = props, nodeProps = __rest(props, [\"label\"]);\n    const { styles } = useTheme(buildStyles);\n    return (React.createElement(View, { style: styles.switchWrapper },\n        React.createElement(Text, { style: styles.label }, label),\n        React.createElement(Switch, Object.assign({}, nodeProps))));\n};\nDialogSwitch.propTypes = Object.assign(Object.assign({}, ViewPropTypes), { label: PropTypes.string });\nDialogSwitch.displayName = \"DialogSwitch\";\nconst buildStyles = (isDark) => StyleSheet.create({\n    switchWrapper: Platform.select({\n        ios: {\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            marginHorizontal: 20,\n            marginBottom: 14,\n            paddingHorizontal: 8,\n        },\n        android: {\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            marginHorizontal: 10,\n            marginBottom: 20,\n        },\n        default: {},\n    }),\n    label: Platform.select({\n        ios: {\n            flex: 1,\n            paddingRight: 8,\n            fontSize: 13,\n            color: PlatformColor(\"label\"),\n        },\n        android: {\n            flex: 1,\n            paddingRight: 8,\n            fontSize: 16,\n            color: PlatformColor(`@android:color/${isDark ? \"primary_text_dark\" : \"primary_text_light\"}`),\n        },\n        default: {},\n    }),\n});\nexport default DialogSwitch;\n"]},"metadata":{},"sourceType":"module"}