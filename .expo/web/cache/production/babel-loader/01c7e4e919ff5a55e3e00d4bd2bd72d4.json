{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect}from'react';import Text from\"react-native-web/dist/exports/Text\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import TextInput from\"react-native-web/dist/exports/TextInput\";import View from\"react-native-web/dist/exports/View\";import FlatList from\"react-native-web/dist/exports/FlatList\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import{Button}from'react-native-paper';import{TouchableOpacity}from'react-native-gesture-handler';import Icon from\"@expo/vector-icons/FontAwesome\";import axiox from'axios';import{MAIN_URL}from\"../constants/variables\";var CreateQuestionScreen=function CreateQuestionScreen(_ref){var route=_ref.route;var _route$params=route.params,type=_route$params.type,year=_route$params.year,part=_route$params.part;console.log(route.params);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),allQuestion=_useState2[0],setAllQuestion=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setLoading=_useState4[1];var setNumber='';var setQuestion='';var deleteNumber='';var getAllQuestion=function getAllQuestion(){setLoading(true);axiox.get(MAIN_URL+'/question/'+type+'/'+year+'/'+part).then(function(res){setAllQuestion(res.data);setLoading(false);}).catch(function(err){console.log(err);setLoading(false);});};var postQuestion=function postQuestion(){setLoading(true);axiox.post(MAIN_URL+'/question/'+type+'/'+year+'/'+part+'/'+setNumber,setQuestion).then(function(res){console.log(res.data);getAllQuestion();alert(\"บันทึกข้อมูลสำเร็จ\");setLoading(false);}).catch(function(err){console.log(err);alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");setLoading(false);});};var deleteQuestion=function deleteQuestion(){setLoading(true);axiox.delete(MAIN_URL+'/question/'+type+'/'+year+'/'+part+'/'+deleteNumber).then(function(res){console.log(res.data);getAllQuestion();alert(\"บันทึกข้อมูลสำเร็จ\");setLoading(false);}).catch(function(err){console.log(err);alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");setLoading(false);});};useEffect(function(){setLoading(true);getAllQuestion();},[]);var renderItem=function renderItem(_ref2){var item=_ref2.item;return React.createElement(View,{style:{flexDirection:'row',borderBottomWidth:0.5,padding:8,margin:4}},React.createElement(Text,{style:{flex:1,marginRight:6,fontSize:18,fontWeight:'bold'}},\"\\u0E02\\u0E49\\u0E2D \",item.number+\". \\r\\n\"+item.qt),React.createElement(Icon,{name:\"trash\",color:\"red\",size:20,style:{padding:6,flex:0.05,alignSelf:'center'},onPress:function onPress(){deleteNumber=item.number;deleteQuestion();}}));};return isLoading?React.createElement(ActivityIndicator,{style:{position:'absolute',left:0,right:0,top:0,bottom:0,alignItems:'center',justifyContent:'center'},size:\"large\",color:\"#0275d8\"}):React.createElement(SafeAreaView,{style:{flex:1}},React.createElement(FlatList,{data:allQuestion,keyExtractor:function keyExtractor(item,index){return\"\"+index;},renderItem:renderItem}),React.createElement(View,{style:{backgroundColor:'white',padding:6,borderWidth:1}},React.createElement(TextInput,{style:{borderWidth:1,borderRadius:5,padding:10,marginVertical:8},placeholder:\"\\u0E02\\u0E49\\u0E2D (\\u0E1E\\u0E34\\u0E21\\u0E1E\\u0E4C\\u0E40\\u0E09\\u0E1E\\u0E32\\u0E30\\u0E15\\u0E31\\u0E27\\u0E40\\u0E25\\u0E02)\",placeholderTextColor:\"gray\",multiline:true,color:\"blue\",fontSize:16,onChangeText:function onChangeText(number){setNumber=number;}}),React.createElement(TextInput,{style:{borderWidth:1,borderRadius:5,padding:10,marginVertical:8,height:100},placeholder:\"\\u0E04\\u0E33\\u0E16\\u0E32\\u0E21\",placeholderTextColor:\"gray\",multiline:true,numberOfLines:6,color:\"blue\",fontSize:16,onChangeText:function onChangeText(question){setQuestion={question:question};}}),React.createElement(Button,{style:{backgroundColor:'green',borderRadius:10,marginVertical:8},mode:\"Contained\",onPress:function onPress(){postQuestion();}},React.createElement(Text,{style:{alignSelf:'center',color:'white'}},\"\\u0E40\\u0E1E\\u0E34\\u0E48\\u0E21\\u0E04\\u0E33\\u0E16\\u0E32\\u0E21\"))));};export default CreateQuestionScreen;","map":{"version":3,"sources":["/Users/drift/Documents/ReactNative/cal-assessment/src/screens/CreateQuestionScreen.js"],"names":["React","useState","useEffect","Button","TouchableOpacity","Icon","axiox","MAIN_URL","CreateQuestionScreen","route","params","type","year","part","console","log","allQuestion","setAllQuestion","isLoading","setLoading","setNumber","setQuestion","deleteNumber","getAllQuestion","get","then","res","data","catch","err","postQuestion","post","alert","deleteQuestion","delete","renderItem","item","flexDirection","borderBottomWidth","padding","margin","flex","marginRight","fontSize","fontWeight","number","qt","alignSelf","position","left","right","top","bottom","alignItems","justifyContent","index","backgroundColor","borderWidth","borderRadius","marginVertical","height","question","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, SafeAreaView, TextInput, View, FlatList, ActivityIndicator } from 'react-native';\nimport { Button } from 'react-native-paper'\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport axiox from 'axios';\nimport { MAIN_URL } from '../constants/variables';\n\nconst CreateQuestionScreen = ({ route }) => {\n    const { type, year, part } = route.params;\n    console.log(route.params);\n    const [allQuestion, setAllQuestion] = useState([]);\n    const [isLoading, setLoading] = useState(false);\n    var setNumber = '';\n    var setQuestion = '';\n    var deleteNumber = '';\n\n    const getAllQuestion = () => {\n        setLoading(true);\n        axiox.get(MAIN_URL + '/question/' + type + '/' + year + '/' + part)\n            .then(res => {\n                setAllQuestion(res.data);\n                setLoading(false);\n                // setArrayholder(res.data)\n                // console.log(users);\n            })\n            .catch(err => {\n                console.log(err)\n                setLoading(false);\n            });\n    };\n\n    const postQuestion = () => {\n        // console.log(setNumber);\n        // console.log(setQuestion);\n        setLoading(true);\n        axiox.post(MAIN_URL + '/question/' + type + '/' + year + '/' + part + '/' + setNumber, setQuestion)\n            .then(res => {\n                console.log(res.data);\n                getAllQuestion();\n\n                alert(\"บันทึกข้อมูลสำเร็จ\");\n                setLoading(false);\n                // setNumber = '';\n                // setQuestion = '';\n            })\n            .catch(err => {\n                console.log(err);\n\n                alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                setLoading(false);\n            });\n    };\n\n    const deleteQuestion = () => {\n        // console.log(setNumber);\n        // console.log(setQuestion);\n        setLoading(true);\n        axiox.delete(MAIN_URL + '/question/' + type + '/' + year + '/' + part + '/' + deleteNumber)\n            .then(res => {\n                console.log(res.data);\n                getAllQuestion();\n\n                alert(\"บันทึกข้อมูลสำเร็จ\");\n                setLoading(false);\n                // setNumber = '';\n                // setQuestion = '';\n            })\n            .catch(err => {\n                console.log(err);\n\n                alert(\"บันทึกข้อมูลล้มเหลว กรุณาลองใหม่\");\n                setLoading(false);\n            });\n    }\n\n    useEffect(() => {\n        setLoading(true);\n        getAllQuestion();\n    }, []);\n\n    const renderItem = ({ item }) => {\n        // console.log(item);\n        return (\n\n            <View style={{ flexDirection: 'row', borderBottomWidth: 0.5, padding: 8, margin: 4 }}>\n\n                <Text style={{ flex: 1, marginRight: 6, fontSize: 18, fontWeight: 'bold' }}>\n                    ข้อ {item.number + \". \\r\\n\" + item.qt}\n                </Text>\n\n                <Icon\n                    name='trash'\n                    color='red'\n                    size={20}\n                    style={{ padding: 6, flex: 0.05, alignSelf: 'center' }}\n                    onPress={() => {\n\n                        deleteNumber = item.number;\n                        deleteQuestion();\n                    }}\n                />\n            </View>\n\n        );\n    };\n\n    return (\n        isLoading ?\n\n            <ActivityIndicator style={{\n\n                position: 'absolute',\n                left: 0,\n                right: 0,\n                top: 0,\n                bottom: 0,\n                alignItems: 'center',\n                justifyContent: 'center'\n            }} size=\"large\" color=\"#0275d8\" />\n\n            :\n\n            <SafeAreaView style={{ flex: 1 }}>\n                <FlatList\n                    data={allQuestion}\n                    keyExtractor={(item, index) => `${index}`}\n                    // ItemSeparatorComponent={itemSeparator}\n                    // shouldComponentUpdate={false}\n                    renderItem={renderItem}\n                />\n\n                <View style={{ backgroundColor: 'white', padding: 6, borderWidth: 1, }}>\n                    <TextInput\n                        style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, }}\n                        // textContentType='telephoneNumber'\n                        placeholder=\"ข้อ (พิมพ์เฉพาะตัวเลข)\"\n                        placeholderTextColor=\"gray\"\n                        multiline\n                        // numberOfLines={6}\n                        color='blue'\n                        fontSize={16}\n                        // defaultValue={''}\n                        onChangeText={number => {\n                            setNumber = number;\n                        }}\n                    />\n                    <TextInput\n                        style={{ borderWidth: 1, borderRadius: 5, padding: 10, marginVertical: 8, height: 100 }}\n                        // textContentType='telephoneNumber'\n                        placeholder=\"คำถาม\"\n                        placeholderTextColor=\"gray\"\n                        multiline\n                        numberOfLines={6}\n                        color='blue'\n                        fontSize={16}\n                        // defaultValue={''}\n                        onChangeText={question => {\n                            setQuestion = {\n                                question: question\n                            }\n                        }}\n                    />\n                    <Button\n                        style={{\n                            backgroundColor: 'green',\n                            borderRadius: 10,\n                            marginVertical: 8\n                        }}\n                        mode=\"Contained\"\n                        onPress={() => {\n                            postQuestion();\n                        }}>\n                        <Text style={{ alignSelf: 'center', color: 'white' }}>เพิ่มคำถาม</Text>\n\n                    </Button>\n\n                </View>\n\n            </SafeAreaView>\n    );\n};\n\nexport default CreateQuestionScreen;"]},"metadata":{},"sourceType":"module"}