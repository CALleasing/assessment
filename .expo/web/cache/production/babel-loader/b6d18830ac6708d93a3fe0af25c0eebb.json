{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import Text from\"react-native-web/dist/exports/Text\";import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import BackHandler from\"react-native-web/dist/exports/BackHandler\";import Modal from\"react-native-web/dist/exports/Modal\";import Platform from\"react-native-web/dist/exports/Platform\";import PropTypes from'prop-types';import styles from\"./styles\";var HwBackHandler=BackHandler;var HW_BACK_EVENT='hardwareBackPress';var OS=Platform.OS;var AwesomeAlert=function(_Component){_inherits(AwesomeAlert,_Component);var _super=_createSuper(AwesomeAlert);function AwesomeAlert(props){var _this;_classCallCheck(this,AwesomeAlert);_this=_super.call(this,props);_this._springShow=function(fromConstructor){var _this$props$useNative=_this.props.useNativeDriver,useNativeDriver=_this$props$useNative===void 0?false:_this$props$useNative;_this._toggleAlert(fromConstructor);Animated.spring(_this.springValue,{toValue:1,bounciness:10,useNativeDriver:useNativeDriver}).start();};_this._springHide=function(){var _this$props$useNative2=_this.props.useNativeDriver,useNativeDriver=_this$props$useNative2===void 0?false:_this$props$useNative2;if(_this.state.showSelf===true){Animated.spring(_this.springValue,{toValue:0,tension:10,useNativeDriver:useNativeDriver}).start();setTimeout(function(){_this._toggleAlert();_this._onDismiss();},70);}};_this._toggleAlert=function(fromConstructor){if(fromConstructor)_this.state={showSelf:true};else _this.setState({showSelf:!_this.state.showSelf});};_this._handleHwBackEvent=function(){var closeOnHardwareBackPress=_this.props.closeOnHardwareBackPress;if(_this.state.showSelf&&closeOnHardwareBackPress){_this._springHide();return true;}else if(!closeOnHardwareBackPress&&_this.state.showSelf){return true;}return false;};_this._onTapOutside=function(){var closeOnTouchOutside=_this.props.closeOnTouchOutside;if(closeOnTouchOutside)_this._springHide();};_this._onDismiss=function(){var onDismiss=_this.props.onDismiss;onDismiss&&onDismiss();};_this._renderButton=function(data){var testID=data.testID,text=data.text,backgroundColor=data.backgroundColor,buttonStyle=data.buttonStyle,buttonTextStyle=data.buttonTextStyle,onPress=data.onPress;return React.createElement(TouchableOpacity,{testID:testID,onPress:onPress},React.createElement(View,{style:[styles.button,{backgroundColor:backgroundColor},buttonStyle]},React.createElement(Text,{style:[styles.buttonText,buttonTextStyle]},text)));};_this._renderAlert=function(){var animation={transform:[{scale:_this.springValue}]};var showProgress=_this.props.showProgress;var _this$props=_this.props,title=_this$props.title,message=_this$props.message,_this$props$customVie=_this$props.customView,customView=_this$props$customVie===void 0?null:_this$props$customVie;var _this$props2=_this.props,showCancelButton=_this$props2.showCancelButton,cancelText=_this$props2.cancelText,cancelButtonColor=_this$props2.cancelButtonColor,cancelButtonStyle=_this$props2.cancelButtonStyle,cancelButtonTextStyle=_this$props2.cancelButtonTextStyle,onCancelPressed=_this$props2.onCancelPressed,cancelButtonTestID=_this$props2.cancelButtonTestID;var _this$props3=_this.props,showConfirmButton=_this$props3.showConfirmButton,confirmText=_this$props3.confirmText,confirmButtonColor=_this$props3.confirmButtonColor,confirmButtonStyle=_this$props3.confirmButtonStyle,confirmButtonTextStyle=_this$props3.confirmButtonTextStyle,onConfirmPressed=_this$props3.onConfirmPressed,confirmButtonTestID=_this$props3.confirmButtonTestID;var _this$props4=_this.props,alertContainerStyle=_this$props4.alertContainerStyle,overlayStyle=_this$props4.overlayStyle,progressSize=_this$props4.progressSize,progressColor=_this$props4.progressColor,contentContainerStyle=_this$props4.contentContainerStyle,contentStyle=_this$props4.contentStyle,titleStyle=_this$props4.titleStyle,messageStyle=_this$props4.messageStyle,actionContainerStyle=_this$props4.actionContainerStyle;var cancelButtonData={testID:cancelButtonTestID,text:cancelText,backgroundColor:cancelButtonColor,buttonStyle:cancelButtonStyle,buttonTextStyle:cancelButtonTextStyle,onPress:onCancelPressed};var confirmButtonData={testID:confirmButtonTestID,text:confirmText,backgroundColor:confirmButtonColor,buttonStyle:confirmButtonStyle,buttonTextStyle:confirmButtonTextStyle,onPress:onConfirmPressed};return React.createElement(View,{style:[styles.container,alertContainerStyle]},React.createElement(TouchableWithoutFeedback,{onPress:_this._onTapOutside},React.createElement(View,{style:[styles.overlay,overlayStyle]})),React.createElement(Animated.View,{style:[styles.contentContainer,animation,contentContainerStyle]},React.createElement(View,{style:[styles.content,contentStyle]},showProgress?React.createElement(ActivityIndicator,{size:progressSize,color:progressColor}):null,title?React.createElement(Text,{style:[styles.title,titleStyle]},title):null,message?React.createElement(Text,{style:[styles.message,messageStyle]},message):null,customView),React.createElement(View,{style:[styles.action,actionContainerStyle]},showCancelButton?_this._renderButton(cancelButtonData):null,showConfirmButton?_this._renderButton(confirmButtonData):null)));};var show=_this.props.show;_this.springValue=new Animated.Value(props.animatedValue);_this.state={showSelf:false};if(show)_this._springShow(true);return _this;}_createClass(AwesomeAlert,[{key:\"componentDidMount\",value:function componentDidMount(){HwBackHandler.addEventListener(HW_BACK_EVENT,this._handleHwBackEvent);}},{key:\"render\",value:function render(){var _this2=this;var _this$state=this.state,show=_this$state.show,showSelf=_this$state.showSelf;var _this$props5=this.props,_this$props5$modalPro=_this$props5.modalProps,modalProps=_this$props5$modalPro===void 0?{}:_this$props5$modalPro,closeOnHardwareBackPress=_this$props5.closeOnHardwareBackPress;var wrapInModal=OS==='android'||OS==='ios';return showSelf?wrapInModal?React.createElement(Modal,_extends({animationType:\"none\",transparent:true,visible:show,onRequestClose:function onRequestClose(){if(showSelf&&closeOnHardwareBackPress){_this2._springHide();}}},modalProps),this._renderAlert()):this._renderAlert():null;}},{key:\"UNSAFE_componentWillReceiveProps\",value:function UNSAFE_componentWillReceiveProps(nextProps){var show=nextProps.show;var showSelf=this.state.showSelf;if(show&&!showSelf)this._springShow();else if(show===false&&showSelf)this._springHide();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){HwBackHandler.removeEventListener(HW_BACK_EVENT,this._handleHwBackEvent);}}]);return AwesomeAlert;}(Component);export{AwesomeAlert as default};AwesomeAlert.propTypes={show:PropTypes.bool,animatedValue:PropTypes.number,useNativeDriver:PropTypes.bool,showProgress:PropTypes.bool,title:PropTypes.string,message:PropTypes.string,closeOnTouchOutside:PropTypes.bool,closeOnHardwareBackPress:PropTypes.bool,showCancelButton:PropTypes.bool,showConfirmButton:PropTypes.bool,cancelText:PropTypes.string,confirmText:PropTypes.string,cancelButtonColor:PropTypes.string,confirmButtonColor:PropTypes.string,onCancelPressed:PropTypes.func,onConfirmPressed:PropTypes.func,customView:PropTypes.oneOfType([PropTypes.element,PropTypes.node,PropTypes.func]),modalProps:PropTypes.object,cancelButtonTestID:PropTypes.string,confirmButtonTestID:PropTypes.string};AwesomeAlert.defaultProps={show:false,animatedValue:0.3,useNativeDriver:false,showProgress:false,closeOnTouchOutside:true,closeOnHardwareBackPress:true,showCancelButton:false,showConfirmButton:false,cancelText:'Cancel',confirmText:'Confirm',cancelButtonColor:'#D0D0D0',confirmButtonColor:'#AEDEF4',customView:null,modalProps:{},cancelButtonTestID:'awesome-alert-cancel-btn',confirmButtonTestID:'awesome-alert-confirm-btn'};","map":{"version":3,"sources":["/Users/drift/Documents/ReactNative/cal-assessment/node_modules/react-native-awesome-alerts/src/AwesomeAlert.js"],"names":["React","Component","PropTypes","styles","HwBackHandler","BackHandler","HW_BACK_EVENT","OS","Platform","AwesomeAlert","props","_springShow","fromConstructor","useNativeDriver","_toggleAlert","Animated","spring","springValue","toValue","bounciness","start","_springHide","state","showSelf","tension","setTimeout","_onDismiss","setState","_handleHwBackEvent","closeOnHardwareBackPress","_onTapOutside","closeOnTouchOutside","onDismiss","_renderButton","data","testID","text","backgroundColor","buttonStyle","buttonTextStyle","onPress","button","buttonText","_renderAlert","animation","transform","scale","showProgress","title","message","customView","showCancelButton","cancelText","cancelButtonColor","cancelButtonStyle","cancelButtonTextStyle","onCancelPressed","cancelButtonTestID","showConfirmButton","confirmText","confirmButtonColor","confirmButtonStyle","confirmButtonTextStyle","onConfirmPressed","confirmButtonTestID","alertContainerStyle","overlayStyle","progressSize","progressColor","contentContainerStyle","contentStyle","titleStyle","messageStyle","actionContainerStyle","cancelButtonData","confirmButtonData","container","overlay","contentContainer","content","action","show","Value","animatedValue","addEventListener","modalProps","wrapInModal","nextProps","removeEventListener","propTypes","bool","number","string","func","oneOfType","element","node","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Text,\n  Animated,\n  View,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  ActivityIndicator,\n  BackHandler,\n  Modal,\n  Platform,\n} from 'react-native';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './styles';\n\nconst HwBackHandler = BackHandler;\nconst HW_BACK_EVENT = 'hardwareBackPress';\n\nconst { OS } = Platform;\n\nexport default class AwesomeAlert extends Component {\n  constructor(props) {\n    super(props);\n    const { show } = this.props;\n    this.springValue = new Animated.Value(props.animatedValue);\n\n    this.state = {\n      showSelf: false,\n    };\n\n    if (show) this._springShow(true);\n  }\n\n  componentDidMount() {\n    HwBackHandler.addEventListener(HW_BACK_EVENT, this._handleHwBackEvent);\n  }\n\n  _springShow = (fromConstructor) => {\n    const { useNativeDriver = false } = this.props;\n\n    this._toggleAlert(fromConstructor);\n    Animated.spring(this.springValue, {\n      toValue: 1,\n      bounciness: 10,\n      useNativeDriver,\n    }).start();\n  };\n\n  _springHide = () => {\n    const { useNativeDriver = false } = this.props;\n\n    if (this.state.showSelf === true) {\n      Animated.spring(this.springValue, {\n        toValue: 0,\n        tension: 10,\n        useNativeDriver,\n      }).start();\n\n      setTimeout(() => {\n        this._toggleAlert();\n        this._onDismiss();\n      }, 70);\n    }\n  };\n\n  _toggleAlert = (fromConstructor) => {\n    if (fromConstructor) this.state = { showSelf: true };\n    else this.setState({ showSelf: !this.state.showSelf });\n  };\n\n  _handleHwBackEvent = () => {\n    const { closeOnHardwareBackPress } = this.props;\n    if (this.state.showSelf && closeOnHardwareBackPress) {\n      this._springHide();\n      return true;\n    } else if (!closeOnHardwareBackPress && this.state.showSelf) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _onTapOutside = () => {\n    const { closeOnTouchOutside } = this.props;\n    if (closeOnTouchOutside) this._springHide();\n  };\n\n  _onDismiss = () => {\n    const { onDismiss } = this.props;\n    onDismiss && onDismiss();\n  };\n\n  _renderButton = (data) => {\n    const {\n      testID,\n      text,\n      backgroundColor,\n      buttonStyle,\n      buttonTextStyle,\n      onPress,\n    } = data;\n\n    return (\n      <TouchableOpacity testID={testID} onPress={onPress}>\n        <View style={[styles.button, { backgroundColor }, buttonStyle]}>\n          <Text style={[styles.buttonText, buttonTextStyle]}>{text}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  _renderAlert = () => {\n    const animation = { transform: [{ scale: this.springValue }] };\n\n    const { showProgress } = this.props;\n    const { title, message, customView = null } = this.props;\n\n    const {\n      showCancelButton,\n      cancelText,\n      cancelButtonColor,\n      cancelButtonStyle,\n      cancelButtonTextStyle,\n      onCancelPressed,\n      cancelButtonTestID\n    } = this.props;\n\n    const {\n      showConfirmButton,\n      confirmText,\n      confirmButtonColor,\n      confirmButtonStyle,\n      confirmButtonTextStyle,\n      onConfirmPressed,\n      confirmButtonTestID\n    } = this.props;\n\n    const {\n      alertContainerStyle,\n      overlayStyle,\n      progressSize,\n      progressColor,\n      contentContainerStyle,\n      contentStyle,\n      titleStyle,\n      messageStyle,\n      actionContainerStyle,\n    } = this.props;\n\n    const cancelButtonData = {\n      testID: cancelButtonTestID,\n      text: cancelText,\n      backgroundColor: cancelButtonColor,\n      buttonStyle: cancelButtonStyle,\n      buttonTextStyle: cancelButtonTextStyle,\n      onPress: onCancelPressed,\n    };\n\n    const confirmButtonData = {\n      testID: confirmButtonTestID,\n      text: confirmText,\n      backgroundColor: confirmButtonColor,\n      buttonStyle: confirmButtonStyle,\n      buttonTextStyle: confirmButtonTextStyle,\n      onPress: onConfirmPressed,\n    };\n\n    return (\n      <View style={[styles.container, alertContainerStyle]}>\n        <TouchableWithoutFeedback onPress={this._onTapOutside}>\n          <View style={[styles.overlay, overlayStyle]} />\n        </TouchableWithoutFeedback>\n        <Animated.View\n          style={[styles.contentContainer, animation, contentContainerStyle]}\n        >\n          <View style={[styles.content, contentStyle]}>\n            {showProgress ? (\n              <ActivityIndicator size={progressSize} color={progressColor} />\n            ) : null}\n            {title ? (\n              <Text style={[styles.title, titleStyle]}>{title}</Text>\n            ) : null}\n            {message ? (\n              <Text style={[styles.message, messageStyle]}>{message}</Text>\n            ) : null}\n            {customView}\n          </View>\n          <View style={[styles.action, actionContainerStyle]}>\n            {showCancelButton ? this._renderButton(cancelButtonData) : null}\n            {showConfirmButton ? this._renderButton(confirmButtonData) : null}\n          </View>\n        </Animated.View>\n      </View>\n    );\n  };\n\n  render() {\n    const { show, showSelf } = this.state;\n    const { modalProps = {}, closeOnHardwareBackPress } = this.props;\n\n    const wrapInModal = OS === 'android' || OS === 'ios';\n\n    return showSelf ?\n      wrapInModal ? (\n        <Modal\n          animationType=\"none\"\n          transparent={true}\n          visible={show}\n          onRequestClose={() => {\n            if (showSelf && closeOnHardwareBackPress) {\n              this._springHide();\n            }\n          }}\n          {...modalProps}\n        >\n          {this._renderAlert()}\n        </Modal>\n      ) : this._renderAlert()\n    : null;\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { show } = nextProps;\n    const { showSelf } = this.state;\n\n    if (show && !showSelf) this._springShow();\n    else if (show === false && showSelf) this._springHide();\n  }\n\n  componentWillUnmount() {\n    HwBackHandler.removeEventListener(HW_BACK_EVENT, this._handleHwBackEvent);\n  }\n}\n\nAwesomeAlert.propTypes = {\n  show: PropTypes.bool,\n  animatedValue: PropTypes.number,\n  useNativeDriver: PropTypes.bool,\n  showProgress: PropTypes.bool,\n  title: PropTypes.string,\n  message: PropTypes.string,\n  closeOnTouchOutside: PropTypes.bool,\n  closeOnHardwareBackPress: PropTypes.bool,\n  showCancelButton: PropTypes.bool,\n  showConfirmButton: PropTypes.bool,\n  cancelText: PropTypes.string,\n  confirmText: PropTypes.string,\n  cancelButtonColor: PropTypes.string,\n  confirmButtonColor: PropTypes.string,\n  onCancelPressed: PropTypes.func,\n  onConfirmPressed: PropTypes.func,\n  customView: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.node,\n    PropTypes.func,\n  ]),\n  modalProps: PropTypes.object,\n  cancelButtonTestID: PropTypes.string,\n  confirmButtonTestID: PropTypes.string\n};\n\nAwesomeAlert.defaultProps = {\n  show: false,\n  animatedValue: 0.3,\n  useNativeDriver: false,\n  showProgress: false,\n  closeOnTouchOutside: true,\n  closeOnHardwareBackPress: true,\n  showCancelButton: false,\n  showConfirmButton: false,\n  cancelText: 'Cancel',\n  confirmText: 'Confirm',\n  cancelButtonColor: '#D0D0D0',\n  confirmButtonColor: '#AEDEF4',\n  customView: null,\n  modalProps: {},\n  cancelButtonTestID: 'awesome-alert-cancel-btn',\n  confirmButtonTestID: 'awesome-alert-confirm-btn'\n};\n"]},"metadata":{},"sourceType":"module"}